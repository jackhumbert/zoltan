// This file has been generated by zoltan (https://github.com/jac3km4/zoltan)


// START_DECL HEADER
struct RED4ext::IFunction::Invokable {}
// END_DECL

// START_DECL HEADER
struct RED4ext::IFunction::Invokable_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::HeadLookAtStruct {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::TPPCameraComponent {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::TPPCameraComponent_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CGameFramework {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CGameFramework_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Map<RED4ext::CName, RED4ext::Variant *> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CBaseFunction {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CBaseFunction_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::res::StreamedResource {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::game::PersistentState> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::IWidgetLogicController {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::IWidgetLogicController_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::UpdateEntry {}
// END_DECL

// START_DECL HEADER
struct RED4ext::HashMap<unsigned long long, void *> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::move::Component {}
// END_DECL

// START_DECL HEADER
struct RED4ext::move::Component_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Box {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::IBlackboard {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::IBlackboard_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::Unk570::SmearFxLookup {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::game::CameraComponent> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::CClass::Listener> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::action::ActionInterface::Lookup {}
// END_DECL

// START_DECL HEADER
struct RED4ext::HashMap::NodeList {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::TPPCameraData {}
// END_DECL

// START_DECL HEADER
struct RED4ext::loc::VoiceTag {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CClassFunction {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CClassFunction_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::v0::GameState {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CallbackStruct {}
// END_DECL

// START_DECL HEADER
struct RED4ext::WeakHandle<RED4ext::ink::Layer> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::TireUpdate {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemEntityTransforms> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Memory::Allocator<RED4ext::Memory::PoolEngine> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Memory::Allocator<RED4ext::Memory::PoolEngine>_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::SharedDataBuffer {}
// END_DECL

// START_DECL HEADER
struct RED4ext::SWeaponPlaneParams {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CallbackId {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::appearance::AppearancePart> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::BaseStream::__anonymous2 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::BaseStream::__anonymous2_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::AnimatedComponent {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::AnimatedComponent_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::AirControlAxis {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::physics::GeometryCache> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::SharedPtrBase<T> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::JobHandle {}
// END_DECL

// START_DECL HEADER
struct RED4ext::IDynamicStorage {}
// END_DECL

// START_DECL HEADER
struct RED4ext::IDynamicStorage_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<unsigned int> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::WidgetBaseComponent_Helper {}
// END_DECL

// START_DECL HEADER
struct RED4ext::WidgetBaseComponent_Helper_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::loc::VoiceTagListResource {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Callback<void (*)(RED4ext::IScriptable &, RED4ext::Handle<RED4ext::IScriptable> &), 16> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Vector3 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ScriptGameInstance {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::WidgetLogicController {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::WidgetLogicController_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::EGameStateType> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ink::SpawningProcessor> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ink::StyleResourceWrapper> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemEntityTransactor {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemEntityTransactor_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<void *> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::JobQueue {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemPrefabInstancing {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemPrefabInstancing_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeEntityRegistry> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemRemoteViews {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemRemoteViews_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::NodeInstanceRegistry {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::NodeInstanceRegistry_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeScene {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::GameAudioSystem {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::GameAudioSystem_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ISerializable {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ISerializable_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::MultiChildren {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::MultiChildren_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::vehicle::TPPCameraPreset> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::anim::AnimFeature_FPPCamera {}
// END_DECL

// START_DECL HEADER
struct RED4ext::anim::AnimFeature_FPPCamera_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::physics::ProxyID> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::NodeInstanceRegistry::NodeInstanceRegistryItem {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CString {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::PlayerSocket {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::MaterialReference {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemEffectAttachments {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemEffectAttachments_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::GameEntity {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::GameEntity_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::SystemBody {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::SystemBody_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::Controller {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::Controller_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemStreamingQuery> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::PID {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CMeshMaterialEntry {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemDismemberment {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemDismemberment_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::BaseProxy {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::BaseProxy_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::PersistentDataPS {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::PersistentDataPS_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::ProxyCacheID {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::AirControl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::SectorCacheEntry {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::EntityEmitter {}
// END_DECL

// START_DECL HEADER
struct RED4ext::debug::RuntimeSystemSpeedSplinePreview {}
// END_DECL

// START_DECL HEADER
struct RED4ext::debug::RuntimeSystemSpeedSplinePreview_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::StyleResourceWrapper {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::StyleResourceWrapper_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::physics::CustomFilterData> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::CallbackInstance> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::EntityInstanceData {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::EntityInstanceData_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::ent::VisualControllerDependency> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CallbackDefinition {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::TPPCameraUpdate {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemTransformAnimator {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemTransformAnimator_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::IAttachment {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::IAttachment_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::appearance::AppearancePart {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::UnkD10 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemScenes> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::GameOptionManager {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::game::IHitShape> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::PSInterface {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::PSInterface_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DeferredDataBuffer {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ent::SlotComponent> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::game::FPPCameraComponent> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::PhysicsJointDriveVelocity {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::IMoverComponent {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::IMoverComponent_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::AudioMetadata {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::AudioMetadata_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemTransformAnimator> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::Emitters {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::ISkinableComponent {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::ISkinableComponent_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::Weapon {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeInfo {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeInfo_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CClass {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CClass_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::PersistencySystem {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::PersistencySystem_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CCompiledCode {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::ent::Slot> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::AnimationSystem> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::ink::PropertyBinding> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::anim::Processor {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::anim::Processor_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::anim::Event>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::HDRColor {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::ItemObject {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::ItemObject_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::physics::ISystemObject> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::VirtualWindow {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::VirtualWindow_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::VehicleInterface3 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::VehicleInterface3_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::physics::PhysicalJointPin> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemNodeStreaming> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemTriggers> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::VehicleMechanicalData {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ink::anim::Definition> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ent::ITransformBinding> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::VehicleEmitterPositionData {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::loc::VoiceTagListResource> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemDestruction {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemDestruction_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::v0::SemVer::PrereleaseInfo {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ink::IEffect> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::anim::AnimFeature_VehiclePassenger {}
// END_DECL

// START_DECL HEADER
struct RED4ext::anim::AnimFeature_VehiclePassenger_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::IPlacedComponent {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::IPlacedComponent_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::NodeInstanceRegistry> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::vehicle::PortalsList> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::UpdateManager::UpdateStorage> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::VehicleInteriorParameterData {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::debug::RuntimeSystemSpeedSplinePreview> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::mesh::MeshAppearance {}
// END_DECL

// START_DECL HEADER
struct RED4ext::mesh::MeshAppearance_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemWeather {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemWeather_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::GeometryCache::LoadSectorGeometriesStruct {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::EntityEmitters {}
// END_DECL

// START_DECL HEADER
struct RED4ext::WeakHandle<RED4ext::ent::IComponent> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::WheelUpdate {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemPhysics> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::appearance::AppearanceDefinition {}
// END_DECL

// START_DECL HEADER
struct RED4ext::appearance::AppearanceDefinition_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CClassStaticFunction {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CClassStaticFunction_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::physics::BaseProxy>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::BaseObject {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::BaseObject_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::v0::SemVer {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::physics::SectorEntry> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::WidgetLibraryItemInstance {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::WidgetLibraryItemInstance_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::vehicle::ChassisComponent> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::BaseStream {}
// END_DECL

// START_DECL HEADER
struct RED4ext::BaseStream_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CProperty {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::anim::Definition>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::anim::Sequence>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::InternalFunctionalTestsRuntimeSystem {}
// END_DECL

// START_DECL HEADER
struct RED4ext::InternalFunctionalTestsRuntimeSystem_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::CameraManager {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::CameraManager_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::VehiclePhysicsInsert1 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::MaterialFx {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::anim::Interpolator>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::IWorkspotSystem {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::IWorkspotSystem_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ent::IAttachment> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<unsigned char> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::RefCnt {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::physics::ApperanceMaterial> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::VehicleMetadata {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::VehicleMetadata_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::anim::Interpolator {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::anim::Interpolator_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::game::interactions::Component> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::move::Component> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::IVehicleSystem {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::IVehicleSystem_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::UpdateManager {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::Unk570::Unk40 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::GameSystemData {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::PersistentID {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::game::OccupantSlotData> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::ApperanceMaterial {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemEntityAppearanceChanger {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemEntityAppearanceChanger_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::CMaterialInstance>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::StaticArray<RED4ext::physics::ProxyManager::Unk102010, 65535> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::HashMap<RED4ext::CName, RED4ext::CClassFunction *> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<float> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemPrefabInstancing> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemEntityTransforms {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemEntityTransforms_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemEntity {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemEntity_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::UserData {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::UserData_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::CompoundWidget {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::CompoundWidget_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::WeakHandle<RED4ext::ink::WidgetLibraryResource> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::SelfHandle<RED4ext::CResource> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::nav::RuntimeSystemPathfinding> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::VehicleDoorsSettingsMetadata {}
// END_DECL

// START_DECL HEADER
struct RED4ext::anim::AnimFeature {}
// END_DECL

// START_DECL HEADER
struct RED4ext::anim::AnimFeature_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::vehicle::CameraManager> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::SystemResource {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::ComponentsStorage {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::ComponentsStorage_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::v0::Logger {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::AudioPSData {}
// END_DECL

// START_DECL HEADER
struct RED4ext::HashMap<void *, void *> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::data::BaseObject_Record {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::data::BaseObject_Record_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::FunctionalTestsRuntimeSystem {}
// END_DECL

// START_DECL HEADER
struct RED4ext::FunctionalTestsRuntimeSystem_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::action::ActionInterface {}
// END_DECL

// START_DECL HEADER
struct RED4ext::action::ActionInterface_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::SpawningProcessor {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::SpawningProcessor_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Matrix> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::IMaterial>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::Unk570::CollisionFxLookup {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemWeather> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeEntityRegistry {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeEntityRegistry_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::ComponentHelper {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::ComponentHelper_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::EmitterPosition {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::Unk568 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::MetadataManager {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::MetadataManager_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::game::data::VehicleDriveModelData_Record> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemAudio {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemAudio_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::WaterParams {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::ResourcePath> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::UnkD10::Wheel::UnkE0 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::StaticArray<RED4ext::physics::ProxyCacheID, 65535> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemEffectAttachments> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::VehiclePhysicsInsert2 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemCamera> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::WeakHandle<RED4ext::game::Object> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::physics::SystemJoint> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::CMaterialInstance> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ink::MultiChildren> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::anim::AnimFeature_FPPCamera> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::VehicleSystem {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::VehicleSystem_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemTraffic {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemTraffic_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::ColliderSphere {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::ColliderSphere_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::InternalFunctionalTestsRuntimeSystem> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ink::anim::Interpolator> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::WeakHandle<RED4ext::vehicle::BaseObject> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::TireParameterUpdate::Variables {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::MaterialCondition {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::Emitter {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::CorpseSystem {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::CorpseSystem_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::DestructionPSData {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::anim::SequenceTargetInfo>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::PhysicsJointLimitBase {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::ComponentPS {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::ComponentPS_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::Unk570::FxSettings {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::vehicle::BaseObject> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::Slot {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemVisibility> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::interactions::InteractionDefinitionOverrider {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ink::Widget> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ink::anim::Processor> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::net::EntitySystem {}
// END_DECL

// START_DECL HEADER
struct RED4ext::net::EntitySystem_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::StaticArray<RED4ext::vehicle::WheelRuntimePSData, 4> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::ent::Factory> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::game::HitShapeUserData> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::WidgetLibraryItem {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::physics::ICollider> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::CarBaseObject {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::CarBaseObject_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Memory::AllocationResult {}
// END_DECL

// START_DECL HEADER
struct RED4ext::anim::AnimSetup {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::ui::RuntimeSystemUI> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::RenderSceneLayerMask {}
// END_DECL

// START_DECL HEADER
struct RED4ext::WidgetBaseComponent {}
// END_DECL

// START_DECL HEADER
struct RED4ext::WidgetBaseComponent_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemSnapSovler> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::IGameInstance {}
// END_DECL

// START_DECL HEADER
struct RED4ext::IGameInstance_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CallbackStorage {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::game::Puppet> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::anim::AnimSetupEntry> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemMoverComponents {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemMoverComponents_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::JobParamSet {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::IGameSystem::HighLow {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::CanvasWidget {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::CanvasWidget_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::WorldTransform {}
// END_DECL

// START_DECL HEADER
struct RED4ext::appearance::AppearancePartOverrides {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Map<RED4ext::CString, RED4ext::CString> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::Thing::__anonymous7 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::GameSystemData> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::CustomFilterData {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::CustomFilterData_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::vehicle::Unk570::Unk40> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::vehicle::PersistentDataPS> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemCompiledTerrain> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Quaternion {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::FallbackSlot {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::RuntimeSystemLights {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::RuntimeSystemLights_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::HitShapeContainer {}
// END_DECL

// START_DECL HEADER
struct RED4ext::action::ActionBase {}
// END_DECL

// START_DECL HEADER
struct RED4ext::action::ActionBase_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemFoliage {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemFoliage_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ink::WidgetLibraryItemInstance> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::IVisualComponent {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::IVisualComponent_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemMarkers {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemMarkers_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemDismemberment> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::WidgetHudComponentInterface::Widget> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::anim::AnimSetupEntry {}
// END_DECL

// START_DECL HEADER
struct RED4ext::weapon::Object {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::IComponentHelper {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::IComponentHelper_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::TPPCameraPreset {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::physics::SystemBody> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemTriggers {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemTriggers_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::BaseProxyDesc {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::UITransform {}
// END_DECL

// START_DECL HEADER
struct RED4ext::StaticArray<RED4ext::physics::ProxyCacheEntry, 65535> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::UpdatableSystems {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::ProxyCacheEntry {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::BankManager {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ink::PropertyManager> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::Window {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::Window_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::data::SpawnableObject_Record {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::data::SpawnableObject_Record_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::TimeDilatable {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::TimeDilatable_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::NodeRef {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::EmitterPositions {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::CallbackManager> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::Puppet {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::Puppet_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::ICollider {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::ICollider_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::physics::SystemJoint>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::PropertyBinding {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::WheeledBaseObject {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::WheeledBaseObject_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::Thing::__anonymous5 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CNamePool {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::TagMask {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::IHitShape {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::IHitShape_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::VehicleWheelData {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ink::UserData> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DataBuffer {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::ProxyManager {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ink::anim::Sequence> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::action::ActionBase> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::PhysicsJointLimitConePair {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::Unk570 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::IScriptable {}
// END_DECL

// START_DECL HEADER
struct RED4ext::IScriptable_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::VehicleInterface1 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::VehicleInterface1_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::loc::VoiceTag> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::ISourceBinding {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::ISourceBinding_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::FunctionalTestsIRuntimeSystem {}
// END_DECL

// START_DECL HEADER
struct RED4ext::FunctionalTestsIRuntimeSystem_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::IScriptable>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::world::EffectBlackboard>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CBaseGameApplication {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CBaseGameApplication_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::Object {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::Object_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ent::IComponent> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemPhysics {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemPhysics_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Vector2 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ent::IComponent>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::QueryFilter {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RenderingInterface1 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RenderingInterface1_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::SimulationFilter {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemEnvironment {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemEnvironment_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::ProxyManager::Unk102010 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::IRuntimeSystem {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::IRuntimeSystem_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::CActionsFactory {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::CActionsFactory_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::AkMemSettings {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::AutoDataUnkC8 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::AutoDataUnkC8_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CClass::Flags {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::UnkC8 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::WidgetLogicController>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::ui::RuntimeSystemUI {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::ui::RuntimeSystemUI_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::FixedPoint {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::EntityID {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemEffects {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemEffects_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::SlotComponent {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::SlotComponent_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::CClassStaticFunction *> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::game::interactions::IShapeDefinition>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CProperty::Flags {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemWorldStreaming> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ink::IWidgetController> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::BikeBaseObject {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::BikeBaseObject_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::CProperty *> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemDebugRendering {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemDebugRendering_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::work::WorkspotSystem> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemScenes {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemScenes_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::IGameAudioSystem {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::IGameAudioSystem_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::vehicle::Controller> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::geometry::RuntimeSystemGeomDescription {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::geometry::RuntimeSystemGeomDescription_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::game::HitRepresentationOverride> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::INodeInstanceRegistry {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::INodeInstanceRegistry_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::Factory {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::Factory_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Update {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::CorpseSystem> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::interactions::IShapeDefinition {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::interactions::IShapeDefinition_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::VehicleSystem::HandleStorage {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::WheeledBaseObject::Unk980 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<void> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::WeakPtrWithAccess<T> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::Thing::__anonymous9 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::Margin {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::audio::GameParameter> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemEntityVisualController> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::ent::FallbackSlot> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::PortalsList {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::PortalsList_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemEnvironment> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::FunctionalTestsRuntimeSystem> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::v0::PluginInfo {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemRepellerComponents {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemRepellerComponents_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::EulerAngles {}
// END_DECL

// START_DECL HEADER
struct RED4ext::red::TagList {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::mesh::LocalMaterialHeader> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::anim::SequenceTargetInfo {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::anim::SequenceTargetInfo_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::mesh::MeshParameter> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::game::IBlackboard> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::EntityReference {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::GameParameter {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemNavigation> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::IEffect>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::ActionReplicatedState {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::WheelRuntimePSData {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::GameParameterStorage {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::ITransformBinding {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::ITransformBinding_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CBaseRTTIType {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CBaseRTTIType_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CallbackInstance {}
// END_DECL

// START_DECL HEADER
struct RED4ext::RTTIRegistrator {}
// END_DECL

// START_DECL HEADER
struct RED4ext::GameOptionManager::Unk00 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ink::anim::Event> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::VehicleTemperatureSettings {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemSmartObjects {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemSmartObjects_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::IGameState {}
// END_DECL

// START_DECL HEADER
struct RED4ext::IGameState_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CMesh {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CMesh_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Map<RED4ext::CName, RED4ext::GameOptionManager::Unk00::Entry> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::ChassisComponent {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::ChassisComponent_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::OccupantSlotData {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemEntity> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::CName> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::Object::Flags {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CString::__unnamed::__anonymous1 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Matrix {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::GameInstance {}
// END_DECL

// START_DECL HEADER
struct RED4ext::IFunction {}
// END_DECL

// START_DECL HEADER
struct RED4ext::IFunction_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::IComponent {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::IComponent_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::Widget {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::Widget_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::IWidgetController {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::IWidgetController_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::mesh::LocalMaterialHeader {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::Unk588 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::data::TweakDBRecord {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::data::TweakDBRecord_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Color {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::OccupantSlotComponent {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::OccupantSlotComponent_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::SystemBodyParams {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CStackFrame {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemNodeStreaming {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemNodeStreaming_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::work::WorkspotSystem {}
// END_DECL

// START_DECL HEADER
struct RED4ext::work::WorkspotSystem_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::VehicleInterface2 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::VehicleInterface2_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::data::Vehicle_Record {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::data::Vehicle_Record_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::game::interactions::InteractionDefinitionOverrider> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::WidgetHudComponentInterface::Widget {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::WorldPositionInterface {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::WorldPositionInterface_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::PhysicalMeshComponent {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::PhysicalMeshComponent_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::red::ResourceReferenceScriptToken {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Vector3> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RenderingInterface2 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RenderingInterface2_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::HitRepresentationOverride {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::HitRepresentationOverride_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CResource {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::GeometryKey {}
// END_DECL

// START_DECL HEADER
struct RED4ext::IUpdatableSystem {}
// END_DECL

// START_DECL HEADER
struct RED4ext::IUpdatableSystem_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::HashMap<unsigned long long, unsigned long long> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::BaseCameraComponent {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::BaseCameraComponent_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ent::Entity> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::SharedMutex {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::IBinding {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::IBinding_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::VisualControllerComponent {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::VisualControllerComponent_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemEntityVisualController {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemEntityVisualController_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::WidgetLayout {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::anim::Definition {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::anim::Definition_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::CameraComponent {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::CameraComponent_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::LocalizationString {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::Thing {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CName {}
// END_DECL

// START_DECL HEADER
struct RED4ext::nav::RuntimeSystemPathfinding {}
// END_DECL

// START_DECL HEADER
struct RED4ext::nav::RuntimeSystemPathfinding_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::game::interactions::IShapeDefinition> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::TPPCameraSmoothQuaternion {}
// END_DECL

// START_DECL HEADER
struct RED4ext::appearance::PartComponentOverrides {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CGameApplication {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CGameApplication_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::anim::Event {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::anim::Event_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::ink::WidgetLibraryItem> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::PuppetBase {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::PuppetBase_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::PropertyManager {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::PropertyManager_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::interactions::Component {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::interactions::Component_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemCamera {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemCamera_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::GameOptionManager::Unk28 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<void *> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Unk530 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::IMaterial {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemFoliage> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::CMeshMaterialEntry> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemSmartObjects> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::CustomEmitterMetadata {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::CustomEmitterMetadata_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Vector4 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::game::RuntimeSystemLights> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::WidgetHudComponentInterface {}
// END_DECL

// START_DECL HEADER
struct RED4ext::WidgetHudComponentInterface_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemBinkUpdate {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemBinkUpdate_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<unsigned long long> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::mesh::MeshParameter {}
// END_DECL

// START_DECL HEADER
struct RED4ext::mesh::MeshParameter_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<T> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::WorldPosition {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::Children {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::Children_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::ProxyCache {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemStreamingQuery {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemStreamingQuery_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Variant {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemTraffic> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::HashMap::Node {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ink::LayerProxy> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::anim::Sequence {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::anim::Sequence_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::TPPCameraSmoothFloat {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemSnapSovler {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemSnapSovler_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::EffectBlackboard> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CallbackHandler<void (*)(RED4ext::Update *, RED4ext::Unk2, void *, void *)> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemWorldStreaming {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemWorldStreaming_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::UserData>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::DynArray<RED4ext::CName>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::ISystemObject {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::ISystemObject_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::physics::SystemResource> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::MaterialResource {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::WidgetLibraryResource {}
// END_DECL

// START_DECL HEADER
struct RED4ext::IRenderResourceBlob {}
// END_DECL

// START_DECL HEADER
struct RED4ext::IRenderResourceBlob_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::IActionsFactory {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::IActionsFactory_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::physics::GeometryKey> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemRemoteViews> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemCompiledTerrain {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemCompiledTerrain_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemNavigation {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemNavigation_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::vehicle::TPPCameraComponent> {}
// END_DECL

// START_DECL HEADER
struct __unnamed::__unnamed::HINSTANCE__ {}
// END_DECL

// START_DECL HEADER
struct RED4ext::WeakHandle<RED4ext::ink::LayerProxy> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::AnimTrackParameter {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::physics::SectorCacheEntry> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::Physics {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::Physics_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Vector4> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::net::EntitySystem> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::VehicleGeneralData {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::PhysicsJointAngularLimitPair {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::mesh::MeshAppearance> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::TweakDBID {}
// END_DECL

// START_DECL HEADER
struct RED4ext::StaticArray<RED4ext::ent::ITransformAttachable, 65535> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::geometry::RuntimeSystemGeomDescription> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ink::anim::SequenceTargetInfo> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::game::GameFeatureManager> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CClass::Listener {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::physics::ColliderSphere> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::Unk570::Unk30 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::GameFeatureManager {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::GameFeatureManager_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::ui::MeshTargetBinding {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::ui::MeshTargetBinding_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::ControllerProcessor {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::ControllerProcessor_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ISerializable> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemEntityAppearanceChanger> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::IWidgetController>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::appearance::AppearancePartOverrides> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::GameOptionManager::Unk00::Entry {}
// END_DECL

// START_DECL HEADER
struct RED4ext::mesh::MeshMaterialBuffer {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::IScriptable> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ResourcePath {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ent::Entity>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::Component {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::Component_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::RawBuffer {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::FPPCameraComponent {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::FPPCameraComponent_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::v0::Sdk {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemEffects> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::IRenderResourceBlob> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::Widget>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::EntityParametersBuffer {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::data::VehicleDriveModelData_Record {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::data::VehicleDriveModelData_Record_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ResourceAsyncReference<> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::vehicle::Weapon> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemDestruction> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::UnkD10::Wheel {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemEntityTransactor> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::Metadata {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CBaseFunction::Flags {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemVisibility {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemVisibility_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::HitShapeUserData {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::HitShapeUserData_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::game::OccupantSlotComponent> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::v0::FileVer {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeDescription {}
// END_DECL

// START_DECL HEADER
struct RED4ext::GameInstance {}
// END_DECL

// START_DECL HEADER
struct RED4ext::GameInstance_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::GeometryCache {}
// END_DECL

// START_DECL HEADER
struct RED4ext::JobGroup {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::AutonomousData {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::AutonomousData_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::ProxyCacheManager::Unk948 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::TireParameterUpdate {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::Thing::__anonymous6 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::NodeRef> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::appearance::PartComponentOverrides> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::SystemJoint {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::SystemJoint_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::PhysicsJointDrive {}
// END_DECL

// START_DECL HEADER
struct RED4ext::SharedPtrWithAccess<T> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::game::data::Vehicle_Record> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ink::VirtualWindow> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::StaticArray<RED4ext::Handle<RED4ext::physics::BaseProxy>, 65535> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemMarkers> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::vehicle::Unk570::Unk30> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::EntityEmitters::Emitter {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::LayerProxy {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::LayerProxy_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::UpdateManager::UpdateStorage {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemRendering {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::RuntimeSystemRendering_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<void *>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CallbackManager {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::mesh::MeshAppearance>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemRepellerComponents> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ink::ControllerProcessor> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::PersistentState {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::PersistentState_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::IMaterial> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::CMesh> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::CClassFunction *> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemDebugRendering> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::physics::BaseProxy> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::physics::FilterData> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemRendering> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::ent::AnimTrackParameter> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ent::AnimationControlBinding> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::VisualControllerDependency {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::AnimationSystem {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::AnimationSystem_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<unsigned long long[4]> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::AnimationControlBinding {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::AnimationControlBinding_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemAudio> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::MeshComponent {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::MeshComponent_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Memory::EngineAllocator {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Memory::EngineAllocator_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::ui::MeshTargetBinding> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::EffectBlackboard {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::EffectBlackboard_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::EntityDefinition {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CMaterialInstance {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::Entity {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::Entity_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ent::RuntimeSystemEditorMeshes> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::IGameSystem {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::IGameSystem_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemBinkUpdate> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::PhysicalJointPin {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::PhysicalJointPin_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::CarPhysics {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::CarPhysics_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::WeakHandle<RED4ext::ink::Widget> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::Unk368 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::world::RuntimeSystemMoverComponents> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ent::IAttachment>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::ent::EntityInstanceData> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::PhysicsJointLinearLimit {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::ink::WidgetLogicController> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::v0::GameStates {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Transform {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::weapon::Object {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::weapon::Object_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::ProxyHelper {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::mesh::MeshParameter>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::TargetedCameraInterface {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::TargetedCameraInterface_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::physics::ICollider>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::world::IRuntimeSystem::Flags {}
// END_DECL

// START_DECL HEADER
struct RED4ext::net::Time {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::physics::SystemBody>> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::IPersistencySystem {}
// END_DECL

// START_DECL HEADER
struct RED4ext::game::IPersistencySystem_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::v0::Hooking {}
// END_DECL

// START_DECL HEADER
struct RED4ext::WeakHandle<RED4ext::ISerializable> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CRUID {}
// END_DECL

// START_DECL HEADER
struct RED4ext::NavGenNavigationSetting {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Handle<RED4ext::game::weapon::Object> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::BikePhysics {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::BikePhysics_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Memory::IAllocator {}
// END_DECL

// START_DECL HEADER
struct RED4ext::Memory::IAllocator_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::RuntimeSystemEditorMeshes {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::RuntimeSystemEditorMeshes_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::ITransformAttachable {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ent::ITransformAttachable_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::HashMap<RED4ext::CName, RED4ext::CProperty *> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::VehicleDoorsSettings {}
// END_DECL

// START_DECL HEADER
struct RED4ext::StaticArray<RED4ext::physics::ProxyCacheEntry *, 65535> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::Unk588::Unk40 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::UpdateManagerHolder {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::Unk580 {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::WheeledPhysics {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::WheeledPhysics_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::SectorEntry {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::IEffect {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::IEffect_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::vehicle::PhysicsData {}
// END_DECL

// START_DECL HEADER
struct RED4ext::CGameOptions {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::DeferredDataBuffer> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::DynArray<RED4ext::IGameState *> {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::Layer {}
// END_DECL

// START_DECL HEADER
struct RED4ext::ink::Layer_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::FilterData {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::FilterData_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::AudioMetadataBase {}
// END_DECL

// START_DECL HEADER
struct RED4ext::audio::AudioMetadataBase_vtbl {}
// END_DECL

// START_DECL HEADER
struct RED4ext::physics::ProxyID {}
// END_DECL

// START_DECL HEADER
union RED4ext::CallbackInstance::Type {}
// END_DECL

// START_DECL HEADER
union RED4ext::CallbackId::__anonymous4 {}
// END_DECL

// START_DECL HEADER
union RED4ext::CString::__anonymous0 {}
// END_DECL

// START_DECL HEADER
union RED4ext::CallbackId::__anonymous3 {}
// END_DECL

// START_DECL TYPE
enum RED4ext::vehicle::Type: int8_t {
  vehicleType_Car = 0,
  vehicleType_Bike = 1,
  vehicleType_AV = 2,
  vehicleType_Tank = 3,
  vehicleType_Yacht = 4,
  vehicleType_Unknown = 5,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::physics::StateValue: uint32_t {
  physicsStateValue_Position = 1,
  physicsStateValue_Rotation = 2,
  physicsStateValue_Transform = 3,
  physicsStateValue_LinearVelocity = 4,
  physicsStateValue_AngularVelocity = 5,
  physicsStateValue_LinearSpeed = 6,
  physicsStateValue_LinearDamping = 7,
  physicsStateValue_AngularDamping = 8,
  physicsStateValue_Displacement = 9,
  physicsStateValue_TouchesGround = 10,
  physicsStateValue_TouchesWalls = 11,
  physicsStateValue_ImpulseAccumulator = 12,
  physicsStateValue_IsSleeping = 13,
  physicsStateValue_LinearAndAngularVelocity = 15,
  physicsStateValue_Mass = 16,
  physicsStateValue_MassSpaceInertiaTensor = 17,
  physicsStateValue_Volume = 18,
  physicsStateValue_unk13 = 19,
  physicsStateValue_IsSimulated = 20,
  physicsStateValue_IsKinematic = 21,
  physicsStateValue_Gravity = 22,
  physicsStateValue_hasOneFlag = 23,
  physicsStateValue_unk18 = 24,
  physicsStateValue_getNbShapes = 25,
  physicsStateValue_unk1D = 29,
  physicsStateValue_unk1E = 30,
  physicsStateValue_unk1A = 26,
  physicsStateValue_TimeDeltaOverride = 27,
  physicsStateValue_Radius = 30,
  physicsStateValue_SimulationAndQueryData = 31,
  physicsStateValue_SimulationFilter = 32,
  physicsStateValue_QueryFilter = 33,
  physicsStateValue_shape_LocalPose = 34,
  physicsStateValue_Bounds = 35,
  physicsStateValue_Dimensions = 36,
  physicsStateValue_BoundsCenter = 37,
  physicsStateValue_CMassLocalPose = 38,
  physicsStateValue_unk27 = 39,
  physicsStateValue_setSize = 40,
  physicsStateValue_IsQueryable = 41,
  physicsStateValue_SimulationShape = 42,
  physicsStateValue_unk2B = 43,
  physicsStateValue_unk3B = 59,
  physicsStateValue_unk42 = 66,
  physicsStateValue_unk46 = 70,
  physicsStateValue_shape_NbMaterials = 71,
  physicsStateValue_shape_Materials = 72,
  physicsStateValue_RigidBodyFlag4and64 = 73,
  physicsStateValue_unk4A = 74,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::ent::Entity::ComponentFlags: uint8_t {
  entEntityComponentFlags_unk1 = 1,
  entEntityComponentFlags_hasAnimatedComponent = 2,
  entEntityComponentFlags_hasVisualControllerComponent = 4,
  entEntityComponentFlags_unk8 = 8,
  entEntityComponentFlags_unk20 = 32,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::physics::ProxyType: uint8_t {
  physicsProxyType_Invalid = 0,
  physicsProxyType_PhysicalSystem = 1,
  physicsProxyType_CharacterController = 2,
  physicsProxyType_Destruction = 3,
  physicsProxyType_ParticleSystem = 4,
  physicsProxyType_Trigger = 5,
  physicsProxyType_Cloth = 6,
  physicsProxyType_WorldCollision = 7,
  physicsProxyType_Terrain = 8,
  physicsProxyType_SimpleCollider = 9,
  physicsProxyType_AggregateSystem = 10,
  physicsProxyType_CharacterObstacle = 11,
  physicsProxyType_Ragdoll = 12,
  physicsProxyType_FoliageDestruction = 13,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::ink::EHorizontalAlign: uint8_t {
  inkEHorizontalAlign_Fill = 0,
  inkEHorizontalAlign_Left = 1,
  inkEHorizontalAlign_Center = 2,
  inkEHorizontalAlign_Right = 3,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::ent::MeshComponentLODMode: uint8_t {
  entMeshComponentLODMode_AlwaysVisible = 0,
  entMeshComponentLODMode_Appearance = 1,
  entMeshComponentLODMode_AppearanceProxy = 2,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::audio::ESoundCurveType: uint32_t {
  audioESoundCurveType_Log3 = 0,
  audioESoundCurveType_Sine = 1,
  audioESoundCurveType_InversedSCurve = 3,
  audioESoundCurveType_Linear = 4,
  audioESoundCurveType_SCurve = 5,
  audioESoundCurveType_Exp1 = 6,
  audioESoundCurveType_ReciprocalOfSineCurve = 7,
  audioESoundCurveType_Exp3 = 8,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::ERenderingPlane: uint32_t {
  ERenderingPlane_RPl_Scene = 0,
  ERenderingPlane_RPl_Background = 1,
  ERenderingPlane_RPl_Weapon = 2,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::UpdateTickGroup: uint8_t {
  UpdateTickGroup_FrameBegin = 0,
  UpdateTickGroup_Multiplayer_UpdateStateSnapshots = 1,
  UpdateTickGroup_EntityUpdateState = 2,
  UpdateTickGroup_PreBuckets = 3,
  UpdateTickGroup_Buckets = 4,
  UpdateTickGroup_PostBuckets = 5,
  UpdateTickGroup_CameraUpdate = 6,
  UpdateTickGroup_PlayerAimUpdate = 7,
  UpdateTickGroup_PostPlayerAimUpdate = 8,
  UpdateTickGroup_MappinsUpdate = 9,
  UpdateTickGroup_BlackboardCallbacks_SecondPass = 10,
  UpdateTickGroup_PreRenderUpdate = 11,
  UpdateTickGroup_Multiplayer_CaptureStateSnapshots = 12,
  UpdateTickGroup_Unknown = 13,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::ERenderObjectType: uint8_t {
  ERenderObjectType_ROT_Static = 0,
  ERenderObjectType_ROT_Terrain = 1,
  ERenderObjectType_ROT_Road = 2,
  ERenderObjectType_ROT_CustomCharacter1 = 12,
  ERenderObjectType_ROT_CustomCharacter2 = 13,
  ERenderObjectType_ROT_CustomCharacter3 = 14,
  ERenderObjectType_ROT_MainPlayer = 15,
  ERenderObjectType_ROT_NoAO = 16,
  ERenderObjectType_ROT_NoLighting = 17,
  ERenderObjectType_ROT_NoTXAA = 18,
  ERenderObjectType_ROT_Skinned = 20,
  ERenderObjectType_ROT_Character = 21,
  ERenderObjectType_ROT_Foliage = 22,
  ERenderObjectType_ROT_Grass = 23,
  ERenderObjectType_ROT_Vehicle = 24,
  ERenderObjectType_ROT_Weapon = 25,
  ERenderObjectType_ROT_Particle = 26,
  ERenderObjectType_ROT_Enemy = 27,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::physics::FilterDataSource: uint8_t {
  physicsFilterDataSource_Parent = 0,
  physicsFilterDataSource_Collider = 1,
  physicsFilterDataSource_Body = 1,
  physicsFilterDataSource_Component = 0,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::game::EActionFlags: uint16_t {
  gameEActionFlags_NONE = 0,
  gameEActionFlags_USE_ANIMATION = 1,
  gameEActionFlags_USE_MOVEMENT = 2,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::game::MountingSlotRole: uint32_t {
  gameMountingSlotRole_Driver = 0,
  gameMountingSlotRole_Passenger = 1,
  gameMountingSlotRole_Passenger_FR = 2,
  gameMountingSlotRole_Passenger_BL = 3,
  gameMountingSlotRole_Passenger_BR = 4,
  gameMountingSlotRole_Invalid = -1,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::NavGenNavmeshImpact: uint16_t {
  NavGenNavmeshImpact_Walkable = 0,
  NavGenNavmeshImpact_Ignored = 1,
  NavGenNavmeshImpact_Blocking = 2,
  NavGenNavmeshImpact_Road = 3,
  NavGenNavmeshImpact_CrowdWalkable = 4,
  NavGenNavmeshImpact_Stairs = 5,
  NavGenNavmeshImpact_Drones = 6,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::Unk1: uint8_t {
  Unk1_Entities_PreTick = 0,
  Unk1_Entities_ServiceEvents = 1,
  Unk1_PrePhysicsTick = 2,
  Unk1_UpdateTransformPrePhysics = 3,
  Unk1_PhysicsFlushBufferedState = 4,
  Unk1_PhysicsExecuteAsyncQueries = 5,
  Unk1_PostPhysicsSyncResults = 6,
  Unk1_UpdateTransformPostPhysics = 7,
  Unk1_AnimationUpdate = 8,
  Unk1_PostPhysicsTick = 9,
  Unk1_Entities_PostTick = 10,
  Unk1_Entities_PostServiceEvents = 11,
  Unk1_Unknown = 12,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::ink::WidgetResourceVersion: uint8_t {
  inkWidgetResourceVersion_Default = 0,
  inkWidgetResourceVersion_BrushToAtlas = 1,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::physics::SimulationType: uint8_t {
  physicsSimulationType_Static = 0,
  physicsSimulationType_Dynamic = 1,
  physicsSimulationType_Kinematic = 2,
  physicsSimulationType_Invalid = 3,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::game::EntityReferenceType: uint8_t {
  gameEntityReferenceType_EntityRef = 0,
  gameEntityReferenceType_Tag = 1,
  gameEntityReferenceType_SlotID = 2,
  gameEntityReferenceType_SceneActorContextName = 3,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::ink::EVerticalAlign: uint8_t {
  inkEVerticalAlign_Fill = 0,
  inkEVerticalAlign_Top = 1,
  inkEVerticalAlign_Center = 2,
  inkEVerticalAlign_Bottom = 3,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::ent::Entity::EntityState: uint8_t {
  entEntityEntityState_Detached = 2,
  entEntityEntityState_WillAttach = 3,
  entEntityEntityState_Attached = 4,
  entEntityEntityState_WillDetach = 5,
  entEntityEntityState_Preuninitialize = 6,
  entEntityEntityState_Uninitialized = 7,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::EGameStateStatus: int32_t {
  EGameStateStatus_Uninitialized = 0,
  EGameStateStatus_Initialized = 1,
  EGameStateStatus_Ran = 2,
  EGameStateStatus_Done = 3,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::ent::ForcedLodDistance: uint8_t {
  entForcedLodDistance_Default = 0,
  entForcedLodDistance_Background = 1,
  entForcedLodDistance_Regular = 2,
  entForcedLodDistance_Cinematic = 3,
  entForcedLodDistance_Vehicle = 4,
  entForcedLodDistance_CinematicVehicle = 5,
  entForcedLodDistance_VehicleInterior = 6,
  entForcedLodDistance_LargeVehicleInterior = 7,
  entForcedLodDistance_ConsoleLOD = 8,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::ink::anim::InterpolationMode: uint8_t {
  inkanimInterpolationMode_EasyIn = 0,
  inkanimInterpolationMode_EasyOut = 1,
  inkanimInterpolationMode_EasyInOut = 2,
  inkanimInterpolationMode_EasyOutIn = 3,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::ink::ETextureResolution: uint8_t {
  inkETextureResolution_UltraHD_3840_2160 = 0,
  inkETextureResolution_FullHD_1920_1080 = 1,
  inkETextureResolution_HD_1280_720 = 2,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::vehicle::PhysicsState: int32_t {
  vehiclePhysicsState_Traffic = 1,
  vehiclePhysicsState_Unk2 = 2,
  vehiclePhysicsState_Unk4 = 4,
  vehiclePhysicsState_Unk8 = 8,
  vehiclePhysicsState_Asleep = 16,
  vehiclePhysicsState_Unk20 = 32,
  vehiclePhysicsState_Parked = 64,
  vehiclePhysicsState_PlayerControlledMaybe = 128,
  vehiclePhysicsState_Chase = 256,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::ERTTIType: uint8_t {
  ERTTIType_Name = 0,
  ERTTIType_Fundamental = 1,
  ERTTIType_Class = 2,
  ERTTIType_Array = 3,
  ERTTIType_Simple = 4,
  ERTTIType_Enum = 5,
  ERTTIType_StaticArray = 6,
  ERTTIType_NativeArray = 7,
  ERTTIType_Pointer = 8,
  ERTTIType_Handle = 9,
  ERTTIType_WeakHandle = 10,
  ERTTIType_ResourceReference = 11,
  ERTTIType_ResourceAsyncReference = 12,
  ERTTIType_BitField = 13,
  ERTTIType_LegacySingleChannelCurve = 14,
  ERTTIType_ScriptReference = 15,
  ERTTIType_FixedArray = 16,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::ink::EAnchor: uint8_t {
  inkEAnchor_TopLeft = 0,
  inkEAnchor_TopCenter = 1,
  inkEAnchor_TopRight = 2,
  inkEAnchor_CenterLeft = 3,
  inkEAnchor_Centered = 4,
  inkEAnchor_CenterRight = 5,
  inkEAnchor_BottomLeft = 6,
  inkEAnchor_BottomCenter = 7,
  inkEAnchor_BottomRight = 8,
  inkEAnchor_TopFillHorizontaly = 9,
  inkEAnchor_CenterFillHorizontaly = 10,
  inkEAnchor_BottomFillHorizontaly = 11,
  inkEAnchor_LeftFillVerticaly = 12,
  inkEAnchor_CenterFillVerticaly = 13,
  inkEAnchor_RightFillVerticaly = 14,
  inkEAnchor_Fill = 15,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::ink::EChildOrder: uint8_t {
  inkEChildOrder_Forward = 0,
  inkEChildOrder_Backward = 1,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::EGameStateType: uint32_t {
  EGameStateType_BaseInitialization = 0,
  EGameStateType_Initialization = 1,
  EGameStateType_Running = 2,
  EGameStateType_Shutdown = 3,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::physics::BaseProxy::Flags: uint8_t {
  physicsBaseProxyFlags_unk40 = 64,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::physics::PhysicsJointMotion: uint8_t {
  physicsPhysicsJointMotion_Locked = 0,
  physicsPhysicsJointMotion_Limited = 1,
  physicsPhysicsJointMotion_Free = 2,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::vehicle::PID::IntegralState: int8_t {
  vehiclePIDIntegralState_Below = -1,
  vehiclePIDIntegralState_Equal = 0,
  vehiclePIDIntegralState_Above = 1,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::Unk2: uint8_t {
  Unk2_VeryCommon = 0,
  Unk2_FoliageDestructionTick = 1,
  Unk2_UpdateKick = 1,
  Unk2_UpdateFinish = 1,
  Unk2_OnPreWorldTick = 1,
  Unk2_SpawnShapes = 1,
  Unk2_UpdatePoolingKick = 2,
  Unk2_UpdatePoolingFinish = 2,
  Unk2_BatchRaycastResolverCall = 2,
  Unk2_BatchRaycastResolverGetResults = 2,
  Unk2_UpdateCloth = 2,
  Unk2_PrePhysics = 2,
  Unk2_Tick = 2,
  Unk2_FractureFieldsTick = 4,
  Unk2_CacheUpdate = 4,
  Unk2_CleanupOutOfBoundsStates = 4,
  Unk2_PostPhysics = 4,
  Unk2_CleanupUpdateKick = 4,
  Unk2_CleanupUpdateFinish = 4,
  Unk2_Common = 7,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::ink::ESizeRule: uint8_t {
  inkESizeRule_Fixed = 0,
  inkESizeRule_Stretch = 1,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::ink::anim::InterpolationDirection: uint8_t {
  inkanimInterpolationDirection_To = 0,
  inkanimInterpolationDirection_From = 1,
  inkanimInterpolationDirection_FromTo = 2,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::vehicle::PersistentDataPS::Flags: uint32_t {
  vehiclePersistentDataPSFlags_Awake = 2,
  vehiclePersistentDataPSFlags_QuestBraking = 4,
  vehiclePersistentDataPSFlags_PlayerControlled = 8192,
  vehiclePersistentDataPSFlags_InAir = 16384,
  vehiclePersistentDataPSFlags_PlayerControlledMaybe = 131072,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::game::EActionStatus: uint32_t {
  gameEActionStatus_STATUS_INVALID = 0,
  gameEActionStatus_STATUS_BOUND = 1,
  gameEActionStatus_STATUS_READY = 2,
  gameEActionStatus_STATUS_PROGRESS = 3,
  gameEActionStatus_STATUS_COMPLETE = 4,
  gameEActionStatus_STATUS_FAILURE = 5,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::ECookingPlatform: uint8_t {
  ECookingPlatform_PLATFORM_None = 0,
  ECookingPlatform_PLATFORM_PC = 1,
  ECookingPlatform_PLATFORM_XboxOne = 2,
  ECookingPlatform_PLATFORM_PS4 = 3,
  ECookingPlatform_PLATFORM_PS5 = 4,
  ECookingPlatform_PLATFORM_XSX = 5,
  ECookingPlatform_PLATFORM_WindowsServer = 6,
  ECookingPlatform_PLATFORM_LinuxServer = 7,
  ECookingPlatform_PLATFORM_GGP = 8,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::UpdateBucketEnum: uint8_t {
  UpdateBucketEnum_Vehicle = 0,
  UpdateBucketEnum_Character = 1,
  UpdateBucketEnum_AttachedObject = 2,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::ink::anim::InterpolationType: uint8_t {
  inkanimInterpolationType_Linear = 0,
  inkanimInterpolationType_Quadratic = 1,
  inkanimInterpolationType_Qubic = 2,
  inkanimInterpolationType_Quartic = 3,
  inkanimInterpolationType_Quintic = 4,
  inkanimInterpolationType_Sinusoidal = 5,
  inkanimInterpolationType_Exponential = 6,
  inkanimInterpolationType_Elastic = 7,
  inkanimInterpolationType_Circular = 8,
  inkanimInterpolationType_Back = 9,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::world::RuntimeInfo::Mode: uint8_t {
  worldRuntimeInfoMode_Unknown = 0,
  worldRuntimeInfoMode_Singleplayer = 1,
  worldRuntimeInfoMode_MultiplayerClient = 2,
  worldRuntimeInfoMode_MultiplayerServer = 3,
}
// END_DECL

// START_DECL TYPE
enum RED4ext::action::Type: uint16_t {
  actionType_Default = 0,
  actionType_DroneMoveOnSpline = 2,
  actionType_MoveToPosition = 4,
  actionType_MoveToDynamicNode = 5,
  actionType_MoveAlongTrafficPath = 8,
  actionType_SlideToSimple = 13,
  actionType_HitReaction = 24,
  actionType_CameraControl = 30,
  actionType_PlayerEquipItem = 31,
  actionType_ItemUnequipMaybe = 33,
  actionType_WallRunMaybe = 38,
  actionType_PlayerResizeCapsule = 42,
  actionType_PlayerClimb = 43,
  actionType_PlayerAdjust = 45,
  actionType_DriveToPointComplete = 56,
  actionType_DriveSummoning = 67,
  actionType_DrivePanic = 69,
  actionType_ActionVehicleSceneAnimationMotion = 71,
  actionType_IsSceneAnimationActive = 48,
  actionType_ShootMaybe = 52,
  actionType_ProjectileAttach = 53,
  actionType_DriveToPoint = 55,
  actionType_DriveChaseTarget = 57,
  actionType_DriveFollowTarget = 58,
  actionType_DriveFollowTargetComplete = 59,
  actionType_DriveMoveOnSpline = 60,
  actionType_DriveSplineReverse = 61,
  actionType_DriveFollowPosition = 62,
  actionType_DriveFollowSlot = 63,
  actionType_DriveStunned = 64,
  actionType_DriveJoinTraffic = 65,
  actionType_DriveCreateTrafficSlot = 66,
  actionType_DriveRacing = 68,
  actionType_DriveIdle = 70,
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::IFunction::Invokable  {
  RED4ext::IFunction::Invokable_vtbl *__vftable;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::IFunction::Invokable_vtbl {
  void (*sub_0)(RED4ext::IFunction::Invokable *__hidden this);
  void (*sub_8)(RED4ext::IFunction::Invokable *__hidden this);
  void (*Execute)(RED4ext::IFunction::Invokable *__hidden this, void*, RED4ext::CStackFrame&, void*, const RED4ext::CBaseRTTIType*);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::HeadLookAtStruct  {
  float maxYaw;
  float maxX;
  float centerYawThresholdX;
  float pitchUpY;
  float pitchDownY;
  float rotationSpeed;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::vehicle::TPPCameraComponent : RED4ext::game::CameraComponent {
  RED4ext::Handle<RED4ext::vehicle::BaseObject> vehicle;
  RED4ext::vehicle::TPPCameraData data;
  void* runtimePhysicsSystem;
  uint64_t unk318;
  RED4ext::WorldTransform initialTransform;
  RED4ext::WorldTransform unkWorldTransform340;
  RED4ext::WorldPosition unkWorldPosition360;
  RED4ext::Handle<RED4ext::vehicle::ChassisComponent> chassis;
  float pitch;
  float yaw;
  RED4ext::vehicle::TPPCameraSmoothFloat currentSpeed;
  RED4ext::vehicle::TPPCameraSmoothFloat airFlowDistortionSpeed;
  RED4ext::vehicle::TPPCameraSmoothFloat currentBoomLength;
  uint32_t unk3B8;
  uint32_t unk3BC;
  RED4ext::vehicle::TPPCameraSmoothQuaternion angularVelocitySmooth;
  RED4ext::vehicle::TPPCameraSmoothQuaternion drivingDirectionSmooth;
  RED4ext::vehicle::TPPCameraSmoothFloat isInAir;
  float autoCenterTimer;
  float boomLength;
  float cameraPitch;
  RED4ext::Vector3 cameraDirection;
  float slopeCorretionInAirLastValue;
  float currentAirFlowDistortionSpeed;
  RED4ext::WorldPosition unkWorldPosition470;
  float centeringDelta;
  uint8_t collisionDetection;
  uint8_t elasticBoomVelocity;
  uint8_t elasticBoomAcceleration;
  uint8_t drivingDirectionCompensation;
  uint8_t slopeAdjustement;
  uint8_t airFlowDistortion;
  uint8_t lockedCamera;
  uint8_t unk48B;
  float fov;
  float autoCenterStartTimeGamepad;
  float autoCenterStartTimeMouse;
  float autoCenterMaxSpeedThreshold;
  float autoCenterSpeed;
  float cameraMinPitch;
  float cameraMaxPitch;
  float cameraSphereRadius;
  float cameraBoomExtensionSpeed;
  float slopeCorrectionOnGroundStrength;
  float slopeCorrectionOnGroundPitchMin;
  float slopeCorrectionOnGroundPitchMax;
  float slopeCorrectionInAirPitchMin;
  float slopeCorrectionInAirPitchMax;
  float slopeCorrectionInAirSpeedMax;
  float slopeCorrectionInAirStrength;
  float slopeCorrectionInAirFallCoef;
  float slopeCorrectionInAirRaiseCoef;
  float slopeCorrectionInAirDampFactor;
  float drivingDirectionCompensationSpeedMin;
  float drivingDirectionCompensationSpeedMax;
  float drivingDirectionCompensationSpeedCoef;
  float drivingDirectionCompensationAngle;
  float drivingDirectionCompensationAngleSmooth;
  float drivingDirectionCompensationAngularVelocityMin;
  float elasticBoomForwardAccelerationCoef;
  float elasticBoomAccelerationExpansionLength;
  float elasticBoomSpeedExpansionSpeedMin;
  float elasticBoomSpeedExpansionSpeedMax;
  float elasticBoomSpeedExpansionLength;
  float headLookAtMaxYaw;
  float headLookAtCenterYawThreshold;
  float headLookAtMaxPitchUp;
  float headLookAtMaxPitchDown;
  float headLookAtRotationSpeed;
  RED4ext::DynArray<RED4ext::vehicle::TPPCameraPreset> cameraPresets;
  uint32_t presetDistance;
  uint32_t presetIndex;
  RED4ext::vehicle::TPPCameraPreset preset1;
  float timeSinceLastMovement;
  RED4ext::vehicle::TPPCameraPreset preset2;
  uint32_t presetIndex2;
  float airFlowDistortionAmplitude;
  RED4ext::vehicle::TPPCameraSmoothFloat airFlowDistortionXSmooth;
  RED4ext::vehicle::TPPCameraSmoothFloat airFlowDistortionYSmooth;
  float unk5B4;
  float airFlowDistortionX;
  float airFlowDistortionY;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::TPPCameraComponent_vtbl : RED4ext::game::CameraComponent_vtbl{
  bool (*sub_320)(RED4ext::vehicle::TPPCameraComponent *__hidden this, RED4ext::vehicle::HeadLookAtStruct*);
  bool (*sub_328)(RED4ext::vehicle::TPPCameraComponent *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::CGameFramework  {
  RED4ext::CGameFramework_vtbl *__vftable;
  void* updateManagerHolder;
  RED4ext::IGameInstance* gameInstance;
  RED4ext::world::RuntimeScene* runtimeScene;
  void* stateMachine;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CGameFramework_vtbl {
  RED4ext::Memory::IAllocator* (*GetAllocator)(RED4ext::CGameFramework *__hidden this);
  void (*Destruct)(RED4ext::CGameFramework *__hidden this, int8_t);
  void (*sub_10)(RED4ext::CGameFramework *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Map<RED4ext::CName, RED4ext::Variant *>  {
  RED4ext::DynArray<T> keys;
  RED4ext::DynArray<T> values;
  int32_t flags;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::CBaseFunction : RED4ext::IFunction {
  RED4ext::CName fullName;
  RED4ext::CName shortName;
  RED4ext::CProperty* returnType;
  int64_t unk20;
  RED4ext::DynArray<RED4ext::CProperty *> params;
  RED4ext::DynArray<RED4ext::CProperty *> localVars;
  RED4ext::HashMap<unsigned long long, void *> unk48;
  RED4ext::CCompiledCode bytecode;
  RED4ext::CBaseFunction::Flags flags;
  int32_t stackSize;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CBaseFunction_vtbl : RED4ext::IFunction_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::res::StreamedResource : RED4ext::CResource {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::game::PersistentState>  {
  RED4ext::game::PersistentState* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::IWidgetLogicController : RED4ext::IScriptable {
  RED4ext::WeakHandle<RED4ext::ink::Widget> widget;
  RED4ext::WeakHandle<RED4ext::ink::LayerProxy> layerProxy;
  RED4ext::WeakHandle<RED4ext::ISerializable> unk60;
  RED4ext::CName audioMetadataName;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::IWidgetLogicController_vtbl : RED4ext::IScriptable_vtbl{
  void (*OnInitialize)(RED4ext::ink::IWidgetLogicController *__hidden this);
  void (*OnUninitialize)(RED4ext::ink::IWidgetLogicController *__hidden this);
  void (*OnArrangeChildrenComplete)(RED4ext::ink::IWidgetLogicController *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::UpdateEntry  {
  int8_t* updateTickGroupStr;
  int8_t* srcStr;
  int8_t* funcStr;
  uint32_t unk18;
  uint32_t thread;
  uint32_t unk20;
  uint32_t unk24;
  uint32_t updateTickGroupHash32;
  uint32_t unk2C;
  uint32_t unk30;
  uint32_t unk34;
  uint16_t unk38;
  uint16_t unk3A;
  uint32_t unk3C;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::HashMap<unsigned long long, void *>  {
  uint32_t* indexTable;
  uint32_t size;
  uint32_t capacity;
  RED4ext::HashMap::NodeList nodeList;
  uint64_t allocator;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::move::Component : RED4ext::ent::IMoverComponent {
  uint64_t unk90;
  uint64_t unk98;
  uint64_t unkA0;
  uint64_t unkA8;
  uint64_t unkB0[17];
  uint64_t unk138;
  uint64_t unk140[6];
  uint64_t unk170;
  uint64_t unk178;
  uint64_t unk180;
  uint64_t unk188;
  RED4ext::Transform unk190;
  uint8_t unk1B0;
  uint8_t unk1B1;
  uint8_t unk1B2;
  uint8_t unk1B3;
  uint8_t unk1B4;
  uint8_t unk1B5;
  uint8_t unk1B6;
  uint8_t unk1B7;
  uint64_t unk1B8[1];
  RED4ext::WorldPosition unk1C0;
  uint64_t unk1D0[3];
  float unk1E8;
  float unk1EC;
  float unk1F0;
  float unk1F4;
  uint8_t unk1F8;
  uint8_t unk1F9;
  uint8_t unk1FA;
  uint8_t unk1FB;
  uint8_t unk1FC;
  uint8_t unk1FD;
  uint8_t unk1FE;
  uint8_t unk1FF;
  uint64_t unk200;
  uint64_t unk208;
  uint64_t unk210;
  uint64_t unk218;
  float unk220;
  float unk224;
  float unk228;
  float unk22C;
  uint64_t unk230[12];
  uint64_t unk290;
  uint64_t unk298;
  float unk2A0;
  float unk2A4;
  float unk2A8;
  float unk2AC;
  float unk2B0;
  float unk2B4;
  float unk2B8;
  float unk2BC;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::move::Component_vtbl : RED4ext::ent::IMoverComponent_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Box  {
  RED4ext::Vector4 Min;
  RED4ext::Vector4 Max;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::IBlackboard : RED4ext::IScriptable {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::IBlackboard_vtbl : RED4ext::IScriptable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::Unk570::SmearFxLookup  {
  RED4ext::CName skid_marks_decal;
  RED4ext::CName tire_tracks_decal;
  bool loaded;
  uint32_t unk1C;
  float distance;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::game::CameraComponent>  {
  RED4ext::game::CameraComponent* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::CClass::Listener>  {
  RED4ext::CClass::Listener* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::action::ActionInterface::Lookup  {
  RED4ext::DynArray<RED4ext::action::ActionBase> prePhysics;
  RED4ext::DynArray<RED4ext::action::ActionBase> postPhysics;
  uint32_t numArrays;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::HashMap::NodeList  {
  RED4ext::HashMap::Node* nodes;
  uint32_t capacity;
  uint32_t stride;
  uint32_t nextIdx;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::TPPCameraData  {
  RED4ext::Vector4 linearVelocity;
  RED4ext::Quaternion orientation;
  float yawDelta;
  float pitchDelta;
  uint8_t isUsingMouse;
  uint8_t unk29;
  uint8_t unk2A;
  uint8_t unk2B;
  float unk2C;
  uint8_t isInAir;
  uint8_t unk31[7];
  float unk38;
  float unk3C;
  RED4ext::Vector4 angularVelocity;
  float affectsPitch;
  uint8_t unk54;
  uint8_t unk55;
  uint8_t unk56;
  uint8_t unk57;
  void* cameraSystem;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::loc::VoiceTag  {
  RED4ext::CName voiceTag;
  bool isApuc;
  uint8_t unk09[7];
  RED4ext::CString voicesetScenePath;
  RED4ext::CRUID id;
  uint8_t unk38[8];
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::CClassFunction : RED4ext::CBaseFunction {
  RED4ext::CClass* parent;
  uint32_t regIndex;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CClassFunction_vtbl : RED4ext::CBaseFunction_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::v0::GameState  {
  bool(* OnEnter)(RED4ext::CGameApplication*);
  bool(* OnUpdate)(RED4ext::CGameApplication*);
  bool(* OnExit)(RED4ext::CGameApplication*);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CallbackStruct  {
  void(* Callback)(RED4ext::CallbackDefinition*, RED4ext::IScriptable*, void*);
  void(* StoreDefinition)(RED4ext::Update*, RED4ext::Update*);
  void(* CopyStorage)(RED4ext::Update*, RED4ext::Update*);
  void(* Destruct)(RED4ext::CallbackStorage*);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::WeakHandle<RED4ext::ink::Layer> : RED4ext::WeakPtrWithAccess<T> {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::TireUpdate  {
  void* __vftable;
  float unk08;
  float unk0C;
  float veh_tire_surface;
  float veh_tire_lat_slip_ratio;
  float veh_tire_long_slip_ratio;
  float skidValue;
  float skidValue2;
  float unk24;
  uint8_t veh_tire_contact;
  uint8_t unk29;
  uint8_t veh_tire_water;
  uint8_t unk2B;
  uint8_t unk2C;
  uint8_t unk2D;
  uint8_t unk2E;
  uint8_t unk2F;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemEntityTransforms>  {
  RED4ext::world::RuntimeSystemEntityTransforms* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::Memory::Allocator<RED4ext::Memory::PoolEngine> : RED4ext::Memory::IAllocator {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Memory::Allocator<RED4ext::Memory::PoolEngine>_vtbl : RED4ext::Memory::IAllocator_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::SharedDataBuffer  {
  int64_t unk00;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::SWeaponPlaneParams  {
  float weaponNearPlaneCM;
  uint8_t unk04[20];
  float blurIntensity;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CallbackId  {
  RED4ext::CallbackId::__anonymous3 action;
  RED4ext::CallbackId::__anonymous4 name;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::appearance::AppearancePart>  {
  RED4ext::appearance::AppearancePart* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::BaseStream::__anonymous2  {
  RED4ext::BaseStream::__anonymous2_vtbl *__vftable;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::BaseStream::__anonymous2_vtbl {
  void (*sub_18)(RED4ext::BaseStream::__anonymous2 *__hidden this, RED4ext::Handle<void>*, uint32_t);
  void (*sub_48)(RED4ext::BaseStream::__anonymous2 *__hidden this, uint32_t, RED4ext::Handle<void>*);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::AnimatedComponent : RED4ext::ent::ISkinableComponent {
  RED4ext::CName audioAltName;
  int32_t rig;
  int32_t graph;
  uint8_t unk168[24];
  RED4ext::red::TagList animTags;
  RED4ext::anim::AnimSetup animations;
  uint8_t unk1B8[64];
  int32_t facialSetup;
  uint8_t unk200[96];
  int32_t serverForcedLod;
  int32_t clientForcedLod;
  bool serverForcedVisibility;
  bool clientForcedVisibility;
  bool useLongRangeVisibility;
  bool calculateAccelerationWs;
  uint8_t unk26C[12];
  RED4ext::DynArray<RED4ext::ent::AnimTrackParameter> animParameters;
  RED4ext::Handle<RED4ext::ent::AnimationControlBinding> controlBinding;
  uint8_t unk298[24];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::AnimatedComponent_vtbl : RED4ext::ent::ISkinableComponent_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::AirControlAxis  {
  RED4ext::vehicle::PID angle;
  RED4ext::vehicle::PID velocity;
  uint8_t controlAxis;
  uint8_t unk41;
  uint8_t unk42;
  uint8_t unk43;
  float multiplier;
  float brakeMultiplierWhenNoInput;
  uint8_t stabilizeAxis;
  uint8_t unk4D;
  uint8_t unk4E;
  uint8_t unk4F;
  float angleCorrectionThresholdMin;
  float angleCorrectionThresholdMax;
  float angleCorrectionFactorMin;
  float angleCorrectionFactorMax;
  float velocityDampingThresholdMin;
  float velocityDampingThresholdMax;
  float velocityDampingFactorMin;
  float velocityDampingFactorMax;
  float maxVelocityCompensation;
  float maxAngleCompensation;
  float zeroAngleThreshold;
  float maxAngleToCompensateThreshold;
  RED4ext::Vector4 unk5C[3];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::physics::GeometryCache>  {
  RED4ext::physics::GeometryCache* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::SharedPtrBase<T>  {
  void* instance;
  RED4ext::RefCnt* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::JobHandle  {
  void* unk00;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::IDynamicStorage  {
  RED4ext::IDynamicStorage_vtbl *__vftable;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::IDynamicStorage_vtbl {
  void (*__IDynamicStorage)(RED4ext::IDynamicStorage *__hidden this);
  void* (*GetInstance)(RED4ext::IDynamicStorage *__hidden this, const RED4ext::CClass*);
  RED4ext::world::RuntimeInfo* (*GetRuntimeInfo)(RED4ext::IDynamicStorage *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<unsigned int>  {
  uint32_t* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::WidgetBaseComponent_Helper  {
  RED4ext::WidgetBaseComponent_Helper_vtbl *__vftable;
  RED4ext::ScriptGameInstance* unk178;
  uint64_t unk180;
  RED4ext::Handle<RED4ext::ent::Entity> unk188;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::WidgetBaseComponent_Helper_vtbl {
  void (*__WidgetBaseComponent_Helper)(RED4ext::WidgetBaseComponent_Helper *__hidden this);
  void (*WBCI_sub_08)(RED4ext::WidgetBaseComponent_Helper *__hidden this);
  void (*WBCI_sub_10)(RED4ext::WidgetBaseComponent_Helper *__hidden this);
  void (*WBCI_sub_18)(RED4ext::WidgetBaseComponent_Helper *__hidden this);
  void (*WBCI_sub_20)(RED4ext::WidgetBaseComponent_Helper *__hidden this);
  void (*WBCI_sub_28)(RED4ext::WidgetBaseComponent_Helper *__hidden this);
  void (*WBCI_sub_30)(RED4ext::WidgetBaseComponent_Helper *__hidden this);
  void (*WBCI_sub_38)(RED4ext::WidgetBaseComponent_Helper *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::loc::VoiceTagListResource : RED4ext::CResource {
  RED4ext::DynArray<RED4ext::loc::VoiceTag> voiceTags;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Vector3  {
  float X;
  float Y;
  float Z;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ScriptGameInstance  {
  RED4ext::IGameInstance* instance;
  int8_t unk8;
  int64_t unk10;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::WidgetLogicController : RED4ext::ink::IWidgetLogicController {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::WidgetLogicController_vtbl : RED4ext::ink::IWidgetLogicController_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::EGameStateType>  {
  RED4ext::EGameStateType* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ink::SpawningProcessor>  {
  RED4ext::ink::SpawningProcessor* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ink::StyleResourceWrapper>  {
  RED4ext::ink::StyleResourceWrapper* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemEntityTransactor : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[88];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemEntityTransactor_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<void *>  {
  void** entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::JobQueue  {
  const int8_t* unk00;
  uint64_t unk08;
  RED4ext::JobHandle unk10;
  RED4ext::JobHandle unk18;
  uint64_t unk20;
  RED4ext::JobParamSet params;
  uint32_t unk2C;
  bool captured;
  uint8_t unk31;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemPrefabInstancing : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[32];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemPrefabInstancing_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeEntityRegistry>  {
  RED4ext::world::RuntimeEntityRegistry* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemRemoteViews : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[32];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemRemoteViews_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::NodeInstanceRegistry : RED4ext::world::INodeInstanceRegistry {
  uint8_t unk48[8];
  uint64_t unk50;
  uint32_t unk58;
  uint32_t unk5C;
  RED4ext::world::NodeInstanceRegistry::NodeInstanceRegistryItem items[8192];
  uint64_t unk20058;
  int64_t unk20060;
  int64_t unk20068;
  int8_t unk20070[163976];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::NodeInstanceRegistry_vtbl : RED4ext::world::INodeInstanceRegistry_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeScene  {
  RED4ext::Handle<RED4ext::world::RuntimeSystemRendering> worldRuntimeSystemRendering;
  RED4ext::Handle<RED4ext::world::RuntimeSystemAudio> worldRuntimeSystemAudio;
  RED4ext::Handle<RED4ext::world::RuntimeSystemNavigation> worldRuntimeSystemNavigation;
  RED4ext::Handle<RED4ext::world::RuntimeSystemPrefabInstancing> worldRuntimeSystemPrefabInstancing;
  RED4ext::Handle<void> unk04;
  RED4ext::Handle<RED4ext::world::RuntimeSystemMarkers> worldRuntimeSystemMarkers;
  RED4ext::Handle<RED4ext::world::RuntimeSystemPhysics> worldRuntimeSystemPhysics;
  RED4ext::Handle<RED4ext::world::AnimationSystem> worldAnimationSystem;
  RED4ext::Handle<RED4ext::world::RuntimeSystemDebugRendering> worldRuntimeSystemDebugRendering;
  RED4ext::Handle<RED4ext::world::RuntimeSystemTriggers> worldRuntimeSystemTriggers;
  RED4ext::Handle<RED4ext::world::RuntimeSystemEntity> worldRuntimeSystemEntity;
  RED4ext::Handle<RED4ext::world::RuntimeSystemScenes> worldRuntimeSystemScenes;
  RED4ext::Handle<RED4ext::world::RuntimeSystemVisibility> worldRuntimeSystemVisibility;
  RED4ext::Handle<RED4ext::world::RuntimeEntityRegistry> worldRuntimeEntityRegistry;
  RED4ext::Handle<RED4ext::world::RuntimeSystemEnvironment> worldRuntimeSystemEnvironment;
  RED4ext::Handle<void> unk15;
  RED4ext::Handle<RED4ext::world::geometry::RuntimeSystemGeomDescription> worldgeometryRuntimeSystemGeomDescription;
  RED4ext::Handle<RED4ext::world::RuntimeSystemEffects> worldRuntimeSystemEffects;
  RED4ext::Handle<RED4ext::world::RuntimeSystemSmartObjects> worldRuntimeSystemSmartObjects;
  RED4ext::Handle<RED4ext::nav::RuntimeSystemPathfinding> navRuntimeSystemPathfinding;
  RED4ext::Handle<RED4ext::world::RuntimeSystemEntityTransactor> worldRuntimeSystemEntityTransactor;
  RED4ext::Handle<void> unk21;
  RED4ext::Handle<RED4ext::ent::RuntimeSystemEditorMeshes> entRuntimeSystemEditorMeshes;
  RED4ext::Handle<RED4ext::world::RuntimeSystemTraffic> worldRuntimeSystemTraffic;
  RED4ext::Handle<RED4ext::world::RuntimeSystemSnapSovler> worldRuntimeSystemSnapSovler;
  RED4ext::Handle<RED4ext::debug::RuntimeSystemSpeedSplinePreview> debugRuntimeSystemSpeedSplinePreview;
  RED4ext::Handle<RED4ext::world::CorpseSystem> worldCorpseSystem;
  RED4ext::Handle<RED4ext::world::RuntimeSystemWorldStreaming> worldRuntimeSystemWorldStreaming;
  RED4ext::Handle<RED4ext::net::EntitySystem> netEntitySystem;
  RED4ext::Handle<RED4ext::InternalFunctionalTestsRuntimeSystem> InternalFunctionalTestsRuntimeSystem;
  RED4ext::Handle<RED4ext::FunctionalTestsRuntimeSystem> FunctionalTestsRuntimeSystem;
  RED4ext::Handle<RED4ext::work::WorkspotSystem> workWorkspotSystem;
  RED4ext::Handle<void> unk32;
  RED4ext::Handle<RED4ext::world::RuntimeSystemRemoteViews> worldRuntimeSystemRemoteViews;
  RED4ext::Handle<RED4ext::world::RuntimeSystemEntityAppearanceChanger> worldRuntimeSystemEntityAppearanceChanger;
  RED4ext::Handle<RED4ext::world::NodeInstanceRegistry> worldNodeInstanceRegistry;
  RED4ext::Handle<RED4ext::world::RuntimeSystemEntityTransforms> worldRuntimeSystemEntityTransforms;
  RED4ext::Handle<RED4ext::world::ui::RuntimeSystemUI> worlduiRuntimeSystemUI;
  RED4ext::Handle<RED4ext::world::RuntimeSystemMoverComponents> worldRuntimeSystemMoverComponents;
  RED4ext::Handle<RED4ext::world::RuntimeSystemTransformAnimator> worldRuntimeSystemTransformAnimator;
  RED4ext::Handle<RED4ext::world::RuntimeSystemWeather> worldRuntimeSystemWeather;
  RED4ext::Handle<RED4ext::world::RuntimeSystemBinkUpdate> worldRuntimeSystemBinkUpdate;
  RED4ext::Handle<RED4ext::world::RuntimeSystemNodeStreaming> worldRuntimeSystemNodeStreaming;
  RED4ext::Handle<void> unk43;
  RED4ext::Handle<void> unk44;
  RED4ext::Handle<void> unk45;
  RED4ext::Handle<void> unk46;
  RED4ext::Handle<RED4ext::world::RuntimeSystemFoliage> worldRuntimeSystemFoliage;
  RED4ext::Handle<RED4ext::world::RuntimeSystemDismemberment> worldRuntimeSystemDismemberment;
  RED4ext::Handle<void> unk49;
  RED4ext::Handle<void> unk50;
  RED4ext::Handle<RED4ext::world::RuntimeSystemEffectAttachments> worldRuntimeSystemEffectAttachments;
  RED4ext::Handle<RED4ext::world::RuntimeSystemRepellerComponents> worldRuntimeSystemRepellerComponents;
  RED4ext::Handle<void> unk53;
  RED4ext::Handle<RED4ext::world::RuntimeSystemCompiledTerrain> worldRuntimeSystemCompiledTerrain;
  RED4ext::Handle<void> unk55;
  RED4ext::Handle<void> unk56;
  RED4ext::Handle<RED4ext::world::RuntimeSystemCamera> worldRuntimeSystemCamera;
  RED4ext::Handle<void> unk58;
  RED4ext::Handle<RED4ext::world::RuntimeSystemEntityVisualController> worldRuntimeSystemEntityVisualController;
  RED4ext::Handle<void> unk60;
  RED4ext::Handle<void> unk61;
  RED4ext::Handle<RED4ext::world::RuntimeSystemDestruction> worldRuntimeSystemDestruction;
  RED4ext::Handle<RED4ext::game::RuntimeSystemLights> gameRuntimeSystemLights;
  RED4ext::Handle<RED4ext::world::RuntimeSystemStreamingQuery> worldRuntimeSystemStreamingQuery;
  uint32_t numSystems;
  uint32_t unk414;
  RED4ext::world::GameInstance* gameInstance;
  uint64_t unk420;
  RED4ext::world::RuntimeInfo runtimeInfo;
  uint64_t unk4A8;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::GameAudioSystem : RED4ext::game::IGameAudioSystem {
  uint8_t unk48[920];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::GameAudioSystem_vtbl : RED4ext::game::IGameAudioSystem_vtbl{
  void (*sub_1A0)(RED4ext::game::GameAudioSystem *__hidden this);
  void (*sub_1A8)(RED4ext::game::GameAudioSystem *__hidden this);
  void (*sub_1B0)(RED4ext::game::GameAudioSystem *__hidden this);
  void (*sub_1B8)(RED4ext::game::GameAudioSystem *__hidden this);
  void (*sub_1C0)(RED4ext::game::GameAudioSystem *__hidden this);
  void (*sub_1C8)(RED4ext::game::GameAudioSystem *__hidden this);
  void (*sub_1D0)(RED4ext::game::GameAudioSystem *__hidden this);
  void (*sub_1D8)(RED4ext::game::GameAudioSystem *__hidden this);
  void (*sub_1E0)(RED4ext::game::GameAudioSystem *__hidden this);
  void (*sub_1E8)(RED4ext::game::GameAudioSystem *__hidden this);
  void (*sub_1F0)(RED4ext::game::GameAudioSystem *__hidden this);
  void (*sub_1F8)(RED4ext::game::GameAudioSystem *__hidden this);
  void (*sub_200)(RED4ext::game::GameAudioSystem *__hidden this, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*sub_208)(RED4ext::game::GameAudioSystem *__hidden this, uint64_t);
  void (*sub_210)(RED4ext::game::GameAudioSystem *__hidden this, uint64_t);
  void (*sub_218)(RED4ext::game::GameAudioSystem *__hidden this, uint64_t, uint64_t);
  void (*sub_220)(RED4ext::game::GameAudioSystem *__hidden this, uint64_t);
  void (*sub_228)(RED4ext::game::GameAudioSystem *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ISerializable  {
  RED4ext::ISerializable_vtbl *__vftable;
  RED4ext::WeakHandle<RED4ext::ISerializable> ref;
  RED4ext::WeakHandle<RED4ext::ISerializable> unk18;
  uint64_t unk28;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ISerializable_vtbl {
  RED4ext::CClass* (*GetNativeType)(RED4ext::ISerializable *__hidden this);
  RED4ext::CClass* (*GetType)(RED4ext::ISerializable *__hidden this);
  RED4ext::Memory::IAllocator* (*GetAllocator)(RED4ext::ISerializable *__hidden this);
  void (*__ISerializable)(RED4ext::ISerializable *__hidden this);
  void (*sub_20)(RED4ext::ISerializable *__hidden this, RED4ext::Handle<RED4ext::ISerializable>*);
  void (*sub_28)(RED4ext::ISerializable *__hidden this);
  bool (*sub_30)(RED4ext::ISerializable *__hidden this);
  void (*sub_38)(RED4ext::ISerializable *__hidden this);
  bool (*sub_40)(RED4ext::ISerializable *__hidden this, RED4ext::BaseStream*);
  bool (*sub_48)(RED4ext::ISerializable *__hidden this, int64_t);
  bool (*sub_50)(RED4ext::ISerializable *__hidden this, int64_t);
  bool (*sub_58)(RED4ext::ISerializable *__hidden this);
  bool (*sub_60)(RED4ext::ISerializable *__hidden this);
  bool (*sub_68)(RED4ext::ISerializable *__hidden this);
  bool (*sub_70)(RED4ext::ISerializable *__hidden this);
  int64_t (*sub_78)(RED4ext::ISerializable *__hidden this, int64_t, int64_t, uint8_t, int64_t, int64_t);
  bool (*sub_80)(RED4ext::ISerializable *__hidden this);
  void (*sub_88)(RED4ext::ISerializable *__hidden this);
  bool (*sub_90)(RED4ext::ISerializable *__hidden this);
  bool (*sub_98)(RED4ext::ISerializable *__hidden this);
  void* (*sub_A0)(RED4ext::ISerializable *__hidden this);
  RED4ext::CClass* (*sub_A8)(RED4ext::ISerializable *__hidden this);
  void (*sub_B0)(RED4ext::ISerializable *__hidden this, void*);
  RED4ext::CString (*sub_B8)(RED4ext::ISerializable *__hidden this);
  void* (*sub_C0)(RED4ext::ISerializable *__hidden this, void*);
  void* (*sub_C8)(RED4ext::ISerializable *__hidden this, void*);
  bool (*CanBeDestructed)(RED4ext::ISerializable *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::MultiChildren : RED4ext::ink::Children {
  RED4ext::SharedMutex lock;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::Widget>> children;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::MultiChildren_vtbl : RED4ext::ink::Children_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::vehicle::TPPCameraPreset>  {
  RED4ext::vehicle::TPPCameraPreset* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::anim::AnimFeature_FPPCamera : RED4ext::anim::AnimFeature {
  float fov;
  float deltaYaw;
  float deltaYawExternal;
  float deltaYawInput;
  float yawSpeed;
  float yawMaxLeft;
  float yawMaxRight;
  bool normalizeYaw;
  uint8_t unk5D[3];
  float deltaPitch;
  float deltaPitchExternal;
  float deltaPitchInput;
  float pitchSpeed;
  float pitchMin;
  float pitchMax;
  float resetYawSpeed;
  float resetPitchSpeed;
  float resetExternalsSpeed;
  bool isSceneMode;
  uint8_t unk85[3];
  float t4Blend;
  float t4Pitch;
  float t4Yaw;
  float t4Roll;
  bool t4CopyPitchAndYaw;
  uint8_t unk99[7];
  RED4ext::Quaternion t4CameraIdleOrientation;
  RED4ext::Quaternion t4CameraControlIdleOrientation;
  bool t4UseCameraIdleOrientation;
  bool sceneCameraUseTrajectorySpace;
  bool sceneTransitioningToGameplay;
  uint8_t unkC3[1];
  float yawMultiplier;
  float pitchMultiplier;
  float overridePitchInput;
  float overridePitchRef;
  float overrideYawInput;
  float overrideYawRef;
  float override;
  float parallaxSide;
  float parallaxForward;
  float parallaxSpace;
  float vehicleProceduralCameraWeight;
  float vehicleOffsetWeight;
  float gameplayCameraPoseWeight;
  float additiveCameraMovementsWeight;
  uint8_t unkFC[4];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::anim::AnimFeature_FPPCamera_vtbl : RED4ext::anim::AnimFeature_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::physics::ProxyID>  {
  RED4ext::physics::ProxyID* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::NodeInstanceRegistry::NodeInstanceRegistryItem  {
  RED4ext::ResourceAsyncReference<> unk00;
  uint64_t unk08;
  uint64_t unk10;
  uint32_t unk18;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CString  {
  RED4ext::CString::__anonymous0 text;
  uint32_t length;
  RED4ext::Memory::IAllocator* allocator;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::PlayerSocket  {
  uint8_t unk00[40];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::MaterialReference  {
  RED4ext::CName name;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemEffectAttachments : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[24];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemEffectAttachments_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::GameEntity : RED4ext::ent::Entity {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::GameEntity_vtbl : RED4ext::ent::Entity_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::physics::SystemBody : RED4ext::physics::ISystemObject {
  RED4ext::DynArray<RED4ext::Handle<RED4ext::physics::ICollider>> collisionShapes;
  uint8_t unk48[1];
  bool isQueryBodyOnly;
  uint8_t unk4A[6];
  RED4ext::physics::SystemBodyParams params;
  RED4ext::Transform localToModel;
  RED4ext::CName mappedBoneName;
  uint8_t unkD8[8];
  RED4ext::Transform mappedBoneToBody;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::SystemBody_vtbl : RED4ext::physics::ISystemObject_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::vehicle::Controller : RED4ext::game::Component {
  RED4ext::CName alarmCurve;
  float alarmTime;
  bool overrideHeadlightsSettingsForPlayer;
  uint8_t unkB5[35];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::Controller_vtbl : RED4ext::game::Component_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemStreamingQuery>  {
  RED4ext::world::RuntimeSystemStreamingQuery* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::PID  {
  float integral;
  float lastError;
  float correction;
  float P;
  float I;
  float D;
  float unk18;
  float customTarget;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CMeshMaterialEntry  {
  uint8_t unk00[32];
  RED4ext::CName name;
  uint16_t index;
  bool isLocalInstance;
  uint8_t unk2B[5];
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemDismemberment : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[80];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemDismemberment_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::physics::BaseProxy  {
  RED4ext::physics::BaseProxy_vtbl *__vftable;
  RED4ext::Handle<RED4ext::ent::Entity> entity;
  RED4ext::Handle<RED4ext::ent::IComponent> component;
  uint32_t numHandles;
  uint32_t unk2C;
  RED4ext::physics::ProxyID proxyID;
  RED4ext::physics::ProxyType type;
  uint8_t unk35;
  uint8_t unk36;
  RED4ext::physics::BaseProxy::Flags flags;
  uint64_t unk38;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::BaseProxy_vtbl {
  void (*sub_00)(RED4ext::physics::BaseProxy *__hidden this);
  void (*Process)(RED4ext::physics::BaseProxy *__hidden this, RED4ext::physics::BaseProxyDesc*);
  void (*sub_10)(RED4ext::physics::BaseProxy *__hidden this, RED4ext::physics::ProxyCacheID*);
  void (*sub_18)(RED4ext::physics::BaseProxy *__hidden this, RED4ext::physics::ProxyCacheID*);
  void (*sub_20)(RED4ext::physics::BaseProxy *__hidden this, RED4ext::physics::ProxyCacheID*);
  void (*sub_28)(RED4ext::physics::BaseProxy *__hidden this);
  void (*sub_30)(RED4ext::physics::BaseProxy *__hidden this);
  void (*sub_38)(RED4ext::physics::BaseProxy *__hidden this);
  void (*sub_40)(RED4ext::physics::BaseProxy *__hidden this);
  uint32_t (*sub_48)(RED4ext::physics::BaseProxy *__hidden this);
  bool (*sub_50)(RED4ext::physics::BaseProxy *__hidden this, uint32_t, uint32_t, RED4ext::physics::StateValue, void*, uint64_t);
  bool (*sub_58)(RED4ext::physics::BaseProxy *__hidden this, uint32_t, uint32_t, RED4ext::physics::StateValue, void*, uint64_t, bool);
  void (*sub_60)(RED4ext::physics::BaseProxy *__hidden this);
  void (*sub_68)(RED4ext::physics::BaseProxy *__hidden this);
  void (*sub_70)(RED4ext::physics::BaseProxy *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::vehicle::PersistentDataPS : RED4ext::game::ComponentPS {
  RED4ext::vehicle::PersistentDataPS::Flags flags;
  float autopilotPos;
  float autopilotCurrentSpeed;
  uint8_t unk74[4];
  RED4ext::StaticArray<RED4ext::vehicle::WheelRuntimePSData, 4> wheelRuntimeData;
  RED4ext::Transform questEnforcedTransform;
  RED4ext::vehicle::DestructionPSData destruction;
  RED4ext::vehicle::AudioPSData audio;
  uint8_t unk1B8[8];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::PersistentDataPS_vtbl : RED4ext::game::ComponentPS_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::ProxyCacheID  {
  uint16_t index;
  uint16_t unk38_match;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::AirControl  {
  RED4ext::vehicle::BaseObject* vehicle;
  float unk08;
  RED4ext::vehicle::AirControlAxis pitch;
  RED4ext::vehicle::AirControlAxis yaw;
  RED4ext::vehicle::AirControlAxis roll;
  RED4ext::Vector3 anglePID;
  RED4ext::Vector3 velocityPID;
  RED4ext::Vector3 flippedOverRecoveryPID;
  float massReference;
  RED4ext::vehicle::PID unk244;
  RED4ext::Vector4 unk264;
  float unk274;
  float unk278;
  float unk27C;
  float unk280;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::SectorCacheEntry  {
  uint32_t entryOffset;
  uint32_t entrySize;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::EntityEmitter  {
  RED4ext::CName emitterName;
  uint32_t id;
  uint32_t unk;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::debug::RuntimeSystemSpeedSplinePreview : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[40];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::debug::RuntimeSystemSpeedSplinePreview_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::StyleResourceWrapper : RED4ext::ISerializable {
  uint8_t unk30[56];
  int32_t styleResource;
  uint8_t unk70[32];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::StyleResourceWrapper_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::physics::CustomFilterData>  {
  RED4ext::physics::CustomFilterData* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::CallbackInstance>  {
  RED4ext::CallbackInstance* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::EntityInstanceData : RED4ext::ISerializable {
  RED4ext::DataBuffer buffer;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::EntityInstanceData_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::ent::VisualControllerDependency>  {
  RED4ext::ent::VisualControllerDependency* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CallbackDefinition : RED4ext::CallbackId {
  RED4ext::CallbackStruct* callbackStruct;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::TPPCameraUpdate  {
  RED4ext::vehicle::TPPCameraPreset* preset;
  float anotherDeltaTime;
  float deltaTime;
  RED4ext::Transform transform;
  RED4ext::Vector4 locationFromOffset;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemTransformAnimator : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[184];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemTransformAnimator_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::IAttachment : RED4ext::ISerializable {
  RED4ext::WeakHandle<RED4ext::ent::IComponent> source;
  RED4ext::WeakHandle<RED4ext::ent::IComponent> destination;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::IAttachment_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::appearance::AppearancePart  {
  int32_t resource;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::UnkD10  {
  RED4ext::vehicle::UnkD10::Wheel wheel[4];
  uint32_t numWheels;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemScenes>  {
  RED4ext::world::RuntimeSystemScenes* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::GameOptionManager  {
  RED4ext::GameOptionManager::Unk00** unk00;
  RED4ext::GameOptionManager::Unk00* unk08;
  RED4ext::GameOptionManager::Unk28* runtime;
  RED4ext::GameOptionManager::Unk00* baseSettings;
  uint32_t unk20;
  uint32_t unk24;
  RED4ext::GameOptionManager::Unk28* userSettings;
  RED4ext::DynArray<void *> unk30;
  RED4ext::CString unk40;
  uint64_t unk60_Critical[2];
  uint8_t unk70;
  uint64_t unk78;
  uint64_t unk80;
  uint8_t unk88;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::game::IHitShape>  {
  RED4ext::game::IHitShape* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::PSInterface  {
  RED4ext::game::PSInterface_vtbl *__vftable;
  RED4ext::Handle<RED4ext::game::PersistentState> persistentState;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::PSInterface_vtbl {
  void (*__PSInterface)(RED4ext::game::PSInterface *__hidden this);
  RED4ext::CClass* (*GetPSClass)(RED4ext::game::PSInterface *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DeferredDataBuffer  {
  int64_t unk00;
  int64_t unk08;
  RED4ext::RawBuffer buffer;
  int64_t unk30;
  int8_t unk38;
  int64_t unk40;
  int64_t unk48;
  int64_t unk50;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ent::SlotComponent>  {
  RED4ext::ent::SlotComponent* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::game::FPPCameraComponent>  {
  RED4ext::game::FPPCameraComponent* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::PhysicsJointDriveVelocity  {
  RED4ext::Vector4 linearVelocity;
  RED4ext::Vector4 angularVelocity;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::IMoverComponent : RED4ext::ent::IComponent {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::IMoverComponent_vtbl : RED4ext::ent::IComponent_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::audio::AudioMetadata : RED4ext::audio::AudioMetadataBase {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::AudioMetadata_vtbl : RED4ext::audio::AudioMetadataBase_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemTransformAnimator>  {
  RED4ext::world::RuntimeSystemTransformAnimator* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::Emitters  {
  RED4ext::audio::Emitter emitters[12288];
  int32_t nodeList;
  int32_t entities;
  RED4ext::SharedMutex entitiesMutex;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::ISkinableComponent : RED4ext::ent::IPlacedComponent {
  uint8_t unk120[16];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::ISkinableComponent_vtbl : RED4ext::ent::IPlacedComponent_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::Weapon  {
  RED4ext::TweakDBID item;
  RED4ext::TweakDBID slot;
  RED4ext::Handle<RED4ext::game::weapon::Object> weaponObject;
  float cycleTime;
  float cycleTimer;
  float minPitch;
  float maxPitch;
  float minYaw;
  float maxYaw;
  RED4ext::CName weaponShootAnimEvent;
  uint8_t singleShotProjectiles;
  uint8_t unk41;
  uint8_t unk42;
  uint8_t unk43;
  uint32_t wholeBurstProjectiles;
  uint32_t unk48;
  float cooldownTimer;
  float singleProjectileCycleTime;
  float attackRange;
  uint8_t genericTick;
  uint8_t genericShoot;
  uint8_t canFriendlyFire;
  uint8_t unk5B;
  uint8_t unk5C;
  uint8_t unk5D;
  uint8_t unk5E;
  uint8_t unk5F;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeInfo : RED4ext::IScriptable {
  RED4ext::world::RuntimeInfo::Mode mode;
  uint8_t unk41;
  uint8_t unk42[6];
  RED4ext::world::RuntimeDescription description;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeInfo_vtbl : RED4ext::IScriptable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::CClass : RED4ext::CBaseRTTIType {
  RED4ext::CClass* parent;
  RED4ext::CName name;
  RED4ext::CName computedName;
  RED4ext::DynArray<RED4ext::CProperty *> props;
  RED4ext::DynArray<RED4ext::CProperty *> overriddenProps;
  RED4ext::DynArray<RED4ext::CClassFunction *> funcs;
  RED4ext::DynArray<RED4ext::CClassStaticFunction *> staticFuncs;
  uint32_t size;
  uint32_t holderSize;
  RED4ext::CClass::Flags flags;
  uint32_t alignment;
  RED4ext::HashMap<RED4ext::CName, RED4ext::CClassFunction *> funcsByName;
  RED4ext::HashMap<void *, void *> unkA8;
  int64_t unkD8;
  int64_t unkE0;
  RED4ext::HashMap<RED4ext::CName, RED4ext::CProperty *> propsByName;
  RED4ext::DynArray<RED4ext::CProperty *> allProps;
  RED4ext::DynArray<RED4ext::CProperty *> persistentProps;
  RED4ext::DynArray<RED4ext::CProperty *> referenceProps;
  RED4ext::DynArray<void *> referencePropTypes;
  RED4ext::Map<RED4ext::CName, RED4ext::Variant *> defaults;
  RED4ext::HashMap<void *, void *> unk180;
  RED4ext::DynArray<RED4ext::CClass::Listener> listeners;
  int8_t listening[256];
  int16_t eventTypeId;
  int32_t unk2C4;
  RED4ext::SharedMutex propsLock;
  uint8_t classSetupState;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CClass_vtbl : RED4ext::CBaseRTTIType_vtbl{
  void (*sub_C0)(RED4ext::CClass *__hidden this);
  uint32_t (*GetMaxAlignment)(RED4ext::CClass *__hidden this);
  bool (*sub_D0)(RED4ext::CClass *__hidden this);
  void (*ConstructCls)(RED4ext::CClass *__hidden this, void*);
  void (*DestructCls)(RED4ext::CClass *__hidden this, void*);
  void* (*AllocMemory)(RED4ext::CClass *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::PersistencySystem : RED4ext::game::IPersistencySystem {
  uint8_t unk48[424];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::PersistencySystem_vtbl : RED4ext::game::IPersistencySystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CCompiledCode  {
  uint32_t fileIndex;
  uint32_t unk04;
  uint64_t bytecode[5];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::ent::Slot>  {
  RED4ext::ent::Slot* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::AnimationSystem>  {
  RED4ext::world::AnimationSystem* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::ink::PropertyBinding>  {
  RED4ext::ink::PropertyBinding* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::anim::Processor : RED4ext::ISerializable {
  uint8_t unk30[120];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::anim::Processor_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::anim::Event>>  {
  RED4ext::Handle<RED4ext::ink::anim::Event>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::HDRColor  {
  float Red;
  float Green;
  float Blue;
  float Alpha;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::ItemObject : RED4ext::game::TimeDilatable {
  uint8_t unk260[88];
  RED4ext::UpdateBucketEnum updateBucket;
  uint8_t unk2B9[7];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::ItemObject_vtbl : RED4ext::game::TimeDilatable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::physics::ISystemObject>  {
  RED4ext::physics::ISystemObject* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::VirtualWindow : RED4ext::ink::Window {
  uint8_t unk270[768];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::VirtualWindow_vtbl : RED4ext::ink::Window_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::VehicleInterface3  {
  RED4ext::game::VehicleInterface3_vtbl *__vftable;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::VehicleInterface3_vtbl {
  void (*__VehicleInterface3)(RED4ext::game::VehicleInterface3 *__hidden this);
  void (*sub_08)(RED4ext::game::VehicleInterface3 *__hidden this, void*);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::physics::PhysicalJointPin>  {
  RED4ext::physics::PhysicalJointPin* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemNodeStreaming>  {
  RED4ext::world::RuntimeSystemNodeStreaming* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemTriggers>  {
  RED4ext::world::RuntimeSystemTriggers* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::VehicleMechanicalData  {
  RED4ext::CName engineStartEvent;
  RED4ext::CName engineStopEvent;
  RED4ext::CName gearUpBeginEvent;
  RED4ext::CName gearUpEndEvent;
  RED4ext::CName gearDownBeginEvent;
  RED4ext::CName gearDownEndEvent;
  RED4ext::CName throttleOnEvent;
  RED4ext::CName throttleOffEvent;
  RED4ext::CName suspensionSqueekEvent;
  RED4ext::CName acelleration;
  RED4ext::CName speed;
  RED4ext::CName gear;
  RED4ext::CName brake;
  RED4ext::CName rpm;
  RED4ext::CName throttle;
  RED4ext::CName sidewaysThrottle;
  RED4ext::CName thrust;
  RED4ext::CName temperature;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ink::anim::Definition>  {
  RED4ext::ink::anim::Definition* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ent::ITransformBinding>  {
  RED4ext::ent::ITransformBinding* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::VehicleEmitterPositionData  {
  RED4ext::Vector3 engineEmitterPosition;
  RED4ext::Vector3 centralEmitterPosition;
  RED4ext::Vector3 exaustEmitterPosition;
  RED4ext::Vector3 hoodEmitterPosition;
  RED4ext::Vector3 trunkEmitterPosition;
  RED4ext::Vector3 wheel1Position;
  RED4ext::Vector3 wheel2Position;
  RED4ext::Vector3 wheel3Position;
  RED4ext::Vector3 wheel4Position;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::loc::VoiceTagListResource>  {
  RED4ext::loc::VoiceTagListResource* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemDestruction : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[2872];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemDestruction_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::v0::SemVer::PrereleaseInfo  {
  uint32_t type;
  uint32_t number;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ink::IEffect>  {
  RED4ext::ink::IEffect* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::anim::AnimFeature_VehiclePassenger : RED4ext::anim::AnimFeature {
  RED4ext::Vector4 overallForceMS;
  float turnSpeed;
  float bankSpeed;
  float longitudinalForce;
  float transversalForce;
  float collisionForceLR;
  float collisionForceFB;
  float speed;
  float inputLR;
  float inputFB;
  float inputGas;
  float inputBreak;
  float inputHandBreak;
  float vehicleRoll;
  float vehiclePitch;
  bool isCar;
  bool inAir;
  bool clutchInUse;
  bool headCollision;
  uint8_t unk8C[4];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::anim::AnimFeature_VehiclePassenger_vtbl : RED4ext::anim::AnimFeature_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::IPlacedComponent : RED4ext::ent::IComponent {
  RED4ext::Handle<RED4ext::ent::ITransformBinding> parentTransform;
  RED4ext::DynArray<unsigned long long[4]> unkA0;
  uint8_t unkB0;
  uint8_t unkB1;
  uint8_t unkB2;
  uint8_t unkB3[5];
  uint64_t unkB8;
  RED4ext::WorldTransform localTransform;
  RED4ext::WorldTransform worldTransform;
  RED4ext::Box bounds;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::IPlacedComponent_vtbl : RED4ext::ent::IComponent_vtbl{
  void (*sub_238)(RED4ext::ent::IPlacedComponent *__hidden this);
  void (*sub_240)(RED4ext::ent::IPlacedComponent *__hidden this);
  void (*sub_248)(RED4ext::ent::IPlacedComponent *__hidden this, RED4ext::Box*);
  void (*GetFlags)(RED4ext::ent::IPlacedComponent *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::NodeInstanceRegistry>  {
  RED4ext::world::NodeInstanceRegistry* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::vehicle::PortalsList>  {
  RED4ext::vehicle::PortalsList* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::UpdateManager::UpdateStorage>  {
  RED4ext::UpdateManager::UpdateStorage* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::VehicleInteriorParameterData  {
  RED4ext::audio::ESoundCurveType enterCurveType;
  float enterCurveTime;
  float enterDelayTime;
  RED4ext::audio::ESoundCurveType exitCurveType;
  float exitCurveTime;
  float exitDelayTime;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::debug::RuntimeSystemSpeedSplinePreview>  {
  RED4ext::debug::RuntimeSystemSpeedSplinePreview* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::mesh::MeshAppearance : RED4ext::ISerializable {
  RED4ext::CName name;
  RED4ext::DynArray<RED4ext::CName> chunkMaterials;
  uint8_t unk48[16];
  RED4ext::DynArray<RED4ext::CName> tags;
  uint8_t unk68[64];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::mesh::MeshAppearance_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemWeather : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[488];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemWeather_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::GeometryCache::LoadSectorGeometriesStruct  {
  uint32_t numSectors;
  uint32_t unk04;
  RED4ext::DynArray<RED4ext::physics::GeometryKey> sectorGeometries;
  RED4ext::DynArray<RED4ext::physics::SectorCacheEntry> sectorCacheEntries;
  RED4ext::Handle<RED4ext::physics::GeometryCache> geometryCache;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::EntityEmitters  {
  RED4ext::ent::Entity entityID;
  RED4ext::vehicle::EntityEmitters::Emitter* emitter;
  void* unk10;
  float unk18;
  float unk20;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::WeakHandle<RED4ext::ent::IComponent> : RED4ext::WeakPtrWithAccess<T> {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::WheelUpdate  {
  RED4ext::vehicle::TireUpdate tireUpdate[4];
  uint64_t unk100[36];
  uint32_t numWheels;
  uint32_t unk1E4;
  uint64_t unk1E8;
  RED4ext::WorldTransform unk1F0;
  RED4ext::Handle<void *> unk210;
  RED4ext::Vector4 unk220;
  uint64_t unk230[2];
  RED4ext::Vector3 unk240;
  uint32_t unk24C;
  RED4ext::Vector4 linearVelocity;
  RED4ext::Vector4 position;
  float unk270;
  float unk274;
  float unk278;
  float unk27C;
  bool throttleValue2;
  float brakeValue;
  float unk288[2];
  float unk290;
  float unk294;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemPhysics>  {
  RED4ext::world::RuntimeSystemPhysics* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::appearance::AppearanceDefinition : RED4ext::ISerializable {
  RED4ext::CName name;
  RED4ext::CName parentAppearance;
  RED4ext::DynArray<RED4ext::DynArray<RED4ext::CName>> partsMasks;
  RED4ext::DynArray<RED4ext::appearance::AppearancePart> partsValues;
  int32_t proxyMesh;
  RED4ext::CName proxyMeshAppearance;
  int32_t cookedDataPathOverride;
  RED4ext::DynArray<RED4ext::appearance::AppearancePartOverrides> partsOverrides;
  RED4ext::red::TagList visualTags;
  RED4ext::red::TagList inheritedVisualTags;
  RED4ext::DynArray<RED4ext::game::HitRepresentationOverride> hitRepresentationOverrides;
  RED4ext::ent::EntityParametersBuffer parametersBuffer;
  uint32_t censorFlags;
  uint8_t forcedLodDistance;
  uint8_t unkE5[11];
  RED4ext::DeferredDataBuffer compiledData;
  uint8_t unk148[112];
  int32_t resolvedDependencies;
  int32_t looseDependencies;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::appearance::AppearanceDefinition_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::CClassStaticFunction : RED4ext::CClassFunction {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CClassStaticFunction_vtbl : RED4ext::CClassFunction_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::physics::BaseProxy>>  {
  RED4ext::Handle<RED4ext::physics::BaseProxy>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::vehicle::BaseObject : RED4ext::game::Object {
  RED4ext::world::RuntimeSystemPhysics* physicsSystem;
  float airTimer;
  bool isOnGround;
  uint8_t unk24D[3];
  RED4ext::vehicle::PhysicsState physicsState;
  float acceleration;
  float deceleration;
  float handbrake;
  float strafeY;
  float strafeX;
  float turnInput;
  float leanFB;
  float rockFB;
  uint8_t shootPrimary;
  uint8_t shootSecondary;
  uint8_t shootTertiary;
  uint8_t vehicleCameraInverse;
  float cameraX;
  float cameraY;
  float cameraMouseX;
  float cameraMouseY;
  uint8_t cycleLights;
  uint8_t horn;
  uint8_t unk28A;
  uint8_t unk28B;
  float unk28C;
  float unk290;
  float unk294;
  float unk298;
  float unk29C;
  float unk2A0;
  float unk2A4;
  float unk2A8;
  float unk2AC;
  RED4ext::vehicle::Physics* physics;
  RED4ext::vehicle::PhysicsData* physicsData;
  RED4ext::Handle<void> curveSetData;
  RED4ext::Handle<RED4ext::vehicle::ChassisComponent> chassis;
  float unk2E0[16];
  uint64_t chassisType;
  uint64_t unk328;
  RED4ext::WorldTransform worldTransform;
  RED4ext::Vector3 unk350;
  float unk35C;
  uint8_t unk360;
  uint8_t unk361;
  uint8_t unk362;
  uint8_t unk363;
  float unk364;
  RED4ext::vehicle::Unk368* unk368;
  RED4ext::CName unk370;
  RED4ext::Handle<RED4ext::move::Component> moveComponent;
  RED4ext::action::ActionInterface actionInterface;
  RED4ext::Handle<void> baseDrivingParams[4];
  RED4ext::Handle<RED4ext::game::interactions::Component> interactionsComponent;
  RED4ext::Handle<RED4ext::game::interactions::Component> passengerInteractions;
  RED4ext::Handle<RED4ext::vehicle::Controller> vehicleController;
  RED4ext::Handle<RED4ext::vehicle::PersistentDataPS> PersistentDataPS;
  RED4ext::Handle<RED4ext::vehicle::CameraManager> cameraManager;
  RED4ext::game::VehicleSystem* vehicleSystem;
  RED4ext::Handle<RED4ext::game::IBlackboard> blackboard;
  RED4ext::Handle<void> blackboard2;
  RED4ext::Handle<void> controllerMaybe;
  uint64_t unk540;
  RED4ext::Handle<RED4ext::game::Puppet> drivingPuppet;
  RED4ext::Handle<RED4ext::game::Puppet> mountedPuppet;
  RED4ext::vehicle::Unk568* unk568;
  RED4ext::vehicle::Unk570* unk570;
  RED4ext::vehicle::AirControl* airControl;
  RED4ext::vehicle::Unk580* unk580;
  RED4ext::vehicle::Unk588* unk588;
  void* unk590;
  void* destructionParams;
  void* unk5A0;
  void* unk5A8;
  float turnX;
  float turnXRelated2;
  float turnXRelated;
  float deltaTurnX;
  RED4ext::Handle<RED4ext::game::OccupantSlotComponent> occupantSlotComponent;
  uint64_t unkTweakRecord;
  RED4ext::Handle<RED4ext::game::data::Vehicle_Record> vehicleRecord;
  float unk5E8;
  float unk5EC;
  float unk5F0;
  float unk5F4;
  float unk5F8;
  uint8_t permanantStun2;
  uint8_t unk5FD;
  uint16_t permanantStun1;
  float unk600;
  uint8_t unk604;
  uint8_t unk605;
  uint8_t unk606;
  uint8_t unk607;
  float unk608;
  int32_t unk60C;
  uint8_t important;
  uint8_t ignoreImpulses;
  uint8_t unk612;
  uint8_t unk613;
  uint8_t unk614;
  uint8_t unk615;
  uint8_t highPriorityDriving;
  uint8_t unk617;
  RED4ext::DynArray<void *> uiComponents;
  float unk628;
  float unk62C;
  float unk630;
  float unk634;
  RED4ext::Vector4 unk638;
  RED4ext::Vector4 unk648;
  RED4ext::Vector4 unk658;
  RED4ext::Matrix unk668;
  float unk6A8[10];
  RED4ext::Transform unk6D0;
  uint64_t unk6F0[2];
  float max_tolerance_radius;
  float acc_pid_p;
  float acc_pid_i;
  float acc_pid_d;
  uint64_t unk710[10];
  RED4ext::vehicle::AutonomousData autonomousData;
  uint8_t hasDestructionParams;
  uint8_t unk8B1;
  uint8_t unk8B2;
  uint8_t unk8B3;
  float unk8B4[5];
  RED4ext::DynArray<void *> unk8C8;
  uint64_t unk8D8[2];
  RED4ext::Vector3 unk8E8;
  float unk8F4;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::ent::Entity>> projectiles;
  uint8_t updatingProjectiles;
  uint8_t unk909;
  uint8_t unk90A;
  uint8_t unk90B;
  float unk90C;
  uint32_t unk910[8];
  uint8_t meleeHonkDelay[3];
  uint8_t meleeHonkDuration[3];
  uint8_t collisionHonkDelay[3];
  uint8_t collisionHonkDuration[3];
  uint8_t collisionHonkUpperThreshold[3];
  uint8_t unk93F;
  RED4ext::DynArray<RED4ext::vehicle::Weapon> weapons;
  RED4ext::Vector3 tracePosition;
  uint8_t unk95C;
  uint8_t unk95D;
  uint8_t unk95E;
  uint8_t unk95F;
  uint64_t unk960;
  RED4ext::DynArray<void *> puppets;
  uint64_t unk978;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::BaseObject_vtbl : RED4ext::game::Object_vtbl{
  void (*sub_268)(RED4ext::vehicle::BaseObject *__hidden this);
  void (*sub_270)(RED4ext::vehicle::BaseObject *__hidden this);
  double (*sub_278)(RED4ext::vehicle::BaseObject *__hidden this);
  int32_t (*sub_280)(RED4ext::vehicle::BaseObject *__hidden this);
  uint64_t (*sub_288)(RED4ext::vehicle::BaseObject *__hidden this);
  uint64_t (*sub_290)(RED4ext::vehicle::BaseObject *__hidden this);
  float (*sub_298)(RED4ext::vehicle::BaseObject *__hidden this);
  void (*sub_2A0)(RED4ext::vehicle::BaseObject *__hidden this, RED4ext::Transform*);
  uint64_t (*sub_2A8)(RED4ext::vehicle::BaseObject *__hidden this);
  uint64_t (*sub_2B0)(RED4ext::vehicle::BaseObject *__hidden this, uint64_t, uint64_t);
  void (*sub_2B8)(RED4ext::vehicle::BaseObject *__hidden this, uint64_t, uint64_t);
  void (*sub_2C0)(RED4ext::vehicle::BaseObject *__hidden this, float);
  void (*sub_2C8)(RED4ext::vehicle::BaseObject *__hidden this);
  void (*sub_2D0)(RED4ext::vehicle::BaseObject *__hidden this, void*, RED4ext::Transform*);
  void (*sub_2D8)(RED4ext::vehicle::BaseObject *__hidden this);
  uint64_t (*sub_2E0)(RED4ext::vehicle::BaseObject *__hidden this);
  uint64_t (*sub_2E8)(RED4ext::vehicle::BaseObject *__hidden this);
  uint64_t (*sub_2F0)(RED4ext::vehicle::BaseObject *__hidden this);
  uint64_t (*sub_2F8)(RED4ext::vehicle::BaseObject *__hidden this);
  RED4ext::Handle<RED4ext::game::data::Vehicle_Record>* (*GetRecord)(RED4ext::vehicle::BaseObject *__hidden this, RED4ext::Handle<RED4ext::game::data::Vehicle_Record>*);
  uint64_t (*sub_308)(RED4ext::vehicle::BaseObject *__hidden this, uint64_t*);
  uint64_t (*sub_310)(RED4ext::vehicle::BaseObject *__hidden this, bool);
  bool (*sub_318)(RED4ext::vehicle::BaseObject *__hidden this);
  float (*sub_320)(RED4ext::vehicle::BaseObject *__hidden this);
  uint64_t (*sub_328)(RED4ext::vehicle::BaseObject *__hidden this, RED4ext::Handle<RED4ext::ISerializable>*);
  uint64_t (*sub_330)(RED4ext::vehicle::BaseObject *__hidden this, RED4ext::Handle<RED4ext::ISerializable>*);
  uint64_t (*sub_338)(RED4ext::vehicle::BaseObject *__hidden this, RED4ext::Handle<RED4ext::ISerializable>*);
  uint64_t (*sub_340)(RED4ext::vehicle::BaseObject *__hidden this, RED4ext::Handle<RED4ext::ISerializable>*);
  uint64_t (*sub_348)(RED4ext::vehicle::BaseObject *__hidden this);
  uint64_t (*sub_350)(RED4ext::vehicle::BaseObject *__hidden this);
  uint64_t (*sub_358)(RED4ext::vehicle::BaseObject *__hidden this);
  void (*sub_360)(RED4ext::vehicle::BaseObject *__hidden this, float, uint32_t);
  uint64_t (*sub_368)(RED4ext::vehicle::BaseObject *__hidden this, RED4ext::weapon::Object*, RED4ext::Vector4*, RED4ext::Vector4*, RED4ext::Vector4*, float, int64_t, int64_t, int64_t, int64_t);
  void (*sub_370)(RED4ext::vehicle::BaseObject *__hidden this);
  RED4ext::Vector3* (*sub_378)(RED4ext::vehicle::BaseObject *__hidden this, RED4ext::Vector3*);
  uint8_t (*sub_380)(RED4ext::vehicle::BaseObject *__hidden this, int32_t);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::v0::SemVer  {
  uint8_t major;
  uint16_t minor;
  uint32_t patch;
  RED4ext::v0::SemVer::PrereleaseInfo prerelease;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::physics::SectorEntry>  {
  RED4ext::physics::SectorEntry* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::WidgetLibraryItemInstance : RED4ext::ISerializable {
  RED4ext::ink::ETextureResolution rootResolution;
  uint8_t unk31[7];
  RED4ext::Handle<RED4ext::ink::Widget> rootWidget;
  RED4ext::Handle<RED4ext::ink::IWidgetController> gameController;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::WidgetLibraryItemInstance_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::vehicle::ChassisComponent>  {
  RED4ext::vehicle::ChassisComponent* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::BaseStream  {
  RED4ext::BaseStream_vtbl *__vftable;
  int32_t flags;
  int32_t unkC;
  RED4ext::BaseStream::__anonymous2* unk10;
  int64_t unk18;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::BaseStream_vtbl {
  RED4ext::Memory::EngineAllocator* (*GetAllocator)(RED4ext::BaseStream *__hidden this);
  void (*__BaseStream)(RED4ext::BaseStream *__hidden this);
  void* (*ReadWrite)(RED4ext::BaseStream *__hidden this, void*, uint32_t);
  uint64_t (*GetPointerPosition)(RED4ext::BaseStream *__hidden this);
  uint64_t (*GetLength)(RED4ext::BaseStream *__hidden this);
  bool (*Seek)(RED4ext::BaseStream *__hidden this, uint64_t);
  bool (*Flush)(RED4ext::BaseStream *__hidden this);
  void (*sub_38)(RED4ext::BaseStream *__hidden this);
  const int8_t* (*GetFileName)(RED4ext::BaseStream *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CProperty  {
  RED4ext::CBaseRTTIType* type;
  RED4ext::CName name;
  RED4ext::CName group;
  RED4ext::CClass* parent;
  uint32_t valueOffset;
  uint32_t scriptRefValueOffset;
  RED4ext::CProperty::Flags flags;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::anim::Definition>>  {
  RED4ext::Handle<RED4ext::ink::anim::Definition>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::anim::Sequence>>  {
  RED4ext::Handle<RED4ext::ink::anim::Sequence>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::InternalFunctionalTestsRuntimeSystem : RED4ext::FunctionalTestsIRuntimeSystem {
  uint8_t unk48[176];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::InternalFunctionalTestsRuntimeSystem_vtbl : RED4ext::FunctionalTestsIRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::vehicle::CameraManager : RED4ext::IScriptable {
  void* unk40;
  uint32_t customTarget;
  float unk4C;
  RED4ext::Handle<RED4ext::vehicle::TPPCameraComponent> tppCamera;
  RED4ext::Handle<RED4ext::game::FPPCameraComponent> fppCamera;
  RED4ext::Handle<RED4ext::game::CameraComponent> blendCamera;
  RED4ext::Handle<void> unkHandle80;
  uint32_t activeCameraType;
  float SensitivityConfig_Base_pad;
  float SensitivityConfig_Base_mouse;
  RED4ext::vehicle::TPPCameraData data;
  void* photoModeCamera;
  void* unk128;
  float unk130;
  float unk134;
  RED4ext::Handle<RED4ext::vehicle::BaseObject> vehicle;
  void* unk148;
  RED4ext::Vector4 unk150;
  void* unk160;
  RED4ext::Vector3 camCollisionOBBIncrease;
  float cameraBlendTime;
  uint8_t allowCameraReset;
  uint8_t unk179;
  uint8_t unk17A;
  uint8_t unk17B;
  uint8_t unk17C;
  uint8_t unk17D;
  uint8_t unk17E;
  uint8_t unk17F;
  float unk180;
  float unk184;
  float unk188;
  float unk18C;
  float unk190;
  void* unk198;
  RED4ext::Vector3 unk1A0;
  RED4ext::Vector3 unk1AC;
  void* unk1B8;
  RED4ext::Quaternion vehicleOrientation;
  RED4ext::Vector4 unk1D0;
  RED4ext::Vector4 vehiclePosition;
  float unk1F0;
  float unk1F4;
  float unk1F8;
  float unk1FC;
  float unk200;
  float unk204;
  float unk208;
  float unk20C;
  float impactDamperDampFactor2;
  float unk214;
  float unk218;
  float unk21C;
  float unk220;
  float unk224;
  float unk228;
  float unk22C;
  float unk230;
  float unk234;
  float sideDampFactor2;
  float unk23C;
  float unk240;
  float unk244;
  float forwardDampFactor2;
  float unk24C;
  float unk250;
  float unk254;
  float heightDampFactor2;
  float unk25C;
  float unk260;
  float unk264;
  float rollCorrectionDampFactor2;
  float unk26C;
  float unk270;
  float unk274;
  float pitchCorrectionDampFactor2;
  float unk27C;
  float unk280;
  float unk284;
  float smoothSpeedDampFactor2;
  float unk28C;
  float unk290;
  float unk294;
  float steeringDampFactor2;
  float unk29C;
  float unk2A0;
  float unk2A4;
  float unk2A8;
  float unk2AC;
  float unk2B0;
  float maxDisplacementLeft;
  float maxDisplacementRight;
  float maxDisplacementForward;
  float maxDisplacementBackward;
  float maxDisplacementUp;
  float maxDisplacementDown;
  float displacementThresholdForward;
  float sideDampFactor;
  float forwardDampFactor;
  float heightDampFactor;
  float steeringDampFactor;
  float steeringAngleLeft;
  float steeringAngleRight;
  float smoothSpeedDampFactor;
  float directionFollowMaxVelocity;
  float maxAccelerationTiltAngle;
  float maxSlowdownTiltAngle;
  float impactDamperDampFactor;
  float impactThreshold;
  float impactBlendSpeed;
  float impactStrengthCoef;
  float maxRollCorrection;
  float maxPitchCorrectionUP;
  float maxPitchCorrectionDown;
  float rollCorrectionDampFactor;
  float pitchCorrectionDampFactor;
  float unk31C;
  void* unkCallback;
  RED4ext::Handle<RED4ext::ent::Entity> puppet;
  RED4ext::Handle<RED4ext::game::FPPCameraComponent> vehicleFFP;
  uint8_t isInCombat;
  uint8_t unk379[7];
  RED4ext::Handle<void> vehicleBlendCamera;
  RED4ext::Handle<void> unkHandle360;
  RED4ext::Handle<void> unkHandle370;
  uint8_t unk380;
  uint8_t unk381;
  uint8_t unk382;
  uint8_t unk383;
  uint8_t unk384;
  uint8_t unk385;
  uint8_t unk386;
  uint8_t unk387;
  uint64_t unk388;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::CameraManager_vtbl : RED4ext::IScriptable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::VehiclePhysicsInsert1  {
  RED4ext::Vector4 referencePose1;
  RED4ext::Vector4 referencePose2;
  float invBoneDistance;
  float unk24;
  float unk28;
  float unk2C;
  int32_t unk30;
  RED4ext::Vector3 unk34;
  RED4ext::Quaternion unk40;
  void* physx3Thing1;
  uint64_t unk58;
  float boneDistance;
  float actualTotalVerticalDistance;
  float actualVisualSuspensionDroop;
  float tireRadius;
  float rimRadius;
  float tireWidth;
  float wheelOffset;
  float tireLateralSlipEffectMul;
  float tireRollingResistanceCoef;
  float springReboundDampingLowRate;
  float springBoundDampingLowRate;
  float tireLongitudinalSlipEffectMul;
  float tireFrictionCoef;
  float frictionMulLongitudinal;
  float tireGrip;
  float invTireGrip;
  float maxBrakingTorque;
  float extremeCompressionEventScalor;
  float springDamping;
  float frictionMulLateral;
  float springDampingLowRateCompression;
  float springReboundDamping;
  float stringStiffness;
  float swaybarStiffness;
  float springDampingHighRateCompression;
  float mass;
  float swaybarLengthScalar;
  float swaybarDisplacementLimit;
  float visualSuspensionDroop;
  float logicalSuspensionCompressionLength;
  float visualSuspensionCompressionLength;
  float wheelsVerticalOffset;
  uint8_t isDrive;
  uint8_t isMainBrake;
  uint8_t isHandBrake;
  uint8_t unkE3[5];
  void* parent3;
  RED4ext::Handle<void> vehicleWheelDimensionsPreset;
  RED4ext::Handle<void> vehicleWheelDrivingPreset;
  RED4ext::Handle<void> vehicleWheelRolePreset;
  RED4ext::CName boneName1;
  RED4ext::CName boneName2;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::MaterialFx  {
  RED4ext::vehicle::MaterialCondition normal;
  RED4ext::vehicle::MaterialCondition wet;
  RED4ext::vehicle::MaterialCondition rain;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::anim::Interpolator>>  {
  RED4ext::Handle<RED4ext::ink::anim::Interpolator>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::IWorkspotSystem : RED4ext::world::IRuntimeSystem {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::IWorkspotSystem_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ent::IAttachment>  {
  RED4ext::ent::IAttachment* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<unsigned char>  {
  uint8_t* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::RefCnt  {
  uint32_t strongRefs;
  uint32_t weakRefs;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::physics::ApperanceMaterial>  {
  RED4ext::physics::ApperanceMaterial* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::audio::VehicleMetadata : RED4ext::audio::CustomEmitterMetadata {
  RED4ext::CName vehicleCollisionSettings;
  RED4ext::CName vehicleGridDestructionSettings;
  RED4ext::CName vehiclePartSettings;
  float collisionCooldown;
  float minRpm;
  float maxRpm;
  float maxPlayingDistance;
  float dopplerFactor;
  float suspensionSqueekTimeout;
  float exitDelay;
  bool testWheelMaterial;
  bool hasRadioReceiver;
  bool usesPoliceRadioStation;
  uint8_t unk6F[1];
  float acousticIsolationFactor;
  uint8_t unk74[4];
  RED4ext::CName trafficEmitterMetadata;
  RED4ext::CName radioReceiverType;
  RED4ext::DynArray<RED4ext::CName> matchingStartupRadioStations;
  float radioPlaysWhenEngineStartsProbability;
  uint8_t unk9C[4];
  RED4ext::audio::VehicleGeneralData generalData;
  RED4ext::audio::VehicleMechanicalData mechanicalData;
  RED4ext::audio::VehicleWheelData wheelData;
  RED4ext::audio::VehicleEmitterPositionData emitterPositionData;
  uint8_t unk32C[4];
  RED4ext::DynArray<RED4ext::CName> gearSweeteners;
  uint8_t unk340[16];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::VehicleMetadata_vtbl : RED4ext::audio::CustomEmitterMetadata_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::anim::Interpolator : RED4ext::IScriptable {
  uint8_t unk40[24];
  bool useRelativeDuration;
  bool isAdditive;
  uint8_t unk5A[2];
  float startDelay;
  float duration;
  RED4ext::ink::anim::InterpolationMode interpolationMode;
  RED4ext::ink::anim::InterpolationType interpolationType;
  RED4ext::ink::anim::InterpolationDirection interpolationDirection;
  uint8_t unk67[1];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::anim::Interpolator_vtbl : RED4ext::IScriptable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::game::interactions::Component>  {
  RED4ext::game::interactions::Component* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::move::Component>  {
  RED4ext::move::Component* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::IVehicleSystem : RED4ext::game::IGameSystem, RED4ext::game::VehicleInterface1 {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::IVehicleSystem_vtbl : RED4ext::game::IGameSystem_vtbl{
  void (*sub_1A8)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_1B0)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_1B8)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_1C0)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_1C8)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_1D0)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_1D8)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_1E0)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_1E8)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_1F0)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_1F8)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_200)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_208)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_210)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_218)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_220)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_228)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_230)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_238)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_240)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_248)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_250)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_258)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_260)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_268)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_270)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_278)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_280)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_288)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_290)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_298)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_2A0)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_2A8)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_2B0)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_2B8)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_2C0)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_2C8)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_2D0)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_2D8)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_2E0)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_2E8)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_2F0)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_2F8)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_300)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_308)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_310)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_318)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_320)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_328)(RED4ext::game::IVehicleSystem *__hidden this);
  void* (*sub_330)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_338)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_340)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_348)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_350)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_358)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_360)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_368)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_370)(RED4ext::game::IVehicleSystem *__hidden this);
  void (*sub_378)(RED4ext::game::IVehicleSystem *__hidden this);
  uint64_t** (*sub_380)(RED4ext::game::IVehicleSystem *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::UpdateManager  {
  RED4ext::DynArray<RED4ext::UpdateManager::UpdateStorage> storage[13];
  uint32_t arrayCount;
  uint32_t unkD4;
  RED4ext::UpdateEntry* unkD8[24];
  uint32_t count0;
  uint32_t unk19C;
  RED4ext::UpdateEntry* entries0[13];
  uint32_t count1;
  uint32_t unk20C;
  RED4ext::UpdateEntry* entries1[12];
  uint32_t count2;
  uint32_t unk274;
  RED4ext::UpdateEntry* entries2[3];
  uint32_t count3;
  uint32_t count4;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::Unk570::Unk40  {
  RED4ext::Transform unk00;
  RED4ext::Vector4 unk20;
  RED4ext::CName physicalMaterial;
  uint8_t unk38;
  uint32_t unk3C;
  RED4ext::Vector3 unk40;
  float unk4C;
  float unk50;
  RED4ext::WorldPosition decalNormal;
  RED4ext::Vector3 unk60;
  float wheelAngularSpeed;
  float visualDisplacementClamped;
  float wheelLatSlip;
  float wheelLongSlip;
  bool isUnderwater;
  bool condition;
  uint8_t unk7E[2];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::GameSystemData  {
  RED4ext::CName name;
  bool inPreview;
  bool inSingleplayer;
  bool onClient;
  bool onServer;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::PersistentID  {
  uint64_t entityHash;
  RED4ext::CName componentName;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::game::OccupantSlotData>  {
  RED4ext::game::OccupantSlotData* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::ApperanceMaterial  {
  RED4ext::CName apperanceName;
  RED4ext::CName materialFrom;
  RED4ext::CName material;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemEntityAppearanceChanger : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[176];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemEntityAppearanceChanger_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::CMaterialInstance>>  {
  RED4ext::Handle<RED4ext::CMaterialInstance>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::StaticArray<RED4ext::physics::ProxyManager::Unk102010, 65535>  {
  RED4ext::physics::ProxyManager::Unk102010 entries[0];
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::HashMap<RED4ext::CName, RED4ext::CClassFunction *>  {
  uint32_t* indexTable;
  uint32_t size;
  uint32_t capacity;
  RED4ext::HashMap::NodeList nodeList;
  uint64_t allocator;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<float>  {
  float* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemPrefabInstancing>  {
  RED4ext::world::RuntimeSystemPrefabInstancing* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemEntityTransforms : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[288];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemEntityTransforms_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemEntity : RED4ext::world::IRuntimeSystem {
  void* unk48;
  uint64_t unk50;
  uint64_t unk58;
  RED4ext::DynArray<RED4ext::ent::Factory> factories;
  RED4ext::SharedMutex unk70;
  int32_t unk80;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemEntity_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::UserData : RED4ext::IScriptable {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::UserData_vtbl : RED4ext::IScriptable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::CompoundWidget : RED4ext::ink::Widget {
  RED4ext::Handle<RED4ext::ink::MultiChildren> children;
  RED4ext::ink::EChildOrder childOrder;
  uint8_t unk211[3];
  RED4ext::ink::Margin childMargin;
  uint8_t unk224[12];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::CompoundWidget_vtbl : RED4ext::ink::Widget_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::WeakHandle<RED4ext::ink::WidgetLibraryResource> : RED4ext::WeakPtrWithAccess<T> {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::nav::RuntimeSystemPathfinding>  {
  RED4ext::nav::RuntimeSystemPathfinding* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::VehicleDoorsSettingsMetadata  {
  RED4ext::audio::VehicleDoorsSettings door;
  RED4ext::audio::VehicleDoorsSettings trunk;
  RED4ext::audio::VehicleDoorsSettings hood;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::anim::AnimFeature : RED4ext::IScriptable {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::anim::AnimFeature_vtbl : RED4ext::IScriptable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::vehicle::CameraManager>  {
  RED4ext::vehicle::CameraManager* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::SystemResource : RED4ext::CResource {
  RED4ext::DynArray<RED4ext::Handle<RED4ext::physics::SystemBody>> bodies;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::physics::SystemJoint>> joints;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::ComponentsStorage : RED4ext::ISerializable {
  RED4ext::DynArray<RED4ext::Handle<RED4ext::ent::IComponent>> components;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::ComponentsStorage_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::v0::Logger  {
  void(* Trace)(__unnamed::__unnamed::HINSTANCE__*, const int8_t*);
  void(* TraceF)(__unnamed::__unnamed::HINSTANCE__*, const int8_t*);
  void(* TraceW)(__unnamed::__unnamed::HINSTANCE__*, const wchar_t*);
  void(* TraceWF)(__unnamed::__unnamed::HINSTANCE__*, const wchar_t*);
  void(* Debug)(__unnamed::__unnamed::HINSTANCE__*, const int8_t*);
  void(* DebugF)(__unnamed::__unnamed::HINSTANCE__*, const int8_t*);
  void(* DebugW)(__unnamed::__unnamed::HINSTANCE__*, const wchar_t*);
  void(* DebugWF)(__unnamed::__unnamed::HINSTANCE__*, const wchar_t*);
  void(* Info)(__unnamed::__unnamed::HINSTANCE__*, const int8_t*);
  void(* InfoF)(__unnamed::__unnamed::HINSTANCE__*, const int8_t*);
  void(* InfoW)(__unnamed::__unnamed::HINSTANCE__*, const wchar_t*);
  void(* InfoWF)(__unnamed::__unnamed::HINSTANCE__*, const wchar_t*);
  void(* Warn)(__unnamed::__unnamed::HINSTANCE__*, const int8_t*);
  void(* WarnF)(__unnamed::__unnamed::HINSTANCE__*, const int8_t*);
  void(* WarnW)(__unnamed::__unnamed::HINSTANCE__*, const wchar_t*);
  void(* WarnWF)(__unnamed::__unnamed::HINSTANCE__*, const wchar_t*);
  void(* Error)(__unnamed::__unnamed::HINSTANCE__*, const int8_t*);
  void(* ErrorF)(__unnamed::__unnamed::HINSTANCE__*, const int8_t*);
  void(* ErrorW)(__unnamed::__unnamed::HINSTANCE__*, const wchar_t*);
  void(* ErrorWF)(__unnamed::__unnamed::HINSTANCE__*, const wchar_t*);
  void(* Critical)(__unnamed::__unnamed::HINSTANCE__*, const int8_t*);
  void(* CriticalF)(__unnamed::__unnamed::HINSTANCE__*, const int8_t*);
  void(* CriticalW)(__unnamed::__unnamed::HINSTANCE__*, const wchar_t*);
  void(* CriticalWF)(__unnamed::__unnamed::HINSTANCE__*, const wchar_t*);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::AudioPSData  {
  RED4ext::CName activeRadioStation;
  float acousticIsolationFactor;
  bool isPlayerVehicleSummoned;
  uint8_t unk0D[3];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::HashMap<void *, void *>  {
  uint32_t* indexTable;
  uint32_t size;
  uint32_t capacity;
  RED4ext::HashMap::NodeList nodeList;
  uint64_t allocator;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::data::BaseObject_Record : RED4ext::game::data::TweakDBRecord {
  uint8_t unk48[24];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::data::BaseObject_Record_vtbl : RED4ext::game::data::TweakDBRecord_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::FunctionalTestsRuntimeSystem : RED4ext::FunctionalTestsIRuntimeSystem {
  uint8_t unk48[64];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::FunctionalTestsRuntimeSystem_vtbl : RED4ext::FunctionalTestsIRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::action::ActionInterface  {
  RED4ext::action::ActionInterface_vtbl *__vftable;
  RED4ext::action::ActionInterface::Lookup lookup;
  uint32_t unk2C;
  RED4ext::action::ActionInterface::Lookup lookup2;
  uint32_t unk54;
  RED4ext::game::Object* gameObject;
  void* listeners[16];
  uint32_t unk60count;
  uint32_t unkE4;
  RED4ext::SharedMutex actionsMutex;
  RED4ext::SharedMutex mutex2;
  RED4ext::SharedMutex listenersMutex;
  uint8_t unkEB;
  uint32_t unkEC;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::action::ActionInterface_vtbl {
  void (*__ActionInterface)(RED4ext::action::ActionInterface *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::SpawningProcessor : RED4ext::ISerializable {
  uint8_t unk30[136];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::SpawningProcessor_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Matrix>  {
  RED4ext::Matrix* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::IMaterial>>  {
  RED4ext::Handle<RED4ext::IMaterial>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::Unk570::CollisionFxLookup  {
  RED4ext::CName impact_particles;
  RED4ext::CName impact_decal;
  RED4ext::CName scratch_particles;
  RED4ext::CName scratch_decal;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemWeather>  {
  RED4ext::world::RuntimeSystemWeather* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeEntityRegistry : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[112];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeEntityRegistry_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::ComponentHelper : RED4ext::game::IComponentHelper {
  int32_t components;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::ent::IComponent>> handles2;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::ComponentHelper_vtbl : RED4ext::game::IComponentHelper_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::EmitterPosition  {
  RED4ext::Vector4 position;
  uint64_t unk10[2];
  uint64_t entityID;
  uint16_t unk28;
  uint16_t unk2A;
  uint16_t unk2C;
  uint8_t unk2E;
  uint8_t unk2F;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::Unk568  {
  float unk00[3];
  float turnRelated;
  float unk10[4];
  RED4ext::WorldTransform worldTransform;
  RED4ext::Vector4 linearVelocity;
  RED4ext::Vector4 acceleration;
  RED4ext::Transform unk60;
  RED4ext::Vector4 unk80;
  RED4ext::Vector4 unk90;
  float currentForce;
  RED4ext::Vector3 currentForceVector;
  float collisionForce;
  RED4ext::Vector3 collisionForceVector;
  RED4ext::Vector4 rotationalVelocityMaybe;
  float unkD0[4];
  float unkE0;
  float unkE4;
  float unkE8;
  float unkEC;
  float accelerationMaybe;
  float unkF4;
  float unkF8;
  float unkFC;
  float unk100;
  float unk104;
  float unk108;
  float unk10C;
  float unk110;
  float downforceMaybe;
  float gravityScalar;
  float unk11C;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::audio::MetadataManager  {
  RED4ext::audio::MetadataManager_vtbl *__vftable;
  int32_t classNamePresetLookup;
  int32_t switchGroupMapping;
  int32_t switchMapping;
  int32_t stateGroupMapping;
  int32_t stateMapping;
  int32_t gameParameterMapping;
  int32_t busMapping;
  int32_t events;
  RED4ext::Handle<RED4ext::loc::VoiceTagListResource> locVoiceTagListResource;
  uint64_t unk158;
  int32_t unk160;
  RED4ext::DynArray<RED4ext::CName> unk1B0;
  uint64_t unk1A0;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::MetadataManager_vtbl {
  void (*__MetadataManager)(RED4ext::audio::MetadataManager *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::game::data::VehicleDriveModelData_Record>  {
  RED4ext::game::data::VehicleDriveModelData_Record* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemAudio : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[352];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemAudio_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::WaterParams  {
  RED4ext::vehicle::BaseObject* vehicle;
  bool hasWaterParams;
  bool disableAirControl;
  bool disableEngine;
  uint8_t unk0B;
  float unk0C;
  float submergedThreshold;
  float buoyancyCoef;
  float linearDampingCoef;
  float angularDampingCoef;
  float submergedDepthMaybe;
  float minSpeedToApplyImpulses;
  float minDistanceBetweenImpulses;
  float impulseRadius;
  float impulseStrength;
  float impulseOverhangDistance;
  float maxVehicleSpeed;
  float impulseStrengthFallMultiplierMin;
  float impulseStrengthFallMultiplierMax;
  float verticalVelocityThresholdForFallFx;
  float depthThresholdForFallFx;
  float minDistanceBetweenFx;
  RED4ext::CName vfx_impact_water_hash;
  RED4ext::CName vfx_impact_water;
  RED4ext::Handle<RED4ext::ISerializable> unk60;
  RED4ext::DynArray<void *> unk70;
  RED4ext::DynArray<void *> unk80;
  RED4ext::Matrix unk90;
  RED4ext::Box unkD0;
  bool unkF0;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::ResourcePath>  {
  RED4ext::ResourcePath* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::UnkD10::Wheel::UnkE0  {
  uint8_t unk00[96];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::StaticArray<RED4ext::physics::ProxyCacheID, 65535>  {
  RED4ext::physics::ProxyCacheID entries[0];
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemEffectAttachments>  {
  RED4ext::world::RuntimeSystemEffectAttachments* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::VehiclePhysicsInsert2  {
  RED4ext::Vector3 worldPosition;
  RED4ext::Vector3 unk0C;
  float unk18;
  RED4ext::Vector3 unk1C;
  RED4ext::Vector3 position3;
  float unk34;
  float unk38;
  uint32_t unk3C;
  RED4ext::vehicle::PhysicsData* physicsData;
  void* unk48;
  RED4ext::Vector3 unk50;
  RED4ext::Vector3 unk5C;
  RED4ext::Vector3 unk68;
  RED4ext::Vector4 unk74;
  RED4ext::Vector3 unk84;
  RED4ext::Vector4 unk90;
  RED4ext::CName physMaterial;
  int32_t unkA8[3];
  float relatedToInAir;
  float unkB8[2];
  RED4ext::Vector4 unkC0;
  RED4ext::Vector4 unkD0;
  RED4ext::Vector4 unkE0;
  float unkF0;
  float unkF4;
  float turnAngle;
  float unkFC;
  RED4ext::Vector4 unk100;
  float unk110;
  float visualDisplacement;
  float logicalSpringCompression;
  float swaybarDisplacement;
  float dampedSpringForce;
  float unk124;
  float unk128;
  float unk12C;
  float unk130[2];
  float unk138;
  float unk13C[4];
  uint8_t unk14C;
  uint8_t unk14D;
  uint16_t unk14E;
  RED4ext::Vector3 unk150;
  float unk15C;
  float unk160;
  float unk164;
  float unk168;
  float unk16C;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemCamera>  {
  RED4ext::world::RuntimeSystemCamera* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::WeakHandle<RED4ext::game::Object> : RED4ext::WeakPtrWithAccess<T> {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::physics::SystemJoint>  {
  RED4ext::physics::SystemJoint* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::CMaterialInstance>  {
  RED4ext::CMaterialInstance* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ink::MultiChildren>  {
  RED4ext::ink::MultiChildren* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::anim::AnimFeature_FPPCamera>  {
  RED4ext::anim::AnimFeature_FPPCamera* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::VehicleSystem : RED4ext::game::IVehicleSystem, RED4ext::game::VehicleInterface2, RED4ext::game::VehicleInterface3 {
  uint64_t unk50[3];
  uint64_t unk78;
  uint64_t unk80[4];
  uint64_t unkA0;
  uint64_t unkA8[43];
  uint64_t unk200;
  uint64_t unk208[7519];
  RED4ext::game::VehicleSystem::HandleStorage unkED00[1500];
  uint32_t unk179A0;
  uint32_t unk179A4;
  uint64_t unk179AB[1500];
  uint32_t unk1A888;
  uint32_t unk1A88C;
  uint64_t unk1A890;
  uint64_t unk1A898[3009];
  float unk206A0;
  uint32_t unk206A4;
  uint64_t unk206A8[28];
  uint8_t unk20788;
  RED4ext::SharedMutex unk20789;
  uint8_t unk2078A;
  uint8_t unk2078B;
  uint8_t unk2078C;
  uint8_t unk2078D;
  uint8_t unk2078E;
  uint8_t unk2078F;
  int32_t unk20790;
  uint64_t unk207B8[4];
  RED4ext::SharedMutex unk207D8;
  RED4ext::DynArray<unsigned long long> unk207E0;
  uint64_t unk207F0[19];
  RED4ext::SharedMutex unk20888;
  uint64_t unk20890[6];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::VehicleSystem_vtbl : RED4ext::game::IVehicleSystem_vtbl{
  uint64_t** (*sub_380)(RED4ext::game::VehicleSystem *__hidden this, void**);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemTraffic : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[37432];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemTraffic_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::physics::ColliderSphere : RED4ext::physics::ICollider {
  float radius;
  uint8_t unk94[12];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::ColliderSphere_vtbl : RED4ext::physics::ICollider_vtbl{
  void* (*CreatePxShape)(RED4ext::physics::ColliderSphere *__hidden this, RED4ext::Vector3*, void*, bool, void*);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::InternalFunctionalTestsRuntimeSystem>  {
  RED4ext::InternalFunctionalTestsRuntimeSystem* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ink::anim::Interpolator>  {
  RED4ext::ink::anim::Interpolator* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::WeakHandle<RED4ext::vehicle::BaseObject> : RED4ext::WeakPtrWithAccess<T> {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::TireParameterUpdate::Variables  {
  float skidValue;
  uint32_t wheelIndex;
  RED4ext::CName emitterName;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::MaterialCondition  {
  RED4ext::vehicle::MaterialResource particle;
  RED4ext::vehicle::MaterialResource decal;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::Emitter  {
  RED4ext::CName emitterName;
  RED4ext::audio::Emitter* parent;
  RED4ext::audio::GameParameterStorage parameters;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::CorpseSystem : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[24640];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::CorpseSystem_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::DestructionPSData  {
  int32_t gridValues;
  uint32_t brokenGlass;
  uint32_t brokenLights;
  uint8_t flatTire;
  bool windshieldShattered;
  uint8_t unk82[6];
  RED4ext::DynArray<RED4ext::Vector3> windshieldPoints;
  RED4ext::DynArray<RED4ext::CName> detachedParts;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::anim::SequenceTargetInfo>>  {
  RED4ext::Handle<RED4ext::ink::anim::SequenceTargetInfo>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::PhysicsJointLimitBase  {
  uint8_t unk00[8];
  float restitution;
  float bounceThreshold;
  float stiffness;
  float damping;
  float contactDistance;
  uint8_t unk1C[4];
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::ComponentPS : RED4ext::game::PersistentState {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::ComponentPS_vtbl : RED4ext::game::PersistentState_vtbl{
  void (*sub_130)(RED4ext::game::ComponentPS *__hidden this);
  void (*sub_138)(RED4ext::game::ComponentPS *__hidden this);
  void (*sub_140)(RED4ext::game::ComponentPS *__hidden this);
  void (*sub_148)(RED4ext::game::ComponentPS *__hidden this);
  void (*sub_150)(RED4ext::game::ComponentPS *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::Unk570::FxSettings  {
  float decalNormalOffset;
  float impactNormalForceThreshold;
  float impactTangentialForceThreshold;
  float wheelAngularSpeedThreshold;
  float wheelLongSlipThreshold;
  float wheelLatSlipThreshold;
  float scratchPositionTolerance;
  float minTimeBetweenImpulses;
  float minDistanceBetweenImpulses;
  float impulseRadius_Min;
  float impulseRadius_Max;
  float impulseStrength_Min;
  float impulseStrength_Max;
  float rainMoistureThreshold;
  RED4ext::CName paramImpactForce;
  RED4ext::CName paramScratchForce;
  RED4ext::CName paramLongSlip;
  RED4ext::CName paramLatSlip;
  RED4ext::CName paramTotalSlip;
  RED4ext::CName paramVehicleSpeed;
  RED4ext::CName paramWheelAngularSpeed;
  RED4ext::CName paramEngineRPM;
  float paramImpactForce_Max;
  float paramScratchForce_Max;
  float paramLongSlip_Max;
  float paramLatSlip_Max;
  float paramWheelLongSlip_Min;
  float paramWheelLongSlip_Max;
  float paramWheelLatSlip_Min;
  float paramWheelLatSlip_Max;
  float paramTotalSlip_Min;
  float paramTotalSlip_Max;
  float paramVehicleSpeed_Min;
  float paramVehicleSpeed_Max;
  float paramWheelAngularSpeed_Min;
  float paramWheelAngularSpeed_Max;
  float paramEngineRPM_Min;
  float paramEngineRPM_Max;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::vehicle::BaseObject>  {
  RED4ext::vehicle::BaseObject* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::Slot  {
  RED4ext::CName slotName;
  RED4ext::CName boneName;
  RED4ext::Vector3 relativePosition;
  uint8_t unk1C[4];
  RED4ext::Quaternion relativeRotation;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemVisibility>  {
  RED4ext::world::RuntimeSystemVisibility* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::interactions::InteractionDefinitionOverrider  {
  RED4ext::CName tag;
  uint8_t unk08[8];
  RED4ext::DynArray<RED4ext::Handle<RED4ext::game::interactions::IShapeDefinition>> shapes;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::game::interactions::IShapeDefinition>> negativeShapes;
  float priorityMultiplier;
  uint8_t unk34[44];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ink::Widget>  {
  RED4ext::ink::Widget* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ink::anim::Processor>  {
  RED4ext::ink::anim::Processor* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::net::EntitySystem : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[72];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::net::EntitySystem_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::StaticArray<RED4ext::vehicle::WheelRuntimePSData, 4>  {
  RED4ext::vehicle::WheelRuntimePSData entries[0];
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::ent::Factory>  {
  RED4ext::ent::Factory* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::game::HitShapeUserData>  {
  RED4ext::game::HitShapeUserData* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::WidgetLibraryItem  {
  RED4ext::CName name;
  RED4ext::SharedDataBuffer package;
  RED4ext::DataBuffer packageData;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::physics::ICollider>  {
  RED4ext::physics::ICollider* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::vehicle::CarBaseObject : RED4ext::vehicle::WheeledBaseObject {
  RED4ext::vehicle::PID pitchPID;
  RED4ext::vehicle::PID rollPID;
  float pitchCorrection;
  float rollCorrection;
  uint64_t unk9E8;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::CarBaseObject_vtbl : RED4ext::vehicle::WheeledBaseObject_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Memory::AllocationResult  {
  void* memory;
  uint64_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::anim::AnimSetup  {
  RED4ext::DynArray<RED4ext::anim::AnimSetupEntry> cinematics;
  RED4ext::DynArray<RED4ext::anim::AnimSetupEntry> gameplay;
  uint64_t hash;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::ui::RuntimeSystemUI>  {
  RED4ext::world::ui::RuntimeSystemUI* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::RenderSceneLayerMask  {
  uint8_t Default: 1;
  uint8_t Cyberspace: 1;
  uint8_t WorldMap: 1;
  uint8_t b3: 1;
  uint8_t b4: 1;
  uint8_t b5: 1;
  uint8_t b6: 1;
  uint8_t b7: 1;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::WidgetBaseComponent : RED4ext::ent::IPlacedComponent {
  uint8_t unk120[80];
  RED4ext::WidgetBaseComponent_Helper helper;
  uint64_t unk198;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::WidgetBaseComponent_vtbl : RED4ext::ent::IPlacedComponent_vtbl{
  void* (*sub_258)(RED4ext::WidgetBaseComponent *__hidden this, void*);
  bool (*sub_260)(RED4ext::WidgetBaseComponent *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemSnapSovler>  {
  RED4ext::world::RuntimeSystemSnapSovler* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::IGameInstance  {
  RED4ext::IGameInstance_vtbl *__vftable;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::IGameInstance_vtbl {
  void (*__IGameInstance)(RED4ext::IGameInstance *__hidden this);
  RED4ext::IScriptable* (*GetInstance)(RED4ext::IGameInstance *__hidden this, const RED4ext::CClass*);
  RED4ext::world::RuntimeInfo* (*GetRuntimeInfo)(RED4ext::IGameInstance *__hidden this);
  RED4ext::Memory::IAllocator* (*GetAllocator)(RED4ext::IGameInstance *__hidden this);
  void (*sub_20)(RED4ext::IGameInstance *__hidden this, uint8_t*, uint64_t, uint32_t*);
  bool (*RegisterUpdates)(RED4ext::IGameInstance *__hidden this, RED4ext::world::RuntimeInfo**);
  void* (*GetUnk130)(RED4ext::IGameInstance *__hidden this);
  void* (*GetUnk138)(RED4ext::IGameInstance *__hidden this);
  void (*SaveGame)(RED4ext::IGameInstance *__hidden this, uint64_t, uint64_t, uint64_t);
  void (*SomethingAutoSave_sub_1B8)(RED4ext::IGameInstance *__hidden this, uint64_t);
  void (*SomethingAutoSave_sub_1C0)(RED4ext::IGameInstance *__hidden this);
  void (*Systems130)(RED4ext::IGameInstance *__hidden this);
  uint8_t (*sub_60)(RED4ext::IGameInstance *__hidden this, RED4ext::GameSystemData*, uint8_t*);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CallbackStorage : RED4ext::CallbackInstance {
  uint16_t typeId;
  uint8_t isScripted;
  uint8_t unk23;
  uint32_t unk24;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::game::Puppet>  {
  RED4ext::game::Puppet* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::anim::AnimSetupEntry>  {
  RED4ext::anim::AnimSetupEntry* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemMoverComponents : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[128];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemMoverComponents_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::JobParamSet  {
  uint8_t unk00;
  uint8_t unk01;
  uint8_t unk02;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::IGameSystem::HighLow  {
  void* unk00;
  void* performance;
  uint8_t crowdDensity;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::CanvasWidget : RED4ext::ink::CompoundWidget {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::CanvasWidget_vtbl : RED4ext::ink::CompoundWidget_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::WorldTransform  {
  RED4ext::WorldPosition Position;
  uint8_t unk0C[4];
  RED4ext::Quaternion Orientation;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::appearance::AppearancePartOverrides  {
  int32_t partResource;
  RED4ext::DynArray<RED4ext::appearance::PartComponentOverrides> componentsOverrides;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Map<RED4ext::CString, RED4ext::CString>  {
  RED4ext::DynArray<T> keys;
  RED4ext::DynArray<T> values;
  int32_t flags;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::Thing::__anonymous7  {
  RED4ext::audio::Thing* audioThing;
  uint64_t unk08;
  uint64_t unk10;
  void* callback;
  void* unk20;
  uint32_t flags;
  uint64_t unk30;
  uint64_t unk38;
  uint64_t unk40;
  RED4ext::audio::BankManager* bankManager;
  uint64_t* unk50;
  RED4ext::audio::Metadata* audioMetadataManager;
  uint64_t* unk60;
  RED4ext::audio::Emitters* emitters;
  RED4ext::audio::EmitterPositions* emitterPositions;
  uint64_t* unk78;
  uint64_t* unk80;
  uint64_t unk88;
  RED4ext::Quaternion unk90;
  RED4ext::Quaternion unkA0;
  RED4ext::Vector4 unkB0;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::GameSystemData>  {
  RED4ext::GameSystemData* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::physics::CustomFilterData : RED4ext::ISerializable {
  RED4ext::DynArray<RED4ext::CName> collisionType;
  RED4ext::DynArray<RED4ext::CName> collideWith;
  RED4ext::DynArray<RED4ext::CName> queryDetect;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::CustomFilterData_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::vehicle::Unk570::Unk40>  {
  RED4ext::vehicle::Unk570::Unk40* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::vehicle::PersistentDataPS>  {
  RED4ext::vehicle::PersistentDataPS* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemCompiledTerrain>  {
  RED4ext::world::RuntimeSystemCompiledTerrain* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Quaternion  {
  float i;
  float j;
  float k;
  float r;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::FallbackSlot  {
  RED4ext::CName slotName;
  RED4ext::CName boneName;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::RuntimeSystemLights : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[144];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::RuntimeSystemLights_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::HitShapeContainer  {
  RED4ext::CName name;
  RED4ext::CName slotName;
  RED4ext::Color color;
  uint8_t unk14[4];
  RED4ext::Handle<RED4ext::game::IHitShape> shape;
  RED4ext::Handle<RED4ext::game::HitShapeUserData> userData;
  RED4ext::physics::MaterialReference physicsMaterial;
  uint8_t unk40[8];
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::action::ActionBase  {
  RED4ext::action::ActionBase_vtbl *__vftable;
  uint32_t unk08;
  uint32_t unk0C;
  RED4ext::action::ActionInterface* actionInterface;
  RED4ext::action::Type unk18;
  RED4ext::game::EActionFlags unk1A;
  uint32_t unk1C;
  uint64_t nextAction;
  RED4ext::game::EActionStatus status;
  uint32_t unk2C;
  RED4ext::Handle<RED4ext::ISerializable> unk30;
  uint32_t unk40;
  int32_t replicationId;
  int32_t unk48;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::action::ActionBase_vtbl {
  void (*__ActionBase)(RED4ext::action::ActionBase *__hidden this);
  void (*sub_08)(RED4ext::action::ActionBase *__hidden this);
  RED4ext::CString* (*GetActionName)(RED4ext::action::ActionBase *__hidden this, RED4ext::CString*);
  void (*sub_18)(RED4ext::action::ActionBase *__hidden this);
  void (*sub_20)(RED4ext::action::ActionBase *__hidden this, uint64_t);
  void (*sub_28)(RED4ext::action::ActionBase *__hidden this);
  void (*sub_30)(RED4ext::action::ActionBase *__hidden this);
  void (*sub_38)(RED4ext::action::ActionBase *__hidden this);
  void (*sub_40)(RED4ext::action::ActionBase *__hidden this);
  void (*sub_48)(RED4ext::action::ActionBase *__hidden this);
  void (*sub_50)(RED4ext::action::ActionBase *__hidden this, uint64_t);
  RED4ext::CClass* (*sub_58)(RED4ext::action::ActionBase *__hidden this);
  bool (*sub_60)(RED4ext::action::ActionBase *__hidden this);
  void (*sub_68)(RED4ext::action::ActionBase *__hidden this, RED4ext::game::ActionReplicatedState*);
  void (*sub_70)(RED4ext::action::ActionBase *__hidden this, RED4ext::game::ActionReplicatedState*);
  void (*sub_78)(RED4ext::action::ActionBase *__hidden this);
  void (*sub_80)(RED4ext::action::ActionBase *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemFoliage : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[440];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemFoliage_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ink::WidgetLibraryItemInstance>  {
  RED4ext::ink::WidgetLibraryItemInstance* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::IVisualComponent : RED4ext::ent::IPlacedComponent {
  float autoHideDistance;
  uint8_t unk124[1];
  int8_t forceLODLevel;
  RED4ext::RenderSceneLayerMask renderSceneLayerMask;
  uint8_t unk127[25];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::IVisualComponent_vtbl : RED4ext::ent::IPlacedComponent_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemMarkers : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[532504];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemMarkers_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemDismemberment>  {
  RED4ext::world::RuntimeSystemDismemberment* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::WidgetHudComponentInterface::Widget>  {
  RED4ext::WidgetHudComponentInterface::Widget* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::anim::AnimSetupEntry  {
  int32_t animSet;
  RED4ext::DynArray<RED4ext::CName> variableNames;
  uint8_t priority;
  uint8_t unk19[7];
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::IComponentHelper  {
  RED4ext::game::IComponentHelper_vtbl *__vftable;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::IComponentHelper_vtbl {
  void* (*Destruct)(RED4ext::game::IComponentHelper *__hidden this, uint8_t);
  bool (*HasComponent)(RED4ext::game::IComponentHelper *__hidden this, uint64_t);
  RED4ext::Handle<RED4ext::ent::IComponent>* (*GetComponent)(RED4ext::game::IComponentHelper *__hidden this, RED4ext::Handle<RED4ext::ent::IComponent>*, uint64_t);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::TPPCameraPreset  {
  RED4ext::Vector3 lookAtOffset;
  float defaultRotationPitch;
  float boomLength;
  float airFlowDistortionSpeedMin;
  float airFlowDistortionSpeedMax;
  float airFlowDistortionHorizontal;
  float airFlowDistortionVertical;
  uint32_t distance;
  int32_t index;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::physics::SystemBody>  {
  RED4ext::physics::SystemBody* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemTriggers : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[8];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemTriggers_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::UITransform  {
  RED4ext::Vector2 translation;
  RED4ext::Vector2 scale;
  float rotation;
  RED4ext::Vector2 shear;
  uint8_t unk1C[20];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::StaticArray<RED4ext::physics::ProxyCacheEntry, 65535>  {
  RED4ext::physics::ProxyCacheEntry entries[0];
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::UpdatableSystems  {
  RED4ext::DynArray<RED4ext::Handle<RED4ext::IScriptable>>* gameSystems;
  RED4ext::world::RuntimeScene* runtimeSystems;
  RED4ext::Handle<RED4ext::game::GameFeatureManager> featureManager;
  uint8_t unk20;
  uint8_t unk21;
  uint8_t unk22;
  uint8_t unk23;
  uint8_t unk24;
  uint8_t unk25;
  uint8_t unk26;
  uint8_t unk27;
  uint64_t gameplay_perfomance;
  uint64_t graphics_raytracing;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::ProxyCacheEntry  {
  RED4ext::physics::ProxyID proxyID;
  uint16_t counter;
  uint8_t unk06;
  uint8_t wake;
  RED4ext::physics::ProxyCacheEntry* previous;
  uint32_t unk10;
  uint32_t dataCacheIndex[4];
  uint8_t updateType[4];
  uint8_t bodyIndex[4];
  uint8_t shapeIndex[4];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::BankManager  {
  int32_t vehicleBanks;
  int32_t loadedBanks;
  RED4ext::SharedMutex loadedBanksMutex;
  int32_t vehicleBanksAdditional;
  uint64_t unk30[33];
  uint64_t unk1A0;
  uint8_t unk1A8;
  uint8_t unk1A9;
  uint16_t unk1AA;
  uint16_t unk1AC;
  uint16_t unk1AE;
  uint64_t unk1B0;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ink::PropertyManager>  {
  RED4ext::ink::PropertyManager* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::Window : RED4ext::ink::CanvasWidget {
  uint8_t unk230[64];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::Window_vtbl : RED4ext::ink::CanvasWidget_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::data::SpawnableObject_Record : RED4ext::game::data::BaseObject_Record {
  uint8_t unk60[24];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::data::SpawnableObject_Record_vtbl : RED4ext::game::data::BaseObject_Record_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::TimeDilatable : RED4ext::game::Object {
  uint8_t unk240[32];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::TimeDilatable_vtbl : RED4ext::game::Object_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::NodeRef  {
  int64_t unk00;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::EmitterPositions  {
  RED4ext::audio::EmitterPosition emitterPosition[4096];
  int32_t nodeList;
  int32_t entities;
  int32_t unk48;
  uint64_t unk70;
  RED4ext::SharedMutex entitiesMutex;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::CallbackManager>  {
  RED4ext::CallbackManager* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::Puppet : RED4ext::game::PuppetBase {
  uint8_t unk268[800];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::Puppet_vtbl : RED4ext::game::PuppetBase_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::physics::ICollider : RED4ext::ISerializable {
  RED4ext::Transform localToBody;
  RED4ext::CName material;
  RED4ext::DynArray<RED4ext::physics::ApperanceMaterial> materialApperanceOverrides;
  RED4ext::CName tag;
  RED4ext::Handle<RED4ext::physics::FilterData> filterData;
  float volumeModifier;
  bool isImported;
  bool isQueryShapeOnly;
  uint8_t unk86[10];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::ICollider_vtbl : RED4ext::ISerializable_vtbl{
  void (*sub_D8)(RED4ext::physics::ICollider *__hidden this);
  void (*sub_E0)(RED4ext::physics::ICollider *__hidden this);
  void* (*CreatePxShape)(RED4ext::physics::ICollider *__hidden this, RED4ext::Vector3*, void*, bool, void*);
  RED4ext::Box* (*sub_F0)(RED4ext::physics::ICollider *__hidden this, RED4ext::Box*);
  void (*sub_F8)(RED4ext::physics::ICollider *__hidden this);
  void (*sub_100)(RED4ext::physics::ICollider *__hidden this);
  void (*sub_108)(RED4ext::physics::ICollider *__hidden this);
  void (*sub_110)(RED4ext::physics::ICollider *__hidden this);
  void (*sub_118)(RED4ext::physics::ICollider *__hidden this);
  bool (*sub_120)(RED4ext::physics::ICollider *__hidden this);
  void (*sub_128)(RED4ext::physics::ICollider *__hidden this);
  void (*sub_130)(RED4ext::physics::ICollider *__hidden this);
  void (*sub_138)(RED4ext::physics::ICollider *__hidden this);
  void (*sub_140)(RED4ext::physics::ICollider *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::physics::SystemJoint>>  {
  RED4ext::Handle<RED4ext::physics::SystemJoint>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::PropertyBinding  {
  RED4ext::CName propertyName;
  RED4ext::CName stylePath;
  uint8_t unk10[40];
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::vehicle::WheeledBaseObject : RED4ext::vehicle::BaseObject {
  RED4ext::vehicle::WheeledBaseObject::Unk980* unk980;
  void* transmissionData;
  void* engineData;
  void* burnoutData;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::WheeledBaseObject_vtbl : RED4ext::vehicle::BaseObject_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::Thing::__anonymous5  {
  uint64_t unk00;
  uint64_t* unk08;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::TagMask  {
  RED4ext::red::TagList hardTags;
  RED4ext::red::TagList softTags;
  RED4ext::red::TagList excludedTags;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::IHitShape : RED4ext::ISerializable {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::IHitShape_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::VehicleWheelData  {
  float suspensionPressureMultiplier;
  float landingSuspensionPressureMultiplier;
  float suspensionPressureLimit;
  float minSuspensionPressureThreshold;
  float suspensionImpactCooldown;
  float minWheelTimeInAirBeforeLanding;
  RED4ext::DynArray<RED4ext::CName> wheelStartEvents;
  RED4ext::DynArray<RED4ext::CName> wheelStopEvents;
  RED4ext::DynArray<RED4ext::CName> wheelRegularSuspensionImpacts;
  RED4ext::DynArray<RED4ext::CName> wheelLandingSuspensionImpacts;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ink::UserData>  {
  RED4ext::ink::UserData* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DataBuffer  {
  RED4ext::RawBuffer buffer;
  uint64_t unk20;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::ProxyManager  {
  RED4ext::SharedMutex unk0000;
  uint64_t unk0008[1023];
  uint32_t unk2000;
  uint32_t unk2004;
  uint32_t unk2008;
  uint32_t unk200C;
  uint32_t unk2010;
  RED4ext::StaticArray<RED4ext::Handle<RED4ext::physics::BaseProxy>, 65535> systemKeys;
  RED4ext::StaticArray<RED4ext::physics::ProxyManager::Unk102010, 65535> unk102010;
  RED4ext::StaticArray<RED4ext::physics::ProxyCacheEntry *, 65535> proxyCacheEntries;
  int32_t unk1A2018;
  RED4ext::StaticArray<RED4ext::ent::ITransformAttachable, 65535> interfaces;
  uint32_t refCounts_2A2018[15];
  RED4ext::StaticArray<RED4ext::physics::ProxyCacheID, 65535> proxyCacheIDs;
  RED4ext::SharedMutex unk2E2054;
  RED4ext::DynArray<RED4ext::physics::ProxyID> unk2E2058;
  int32_t unk2E2068;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ink::anim::Sequence>  {
  RED4ext::ink::anim::Sequence* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::action::ActionBase>  {
  RED4ext::action::ActionBase* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::PhysicsJointLimitConePair : RED4ext::physics::PhysicsJointLimitBase {
  float yAngle;
  float zAngle;
  RED4ext::physics::PhysicsJointMotion swingY;
  RED4ext::physics::PhysicsJointMotion swingZ;
  uint8_t unk2A[6];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::Unk570  {
  RED4ext::vehicle::BaseObject* vehicle;
  void* animationController;
  RED4ext::Handle<void *> vehiclePassenger;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::world::EffectBlackboard>> unk20;
  RED4ext::DynArray<RED4ext::vehicle::Unk570::Unk30> unk30;
  RED4ext::DynArray<RED4ext::vehicle::Unk570::Unk40> unk40;
  RED4ext::Handle<RED4ext::world::EffectBlackboard> unk50;
  RED4ext::DynArray<void *> unk60;
  RED4ext::DynArray<void *> unk70;
  RED4ext::Handle<RED4ext::world::EffectBlackboard> veh_engine_throttle_input;
  RED4ext::Handle<RED4ext::world::EffectBlackboard> veh_motion_blur_scale;
  RED4ext::world::RuntimeSystemEffects* runtimeSystemEffects;
  RED4ext::vehicle::Unk570::FxSettings* fxSettings;
  RED4ext::DynArray<RED4ext::Vector4> unkB0;
  RED4ext::DynArray<RED4ext::Vector3> unkC0;
  int32_t collisionFxLookup;
  int32_t fxLookup;
  int32_t smearFxLookup;
  uint64_t physMaterial;
  int32_t fxLookupFront;
  int32_t smearFxLookupFront;
  RED4ext::CName defaultMaterial;
  RED4ext::DynArray<RED4ext::Handle<void *>> unk1D0;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::IScriptable : RED4ext::ISerializable {
  RED4ext::CClass* unk30;
  void* valueHolder;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::IScriptable_vtbl : RED4ext::ISerializable_vtbl{
  void (*sub_D8)(RED4ext::IScriptable *__hidden this, int64_t, int64_t);
  void (*sub_E0)(RED4ext::IScriptable *__hidden this);
  void (*sub_E8)(RED4ext::IScriptable *__hidden this);
  void (*sub_F0)(RED4ext::IScriptable *__hidden this);
  void (*sub_F8)(RED4ext::IScriptable *__hidden this);
  void (*sub_100)(RED4ext::IScriptable *__hidden this);
  void (*sub_108)(RED4ext::IScriptable *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::VehicleInterface1  {
  RED4ext::game::VehicleInterface1_vtbl *__vftable;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::VehicleInterface1_vtbl {
  void (*__VehicleInterface1)(RED4ext::game::VehicleInterface1 *__hidden this);
  void (*VI1_sub_08)(RED4ext::game::VehicleInterface1 *__hidden this);
  void (*VI1_sub_10)(RED4ext::game::VehicleInterface1 *__hidden this);
  void (*VI1_sub_18)(RED4ext::game::VehicleInterface1 *__hidden this);
  void (*VI1_sub_20)(RED4ext::game::VehicleInterface1 *__hidden this);
  void (*VI1_sub_28)(RED4ext::game::VehicleInterface1 *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::loc::VoiceTag>  {
  RED4ext::loc::VoiceTag* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::ISourceBinding : RED4ext::ent::IBinding {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::ISourceBinding_vtbl : RED4ext::ent::IBinding_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::FunctionalTestsIRuntimeSystem : RED4ext::world::IRuntimeSystem {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::FunctionalTestsIRuntimeSystem_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::IScriptable>>  {
  RED4ext::Handle<RED4ext::IScriptable>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::world::EffectBlackboard>>  {
  RED4ext::Handle<RED4ext::world::EffectBlackboard>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::CBaseGameApplication  {
  RED4ext::CBaseGameApplication_vtbl *__vftable;
  RED4ext::CString unk8;
  RED4ext::CString unk28;
  RED4ext::CString unk48;
  RED4ext::CString unk68;
  RED4ext::CString unk88;
  RED4ext::CString unkA8;
  RED4ext::CString unkC8;
  RED4ext::CString unkE8;
  uint8_t unk108;
  uint64_t unk110;
  uint64_t unk118;
  uint64_t unk120;
  uint64_t unk128;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CBaseGameApplication_vtbl {
  void (*__CBaseGameApplication)(RED4ext::CBaseGameApplication *__hidden this);
  void (*sub_8)(RED4ext::CBaseGameApplication *__hidden this);
  void (*sub_10)(RED4ext::CBaseGameApplication *__hidden this);
  void (*sub_18)(RED4ext::CBaseGameApplication *__hidden this);
  void (*sub_20)(RED4ext::CBaseGameApplication *__hidden this);
  void (*sub_28)(RED4ext::CBaseGameApplication *__hidden this);
  void (*sub_30)(RED4ext::CBaseGameApplication *__hidden this);
  void (*sub_38)(RED4ext::CBaseGameApplication *__hidden this);
  void (*sub_40)(RED4ext::CBaseGameApplication *__hidden this);
  void (*sub_48)(RED4ext::CBaseGameApplication *__hidden this);
  void (*sub_50)(RED4ext::CBaseGameApplication *__hidden this);
  void (*sub_58)(RED4ext::CBaseGameApplication *__hidden this);
  void (*sub_60)(RED4ext::CBaseGameApplication *__hidden this);
  void (*sub_68)(RED4ext::CBaseGameApplication *__hidden this);
  void (*sub_70)(RED4ext::CBaseGameApplication *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::Object : RED4ext::ent::GameEntity, RED4ext::game::PSInterface {
  RED4ext::LocalizationString displayName;
  RED4ext::LocalizationString displayDescription;
  RED4ext::CName audioResourceName;
  RED4ext::game::PlayerSocket playerSocket;
  float visibilityCheckDistance;
  RED4ext::game::Object::Flags flags;
  uint8_t unk1FD[3];
  RED4ext::Handle<RED4ext::ISerializable> owner;
  uint64_t unk210;
  RED4ext::Handle<RED4ext::ent::SlotComponent> uiSlotComponent;
  RED4ext::IGameInstance* gameInstance2;
  RED4ext::red::TagList gameObjectTags;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::Object_vtbl : RED4ext::ent::GameEntity_vtbl{
  void (*sub_1C8)(RED4ext::game::Object *__hidden this);
  RED4ext::CName* (*GetAudioResourceName)(RED4ext::game::Object *__hidden this, RED4ext::CName*);
  bool (*OnControlTaken)(RED4ext::game::Object *__hidden this);
  bool (*OnControlReleased)(RED4ext::game::Object *__hidden this);
  void (*OnTransformUpdated)(RED4ext::game::Object *__hidden this);
  void (*sub_1F0)(RED4ext::game::Object *__hidden this);
  uint64_t (*OnTakeControl)(RED4ext::game::Object *__hidden this, RED4ext::game::ComponentHelper*);
  uint64_t (*OnReleaseControl)(RED4ext::game::Object *__hidden this);
  void (*sub_208)(RED4ext::game::Object *__hidden this);
  void (*sub_210)(RED4ext::game::Object *__hidden this);
  uint64_t (*sub_218)(RED4ext::game::Object *__hidden this, RED4ext::WorldTransform*);
  uint64_t (*sub_220)(RED4ext::game::Object *__hidden this, void*);
  uint64_t (*sub_228)(RED4ext::game::Object *__hidden this);
  void (*sub_230)(RED4ext::game::Object *__hidden this, RED4ext::Handle<RED4ext::IScriptable>*, RED4ext::CName, RED4ext::Handle<RED4ext::IScriptable>);
  void (*sub_238)(RED4ext::game::Object *__hidden this, RED4ext::Handle<RED4ext::IScriptable>*, RED4ext::CName);
  void (*sub_240)(RED4ext::game::Object *__hidden this, RED4ext::Handle<RED4ext::IScriptable>*);
  void (*sub_248)(RED4ext::game::Object *__hidden this, RED4ext::Handle<RED4ext::IScriptable>*, RED4ext::CName, float);
  void (*sub_250)(RED4ext::game::Object *__hidden this, RED4ext::Handle<RED4ext::IScriptable>*, RED4ext::CName, bool);
  void (*sub_258)(RED4ext::game::Object *__hidden this, RED4ext::Handle<RED4ext::IScriptable>*, RED4ext::CName, int32_t);
  void (*sub_260)(RED4ext::game::Object *__hidden this, RED4ext::Handle<RED4ext::IScriptable>*, RED4ext::CName, RED4ext::Vector4);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ent::IComponent>  {
  RED4ext::ent::IComponent* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemPhysics : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[360];
  RED4ext::Handle<RED4ext::physics::GeometryCache> geoCache;
  uint8_t unk1C0[56];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemPhysics_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Vector2  {
  float X;
  float Y;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ent::IComponent>>  {
  RED4ext::Handle<RED4ext::ent::IComponent>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::QueryFilter  {
  uint64_t mask1;
  uint64_t mask2;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RenderingInterface1  {
  RED4ext::world::RenderingInterface1_vtbl *__vftable;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RenderingInterface1_vtbl {
  void (*sub_00)(RED4ext::world::RenderingInterface1 *__hidden this, uint64_t);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::SimulationFilter  {
  uint64_t mask1;
  uint64_t mask2;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemEnvironment : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[456];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemEnvironment_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::ProxyManager::Unk102010  {
  uint8_t unk0;
  uint8_t unk1;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::IRuntimeSystem : RED4ext::IUpdatableSystem {
  RED4ext::world::IRuntimeSystem::Flags flags;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::IRuntimeSystem_vtbl : RED4ext::IUpdatableSystem_vtbl{
  void (*sub_118)(RED4ext::world::IRuntimeSystem *__hidden this, uint64_t, uint64_t*);
  void (*sub_120)(RED4ext::world::IRuntimeSystem *__hidden this);
  uint32_t (*sub_128)(RED4ext::world::IRuntimeSystem *__hidden this);
  void (*sub_130)(RED4ext::world::IRuntimeSystem *__hidden this, RED4ext::world::RuntimeScene*);
  void (*sub_138)(RED4ext::world::IRuntimeSystem *__hidden this);
  void (*sub_140)(RED4ext::world::IRuntimeSystem *__hidden this);
  void (*sub_148)(RED4ext::world::IRuntimeSystem *__hidden this);
  uint64_t (*sub_150)(RED4ext::world::IRuntimeSystem *__hidden this, uint64_t);
  void (*sub_158)(RED4ext::world::IRuntimeSystem *__hidden this);
  void (*sub_160)(RED4ext::world::IRuntimeSystem *__hidden this);
  void (*sub_168)(RED4ext::world::IRuntimeSystem *__hidden this, RED4ext::world::RuntimeScene*, uint64_t, void**);
  uint64_t (*sub_170)(RED4ext::world::IRuntimeSystem *__hidden this, uint64_t, uint8_t*);
  uint64_t (*sub_178)(RED4ext::world::IRuntimeSystem *__hidden this, uint64_t, uint64_t);
  uint64_t (*sub_180)(RED4ext::world::IRuntimeSystem *__hidden this);
  void (*sub_188)(RED4ext::world::IRuntimeSystem *__hidden this, uint64_t);
  uint64_t (*sub_190)(RED4ext::world::IRuntimeSystem *__hidden this, uint64_t);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::CActionsFactory : RED4ext::game::IActionsFactory {
  RED4ext::action::ActionBase* unk48;
  RED4ext::SharedMutex actionIdMUTX;
  RED4ext::action::ActionBase* actionCleanup[70];
  uint64_t unk288;
  uint64_t unk290;
  uint32_t numActionsCleanup;
  uint32_t unk29C;
  int32_t actions;
  uint32_t totalSize;
  uint32_t unk2D4;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::CActionsFactory_vtbl : RED4ext::game::IActionsFactory_vtbl{
  bool (*sub_1A8)(RED4ext::game::CActionsFactory *__hidden this);
  RED4ext::action::ActionBase* (*sub_1B0)(RED4ext::game::CActionsFactory *__hidden this, RED4ext::action::Type);
  RED4ext::action::ActionBase* (*sub_1B8)(RED4ext::game::CActionsFactory *__hidden this, RED4ext::action::ActionBase*);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::vehicle::AutoDataUnkC8  {
  RED4ext::vehicle::AutoDataUnkC8_vtbl *__vftable;
  RED4ext::DynArray<void *> unk08;
  RED4ext::Vector4* unk18;
  void* unk20;
  uint8_t unk28;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::AutoDataUnkC8_vtbl {
  void (*sub_00)(RED4ext::vehicle::AutoDataUnkC8 *__hidden this);
  void (*sub_08)(RED4ext::vehicle::AutoDataUnkC8 *__hidden this);
  void (*sub_10)(RED4ext::vehicle::AutoDataUnkC8 *__hidden this, float**);
  void (*sub_18)(RED4ext::vehicle::AutoDataUnkC8 *__hidden this);
  void (*sub_20)(RED4ext::vehicle::AutoDataUnkC8 *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CClass::Flags  {
  uint32_t isAbstract: 1;
  uint32_t isNative: 1;
  uint32_t isScriptedClass: 1;
  uint32_t isScriptedStruct: 1;
  uint32_t hasNoDefaultObjectSerialization: 1;
  uint32_t isAlwaysTransient: 1;
  uint32_t isImportOnly: 1;
  uint32_t isPrivate: 1;
  uint32_t isProtected: 1;
  uint32_t isTestOnly: 1;
  uint32_t isSavable: 1;
  uint32_t b800: 1;
  uint32_t b1000: 1;
  uint32_t b2000: 1;
  uint32_t b4000: 1;
  uint32_t b8000: 1;
  uint32_t b10000: 1;
  uint32_t b20000: 1;
  uint32_t b40000: 1;
  uint32_t b80000: 1;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::UnkC8  {
  uint32_t unk00;
  RED4ext::Vector3 unk04;
  RED4ext::Vector4 linearVelocity;
  RED4ext::Vector4 angularVelocity;
  float unk30;
  float unk34;
  float unk38;
  float unk3C;
  RED4ext::WorldTransform unk40;
  float unk60;
  float unk64;
  float unk68;
  float unk6C;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::WidgetLogicController>>  {
  RED4ext::Handle<RED4ext::ink::WidgetLogicController>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::ui::RuntimeSystemUI : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[536];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::ui::RuntimeSystemUI_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::FixedPoint  {
  int32_t Bits;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::EntityID  {
  uint64_t hash;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemEffects : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[104];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemEffects_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::SlotComponent : RED4ext::ent::IPlacedComponent {
  RED4ext::DynArray<RED4ext::ent::Slot> slots;
  RED4ext::DynArray<RED4ext::ent::FallbackSlot> fallbackSlots;
  RED4ext::DynArray<unsigned long long> unk140;
  int32_t slotIndexLookup;
  uint64_t animatedComponent;
  uint64_t unk188;
  uint64_t unk190;
  uint8_t unk198;
  uint8_t unk199[7];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::SlotComponent_vtbl : RED4ext::ent::IPlacedComponent_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::CClassStaticFunction *>  {
  RED4ext::CClassStaticFunction** entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::game::interactions::IShapeDefinition>>  {
  RED4ext::Handle<RED4ext::game::interactions::IShapeDefinition>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CProperty::Flags  {
  uint64_t isEditable: 1;
  uint64_t isNotSerializable: 1;
  uint64_t isInline: 1;
  uint64_t b3: 1;
  uint64_t b4: 1;
  uint64_t isScripted: 1;
  uint64_t isReturn: 1;
  uint64_t b7: 1;
  uint64_t isLocalVar: 1;
  uint64_t isOut: 1;
  uint64_t isOptional: 1;
  uint64_t b11: 1;
  uint64_t b12: 1;
  uint64_t b13: 1;
  uint64_t isOverriding: 1;
  uint64_t b15: 1;
  uint64_t isPrivate: 1;
  uint64_t isProtected: 1;
  uint64_t isPublic: 1;
  uint64_t b19: 2;
  uint64_t inValueHolder: 1;
  uint64_t arrayRelated: 5;
  uint64_t isHandle: 1;
  uint64_t isPersistent: 1;
  uint64_t b29: 1;
  uint64_t hasHint: 1;
  uint64_t hasInnerType: 1;
  uint64_t isNotPersistent: 1;
  uint64_t isSavable: 1;
  uint64_t b34: 1;
  uint64_t arrayRelated2: 1;
  uint64_t b36: 1;
  uint64_t isNotSavable: 1;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemWorldStreaming>  {
  RED4ext::world::RuntimeSystemWorldStreaming* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ink::IWidgetController>  {
  RED4ext::ink::IWidgetController* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::vehicle::BikeBaseObject : RED4ext::vehicle::WheeledBaseObject {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::BikeBaseObject_vtbl : RED4ext::vehicle::WheeledBaseObject_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::CProperty *>  {
  RED4ext::CProperty** entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemDebugRendering : RED4ext::world::IRuntimeSystem {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemDebugRendering_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::work::WorkspotSystem>  {
  RED4ext::work::WorkspotSystem* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemScenes : RED4ext::world::IRuntimeSystem {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemScenes_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::IGameAudioSystem : RED4ext::game::IGameSystem {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::IGameAudioSystem_vtbl : RED4ext::game::IGameSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::vehicle::Controller>  {
  RED4ext::vehicle::Controller* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::geometry::RuntimeSystemGeomDescription : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[8];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::geometry::RuntimeSystemGeomDescription_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::game::HitRepresentationOverride>  {
  RED4ext::game::HitRepresentationOverride* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::INodeInstanceRegistry : RED4ext::world::IRuntimeSystem {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::INodeInstanceRegistry_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::Factory : RED4ext::ISerializable {
  uint8_t unk30[8];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::Factory_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Update  {
  RED4ext::IUpdatableSystem* system;
  uint64_t unk08;
  uint64_t unk10;
  uint64_t unk18;
  RED4ext::CallbackHandler<void (*)(RED4ext::Update *, RED4ext::Unk2, void *, void *)>* callbackStruct;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::CorpseSystem>  {
  RED4ext::world::CorpseSystem* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::interactions::IShapeDefinition : RED4ext::ISerializable {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::interactions::IShapeDefinition_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::VehicleSystem::HandleStorage  {
  uint32_t unk00;
  uint32_t unk04;
  RED4ext::Handle<RED4ext::vehicle::BaseObject> handle;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::WheeledBaseObject::Unk980  {
  RED4ext::vehicle::WheeledBaseObject* vehicle;
  float unk08;
  float timer;
  bool unk10;
  uint8_t unk11[233];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<void>  {
  void* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::WeakPtrWithAccess<T> : RED4ext::SharedPtrBase<T> {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::Thing::__anonymous9  {
  RED4ext::audio::Thing* audioThing;
  uint64_t unk08;
  uint64_t unk10;
  void* callback;
  void* unk20;
  uint32_t flags;
  uint64_t unk30;
  uint64_t unk38;
  uint64_t unk40;
  RED4ext::audio::BankManager* bankManager;
  uint64_t* unk50;
  RED4ext::audio::Metadata* audioMetadataManager;
  uint64_t* unk60;
  RED4ext::audio::Emitters* emitters;
  RED4ext::audio::EmitterPositions* emitterPositions;
  uint64_t* unk78;
  uint64_t* unk80;
  uint64_t unk88;
  RED4ext::Quaternion unk90;
  RED4ext::Quaternion unkA0;
  RED4ext::Vector4 unkB0;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::Margin  {
  float left;
  float top;
  float right;
  float bottom;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::audio::GameParameter>  {
  RED4ext::audio::GameParameter* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemEntityVisualController>  {
  RED4ext::world::RuntimeSystemEntityVisualController* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::ent::FallbackSlot>  {
  RED4ext::ent::FallbackSlot* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::vehicle::PortalsList : RED4ext::IScriptable {
  RED4ext::DynArray<RED4ext::NodeRef> listPoints;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::PortalsList_vtbl : RED4ext::IScriptable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemEnvironment>  {
  RED4ext::world::RuntimeSystemEnvironment* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::FunctionalTestsRuntimeSystem>  {
  RED4ext::FunctionalTestsRuntimeSystem* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::v0::PluginInfo  {
  RED4ext::v0::SemVer sdk;
  const wchar_t* name;
  const wchar_t* author;
  RED4ext::v0::SemVer version;
  RED4ext::v0::FileVer runtime;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemRepellerComponents : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[368];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemRepellerComponents_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::EulerAngles  {
  float Roll;
  float Pitch;
  float Yaw;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::red::TagList  {
  RED4ext::DynArray<RED4ext::CName> tags;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::mesh::LocalMaterialHeader>  {
  RED4ext::mesh::LocalMaterialHeader* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::anim::SequenceTargetInfo : RED4ext::ISerializable {
  RED4ext::DynArray<unsigned int> path;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::anim::SequenceTargetInfo_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::mesh::MeshParameter>  {
  RED4ext::mesh::MeshParameter* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::game::IBlackboard>  {
  RED4ext::game::IBlackboard* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::EntityReference  {
  RED4ext::NodeRef reference;
  RED4ext::DynArray<RED4ext::CName> names;
  RED4ext::CName dynamicEntityUniqueName;
  RED4ext::CName slotName;
  RED4ext::CName sceneActorContextName;
  RED4ext::game::EntityReferenceType type;
  uint8_t unk31[7];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::GameParameter  {
  RED4ext::CName parameterName;
  float value;
  uint32_t counter;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemNavigation>  {
  RED4ext::world::RuntimeSystemNavigation* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::IEffect>>  {
  RED4ext::Handle<RED4ext::ink::IEffect>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::ActionReplicatedState  {
  uint8_t unk00[8];
  uint32_t replicationId;
  uint16_t type;
  uint8_t unk0E[2];
  RED4ext::net::Time startTimeStamp;
  RED4ext::net::Time stopTimeStamp;
  uint8_t updateBucket;
  uint8_t unk21[7];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::WheelRuntimePSData  {
  RED4ext::CName previousTouchedMaterial;
  float previousVisualDisplacement;
  float previousLogicalSpringCompression;
  float previousSwaybarDisplacement;
  float previousDampedSpringForce;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::GameParameterStorage  {
  RED4ext::DynArray<RED4ext::audio::GameParameter> gameParameters;
  RED4ext::DynArray<RED4ext::CName> switchGroups;
  RED4ext::SharedMutex gameParameterMutex;
  uint8_t unk[7];
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::ITransformBinding : RED4ext::ent::ISourceBinding {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::ITransformBinding_vtbl : RED4ext::ent::ISourceBinding_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::CBaseRTTIType  {
  RED4ext::CBaseRTTIType_vtbl *__vftable;
  int64_t unk8;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CBaseRTTIType_vtbl {
  void (*__CBaseRTTIType)(RED4ext::CBaseRTTIType *__hidden this);
  RED4ext::CName (*GetName)(RED4ext::CBaseRTTIType *__hidden this);
  uint32_t (*GetSize)(RED4ext::CBaseRTTIType *__hidden this);
  uint32_t (*GetAlignment)(RED4ext::CBaseRTTIType *__hidden this);
  RED4ext::ERTTIType (*GetType)(RED4ext::CBaseRTTIType *__hidden this);
  RED4ext::CString (*GetTypeName)(RED4ext::CBaseRTTIType *__hidden this);
  RED4ext::CName (*GetComputedName)(RED4ext::CBaseRTTIType *__hidden this);
  void (*Construct)(RED4ext::CBaseRTTIType *__hidden this, void*);
  void (*Destruct)(RED4ext::CBaseRTTIType *__hidden this, void*);
  const bool (*IsEqual)(RED4ext::CBaseRTTIType *__hidden this, const const void*, const const void*, uint32_t);
  void (*Assign)(RED4ext::CBaseRTTIType *__hidden this, void*, const const void*);
  void (*Move)(RED4ext::CBaseRTTIType *__hidden this, void*, void*);
  bool (*Unserialize)(RED4ext::CBaseRTTIType *__hidden this, RED4ext::BaseStream*, void*, int64_t);
  bool (*ToString)(RED4ext::CBaseRTTIType *__hidden this, const const void*, RED4ext::CString&);
  bool (*FromString)(RED4ext::CBaseRTTIType *__hidden this, void*, const RED4ext::CString&);
  bool (*sub_78)(RED4ext::CBaseRTTIType *__hidden this);
  bool (*sub_80)(RED4ext::CBaseRTTIType *__hidden this, int64_t, void*);
  bool (*sub_88)(RED4ext::CBaseRTTIType *__hidden this, int64_t, void*);
  bool (*sub_90)(RED4ext::CBaseRTTIType *__hidden this, int64_t, void*, RED4ext::CString&, int64_t);
  bool (*sub_98)(RED4ext::CBaseRTTIType *__hidden this, int64_t, void*, RED4ext::CString&, int64_t, bool);
  bool (*sub_A0)(RED4ext::CBaseRTTIType *__hidden this, int64_t, RED4ext::CString&, bool);
  bool (*sub_A8)(RED4ext::CBaseRTTIType *__hidden this);
  void (*sub_B0)(RED4ext::CBaseRTTIType *__hidden this, int64_t, int64_t);
  RED4ext::Memory::IAllocator* (*GetAllocator)(RED4ext::CBaseRTTIType *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CallbackInstance : RED4ext::CallbackDefinition {
  RED4ext::CallbackInstance::Type type;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::GameOptionManager::Unk00  {
  RED4ext::Map<RED4ext::CName, RED4ext::GameOptionManager::Unk00::Entry> unk00;
  uint8_t unk28;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ink::anim::Event>  {
  RED4ext::ink::anim::Event* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::VehicleTemperatureSettings  {
  float rpmThreshold;
  float timeToActivateTemperature;
  float cooldownTime;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemSmartObjects : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[688];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemSmartObjects_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::IGameState  {
  RED4ext::IGameState_vtbl *__vftable;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::IGameState_vtbl {
  void (*__IGameState)(RED4ext::IGameState *__hidden this);
  const int8_t* (*GetName)(RED4ext::IGameState *__hidden this);
  RED4ext::EGameStateType (*GetType)(RED4ext::IGameState *__hidden this);
  bool (*OnEnter)(RED4ext::IGameState *__hidden this, RED4ext::CGameApplication*);
  bool (*OnUpdate)(RED4ext::IGameState *__hidden this, RED4ext::CGameApplication*);
  bool (*OnExit)(RED4ext::IGameState *__hidden this, RED4ext::CGameApplication*);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::CMesh : RED4ext::res::StreamedResource {
  RED4ext::CMesh_vtbl *__vftable;
  RED4ext::Box boundingBox;
  RED4ext::Vector3 surfaceAreaPerAxis;
  bool constrainAutoHideDistanceToTerrainHeightMap;
  bool forceLoadAllAppearances;
  bool castGlobalShadowsCachedInCook;
  bool castLocalShadowsCachedInCook;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::mesh::MeshParameter>> parameters;
  RED4ext::DynArray<RED4ext::CName> boneNames;
  RED4ext::DynArray<RED4ext::Matrix> boneRigMatrices;
  RED4ext::DynArray<float> boneVertexEpsilons;
  RED4ext::DynArray<unsigned char> lodBoneMask;
  RED4ext::DynArray<RED4ext::CName> floatTrackNames;
  RED4ext::DynArray<float> lodLevelInfo;
  RED4ext::DynArray<RED4ext::CMeshMaterialEntry> materialEntries;
  int32_t externalMaterials;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::CMaterialInstance>> localMaterialInstances;
  RED4ext::mesh::MeshMaterialBuffer localMaterialBuffer;
  int32_t preloadExternalMaterials;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::IMaterial>> preloadLocalMaterialInstances;
  int32_t inplaceResources;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::mesh::MeshAppearance>> appearances;
  uint8_t unk1F0[8];
  RED4ext::Handle<RED4ext::IRenderResourceBlob> renderResourceBlob;
  uint8_t unk208[9];
  RED4ext::ERenderObjectType objectType;
  uint8_t unk212[30];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CMesh_vtbl : RED4ext::res::StreamedResource_vtbl{
  uint64_t (*sub_138)(RED4ext::CMesh *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Map<RED4ext::CName, RED4ext::GameOptionManager::Unk00::Entry>  {
  RED4ext::DynArray<T> keys;
  RED4ext::DynArray<T> values;
  int32_t flags;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::vehicle::ChassisComponent : RED4ext::ent::IPlacedComponent, RED4ext::ent::ITransformAttachable {
  int32_t collisionResource;
  int32_t optionalPlayerOnlyCollisionResource;
  uint64_t unk158;
  RED4ext::physics::ProxyID proxyID;
  RED4ext::physics::ProxyID proxyID_PlayerOnly;
  RED4ext::physics::ProxyCacheID proxyCacheID;
  RED4ext::SharedMutex sharedMutex;
  uint32_t unk170;
  uint32_t chassisBottomMask;
  uint64_t unk178;
  int32_t* initialStates;
  RED4ext::game::VehicleSystem* vehicleSystem;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::ChassisComponent_vtbl : RED4ext::ent::IPlacedComponent_vtbl{
  void (*sub_1E8)(RED4ext::vehicle::ChassisComponent *__hidden this, bool);
  void (*ITransformAttachable_08)(RED4ext::vehicle::ChassisComponent *__hidden this, RED4ext::WorldTransform*, bool);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::OccupantSlotData  {
  RED4ext::CName slotName;
  RED4ext::CName syncAnimationTag;
  int32_t workSpotResource;
  uint8_t unk28[8];
  RED4ext::Vector4 exitOffsetFromSlot;
  RED4ext::game::MountingSlotRole role;
  uint8_t unk44[12];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemEntity>  {
  RED4ext::world::RuntimeSystemEntity* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::CName>  {
  RED4ext::CName* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::Object::Flags  {
  uint8_t IsAttached: 1;
  uint8_t Unk2: 1;
  uint8_t IsPlayerController: 1;
  uint8_t EnabledTransformUpdates: 1;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CString::__unnamed::__anonymous1  {
  int8_t* ptr;
  int8_t unk[8];
  int32_t capacity;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Matrix  {
  RED4ext::Vector4 X;
  RED4ext::Vector4 Y;
  RED4ext::Vector4 Z;
  RED4ext::Vector4 W;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::IFunction  {
  RED4ext::IFunction_vtbl *__vftable;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::IFunction_vtbl {
  RED4ext::Memory::IAllocator* (*GetAllocator)(RED4ext::IFunction *__hidden this);
  void (*__IFunction)(RED4ext::IFunction *__hidden this);
  RED4ext::CClass* (*GetParent)(RED4ext::IFunction *__hidden this);
  uint32_t (*GetRegIndex)(RED4ext::IFunction *__hidden this);
  RED4ext::IFunction::Invokable* (*GetInvokable)(RED4ext::IFunction *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::IComponent : RED4ext::IScriptable {
  RED4ext::CName name;
  RED4ext::CName appearanceName;
  RED4ext::ent::Entity* entity;
  uint64_t unk58;
  RED4ext::CRUID id;
  RED4ext::ResourcePath appearancePath;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::ent::IAttachment>> attachments;
  uint16_t transform_offset;
  uint16_t unk82;
  uint32_t unk84;
  uint8_t unk88;
  uint8_t unk89;
  RED4ext::SharedMutex unk8A;
  bool isEnabled;
  bool isReplicable;
  uint8_t unk8D[3];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::IComponent_vtbl : RED4ext::IScriptable_vtbl{
  void (*sub_110)(RED4ext::ent::IComponent *__hidden this);
  bool (*sub_118)(RED4ext::ent::IComponent *__hidden this, RED4ext::CName, void*);
  bool (*sub_120)(RED4ext::ent::IComponent *__hidden this, RED4ext::CName, void*);
  void (*sub_128)(RED4ext::ent::IComponent *__hidden this);
  bool (*sub_130)(RED4ext::ent::IComponent *__hidden this);
  bool (*sub_138)(RED4ext::ent::IComponent *__hidden this);
  void (*sub_140)(RED4ext::ent::IComponent *__hidden this);
  void (*sub_148)(RED4ext::ent::IComponent *__hidden this);
  void (*sub_150)(RED4ext::ent::IComponent *__hidden this, void*);
  RED4ext::Handle<RED4ext::game::PersistentState>* (*sub_158)(RED4ext::ent::IComponent *__hidden this, RED4ext::Handle<RED4ext::game::PersistentState>*);
  bool (*sub_160)(RED4ext::ent::IComponent *__hidden this);
  bool (*sub_168)(RED4ext::ent::IComponent *__hidden this);
  void (*sub_170)(RED4ext::ent::IComponent *__hidden this);
  uint64_t (*sub_178)(RED4ext::ent::IComponent *__hidden this, void*);
  void (*sub_180)(RED4ext::ent::IComponent *__hidden this, RED4ext::ScriptGameInstance*);
  void (*sub_188)(RED4ext::ent::IComponent *__hidden this, void*);
  void (*sub_190)(RED4ext::ent::IComponent *__hidden this);
  bool (*sub_198)(RED4ext::ent::IComponent *__hidden this, void*);
  void (*sub_1A0)(RED4ext::ent::IComponent *__hidden this, void*);
  void (*sub_1A8)(RED4ext::ent::IComponent *__hidden this);
  void (*sub_1B0)(RED4ext::ent::IComponent *__hidden this);
  bool (*sub_1B8)(RED4ext::ent::IComponent *__hidden this);
  void (*sub_1C0)(RED4ext::ent::IComponent *__hidden this);
  void (*sub_1C8)(RED4ext::ent::IComponent *__hidden this);
  void (*sub_1D0)(RED4ext::ent::IComponent *__hidden this);
  void (*sub_1D8)(RED4ext::ent::IComponent *__hidden this);
  bool (*sub_1E0)(RED4ext::ent::IComponent *__hidden this);
  void (*sub_1E8)(RED4ext::ent::IComponent *__hidden this, bool);
  uint64_t (*sub_1F0)(RED4ext::ent::IComponent *__hidden this, RED4ext::Handle<RED4ext::CallbackManager>*);
  void (*sub_1F8)(RED4ext::ent::IComponent *__hidden this);
  uint64_t (*sub_200)(RED4ext::ent::IComponent *__hidden this, uint64_t);
  void (*sub_208)(RED4ext::ent::IComponent *__hidden this);
  void (*Initialize)(RED4ext::ent::IComponent *__hidden this, void*);
  void (*sub_218)(RED4ext::ent::IComponent *__hidden this, void*);
  void (*sub_220)(RED4ext::ent::IComponent *__hidden this, void*);
  const int8_t* (*sub_228)(RED4ext::ent::IComponent *__hidden this);
  RED4ext::CClass* (*sub_230)(RED4ext::ent::IComponent *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::Widget : RED4ext::IScriptable {
  RED4ext::Handle<RED4ext::ink::PropertyManager> propertyManager;
  uint8_t unk50[56];
  RED4ext::ink::WidgetLayout layout;
  RED4ext::ink::UITransform renderTransform;
  uint8_t unkE8[16];
  RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::UserData>> userData;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::WidgetLogicController>> secondaryControllers;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::IEffect>> effects;
  RED4ext::Handle<RED4ext::ink::WidgetLogicController> logicController;
  RED4ext::Handle<RED4ext::ink::StyleResourceWrapper> style;
  RED4ext::Handle<RED4ext::ink::LayerProxy> layerProxy;
  uint8_t unk158[16];
  RED4ext::WeakHandle<RED4ext::ink::Widget> parentWidget;
  uint8_t unk178[16];
  RED4ext::CName name;
  RED4ext::CName state;
  RED4ext::Vector2 size;
  RED4ext::Vector2 desiredSize;
  RED4ext::Vector2 renderTransformPivot;
  uint8_t unk1B0[48];
  RED4ext::HDRColor tintColor;
  float opacity;
  uint8_t unk1F4[4];
  bool visible;
  bool canSupportFocus;
  bool fitToContent;
  bool isInteractive;
  bool affectsLayoutWhenHidden;
  uint8_t flags;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::Widget_vtbl : RED4ext::IScriptable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::IWidgetController : RED4ext::IScriptable {
  uint8_t unk40[48];
  RED4ext::CName audioMetadataName;
  uint8_t unk78[48];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::IWidgetController_vtbl : RED4ext::IScriptable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::mesh::LocalMaterialHeader  {
  uint32_t offset;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::Unk588  {
  RED4ext::vehicle::BaseObject* vehicle;
  uint8_t affectsTPPAudio;
  uint32_t unk0C;
  uint32_t unk10;
  uint32_t unk14;
  RED4ext::Handle<void *> unk18;
  uint64_t unk28;
  void* unk30;
  void* unk38;
  RED4ext::vehicle::Unk588::Unk40* unk40;
  uint32_t unk48;
  uint32_t unk4C;
  uint64_t unk50;
  float unk58;
  float unk5C;
  float unk60;
  float unk64;
  uint8_t unk68;
  uint8_t unk69;
  uint8_t unk6A;
  uint8_t unk6B;
  uint8_t unk6C;
  uint8_t unk6D;
  uint8_t unk6E;
  uint8_t unk6F;
  uint8_t unk70;
  uint8_t unk71;
  uint8_t unk72;
  uint8_t unk73;
  uint8_t unk74;
  uint8_t unk75;
  uint8_t unk76;
  uint8_t unk77;
  uint64_t unk78;
  RED4ext::Matrix unk80;
  float unkC0;
  float unkC4;
  float unkC8;
  float unkCC;
  uint64_t unkD0[8];
  float unk110;
  float unk114;
  uint64_t uk118[7];
  uint32_t unk150;
  uint32_t unk154;
  float unk158;
  uint32_t unk15C;
  void* unk160;
  float unk168;
  float unk16C;
  float unk170;
  float unk174;
  uint64_t unk178;
  float unk180;
  float unk184;
  float unk188;
  float unk18C;
  float unk190;
  float unk194;
  uint32_t unk198;
  float unk19C;
  uint64_t unk1A0;
  uint64_t unk1A8[5];
  RED4ext::Vector4 unk1D0;
  RED4ext::Vector4 unk1E0;
  RED4ext::Transform unk1F0;
  uint32_t unk210;
  uint32_t unk214;
  RED4ext::Transform unk218;
  uint64_t unk238;
  uint64_t unk240;
  uint64_t unk248[5];
  RED4ext::Transform unk270;
  uint64_t unk290;
  uint64_t unk298;
  uint64_t unk2A0;
  uint64_t unk2A8;
  float unk2B0;
  uint32_t unk2B4;
  uint8_t unk2B8;
  uint8_t unk2B9;
  uint8_t unk2BA;
  uint8_t unk2BB;
  uint8_t unk2BC;
  uint8_t unk2BD;
  uint8_t unk2BE;
  uint8_t unk2BF;
  uint16_t unk2C0;
  uint8_t unk2C2;
  uint8_t tweak2C3[3];
  uint8_t tweak2C6[3];
  uint8_t tweak2C9[3];
  uint8_t tweak2CC[3];
  uint8_t tweak2CF[3];
  float unk2D4;
  float unk2D8;
  uint8_t unk2DC;
  uint8_t unk2DD;
  uint8_t unk2DE;
  uint8_t unk2DF;
  uint64_t unk2E0[2];
  RED4ext::Transform unk2F0;
  uint64_t unk310[9];
  void* unk358;
  void* unk360;
  void* companionRelated;
  void* unk370;
  uint32_t unk378;
  uint32_t unk37C;
  RED4ext::SharedMutex unk380;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::data::TweakDBRecord : RED4ext::IScriptable {
  uint8_t unk40[8];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::data::TweakDBRecord_vtbl : RED4ext::IScriptable_vtbl{
  void (*sub_110)(RED4ext::game::data::TweakDBRecord *__hidden this);
  void (*GetTypeHash)(RED4ext::game::data::TweakDBRecord *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Color  {
  uint8_t Red;
  uint8_t Green;
  uint8_t Blue;
  uint8_t Alpha;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::OccupantSlotComponent : RED4ext::ent::SlotComponent {
  RED4ext::DynArray<RED4ext::game::OccupantSlotData> slotData;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::OccupantSlotComponent_vtbl : RED4ext::ent::SlotComponent_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::SystemBodyParams  {
  RED4ext::physics::SimulationType simulationType;
  uint8_t unk01[7];
  float mass;
  RED4ext::Vector3 inertia;
  uint64_t allocator;
  RED4ext::Transform comOffset;
  float linearDamping;
  float angularDamping;
  uint32_t solverIterationsCountPosition;
  uint32_t solverIterationsCountVelocity;
  float maxDepenetrationVelocity;
  float maxAngularVelocity;
  float maxContactImpulse;
  uint8_t unk5C[4];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CStackFrame  {
  int8_t* code;
  RED4ext::CBaseFunction* func;
  int64_t unk10;
  int64_t unk18;
  int64_t unk20;
  int64_t unk28;
  void* data;
  RED4ext::CBaseRTTIType* dataType;
  RED4ext::IScriptable* context;
  RED4ext::CStackFrame* parent;
  int16_t unk50;
  int64_t unk58;
  uint16_t paramFlags;
  uint8_t currentParam;
  bool useDirectData;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemNodeStreaming : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[827920];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemNodeStreaming_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::work::WorkspotSystem : RED4ext::world::IWorkspotSystem {
  uint8_t unk48[2696];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::work::WorkspotSystem_vtbl : RED4ext::world::IWorkspotSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::VehicleInterface2  {
  RED4ext::game::VehicleInterface2_vtbl *__vftable;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::VehicleInterface2_vtbl {
  void (*__VehicleInterface2)(RED4ext::game::VehicleInterface2 *__hidden this);
  void (*sub_08)(RED4ext::game::VehicleInterface2 *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::data::Vehicle_Record : RED4ext::game::data::SpawnableObject_Record {
  uint8_t traffic_audio_resource[3];
  uint8_t player_audio_resource[3];
  uint8_t vehPassL_ProceduralFPPCameraParams[3];
  uint8_t driving[3];
  uint8_t type[3];
  uint8_t drivingParamsGeneric[3];
  uint8_t tppCameraParams[3];
  uint8_t vehDriver_ProceduralFPPCameraParams[3];
  uint8_t fxCollision[3];
  uint8_t vehDriveModelDataAI[3];
  uint8_t vehAirControlAI[3];
  uint8_t vehPassR_ProceduralFPPCameraParams[3];
  uint8_t vehPassCombatR_FPPCameraParams[3];
  uint8_t vehDriver_FPPCameraParams[3];
  uint8_t vehPassCombatL_FPPCameraParams[3];
  uint8_t manufacturer[3];
  uint8_t destruction[3];
  uint8_t vehEngineData[3];
  uint8_t vehDataPackage[3];
  uint8_t vehDriverCombat_ProceduralFPPCameraParams[3];
  uint8_t vehDefaultState[3];
  uint8_t drivingParamsPanic[3];
  uint8_t fxWheelsParticles[3];
  uint8_t vehPassR_FPPCameraParams[3];
  uint8_t vehAirControl[3];
  uint8_t crowdMemberSettings[3];
  uint8_t vehDriverCombat_FPPCameraParams[3];
  uint8_t vehPassCombatL_ProceduralFPPCameraParams[3];
  uint8_t vehBehaviorData[3];
  uint8_t vehWheelDimensionsSetup[3];
  uint8_t fxWheelsDecalsFrontOverride[3];
  uint8_t fxWheelsDecals[3];
  uint8_t affiliation[3];
  uint8_t vehDriveModelData[3];
  uint8_t vehPassL_FPPCameraParams[3];
  uint8_t icon[3];
  uint8_t cameraManagerParams[3];
  uint8_t vehPassCombatR_ProceduralFPPCameraParams[3];
  uint8_t model[3];
  uint8_t visualDestruction[3];
  uint8_t drivingParamsRace[3];
  uint8_t vehicleUIData[3];
  uint8_t vehImpactTraffic[3];
  uint8_t trafficSuspension[3];
  uint8_t leftBlinkerlightColor[3];
  uint8_t preventionPassengers[3];
  uint8_t headlightColor[3];
  uint8_t reverselightColor[3];
  uint8_t rightBLinkerlightColor[3];
  uint8_t interiorColor[3];
  uint8_t attachmentSlots[3];
  uint8_t brakelightColor[3];
  uint8_t tppCameraPresets[3];
  uint8_t utilityLightColor[3];
  uint8_t weapons[3];
  uint8_t randomPassengers[3];
  uint8_t interiorDamageColor[3];
  uint8_t queryOnlyExceptions[3];
  uint8_t displayName[3];
  uint8_t widgetStyleSheetPath[3];
  uint8_t archetypeName[3];
  uint8_t audioResourceName[3];
  uint8_t destroyedAppearance[3];
  uint8_t curvesPath[3];
  uint8_t unmountOffsetPosition[3];
  uint8_t rightFrontCamberOffset[3];
  uint8_t leftFrontCamberOffset[3];
  uint8_t rightBackCamberOffset[3];
  uint8_t leftBackCamberOffset[3];
  uint8_t rightFrontCamber[3];
  uint8_t leftFrontCamber[3];
  uint8_t rightBackCamber[3];
  uint8_t leftBackCamber[3];
  uint8_t enableDestruction[3];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::data::Vehicle_Record_vtbl : RED4ext::game::data::SpawnableObject_Record_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::game::interactions::InteractionDefinitionOverrider>  {
  RED4ext::game::interactions::InteractionDefinitionOverrider* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::WidgetHudComponentInterface::Widget  {
  RED4ext::CName name;
  uint64_t unk00[28];
  RED4ext::ink::Widget* inkWidget;
  uint64_t unkF0;
  uint64_t gameController;
  uint64_t unk100;
  uint64_t unk108;
  uint64_t unk110;
  uint64_t unk118;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::WorldPositionInterface  {
  RED4ext::game::WorldPositionInterface_vtbl *__vftable;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::WorldPositionInterface_vtbl {
  void (*sub_00)(RED4ext::game::WorldPositionInterface *__hidden this);
  void (*sub_08)(RED4ext::game::WorldPositionInterface *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::PhysicalMeshComponent : RED4ext::ent::MeshComponent, RED4ext::ent::ITransformAttachable {
  uint64_t unk1E8;
  RED4ext::Transform bodyTransform;
  RED4ext::Handle<RED4ext::physics::FilterData> filterData;
  int32_t* initialStats;
  RED4ext::CName visibilityAnimationParam;
  RED4ext::physics::ProxyID proxyID;
  RED4ext::physics::ProxyCacheID proxyCacheID;
  RED4ext::physics::FilterDataSource filterDataSource;
  RED4ext::physics::SimulationType simulationType;
  bool startInactive;
  bool useResourceSimulationType;
  uint8_t unk23C[4];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::PhysicalMeshComponent_vtbl : RED4ext::ent::MeshComponent_vtbl{
  void (*sub_148)(RED4ext::ent::PhysicalMeshComponent *__hidden this);
  bool (*sub_178)(RED4ext::ent::PhysicalMeshComponent *__hidden this);
  void (*sub_180)(RED4ext::ent::PhysicalMeshComponent *__hidden this);
  void (*sub_188)(RED4ext::ent::PhysicalMeshComponent *__hidden this, void*);
  bool (*sub_198)(RED4ext::ent::PhysicalMeshComponent *__hidden this, void*);
  void (*sub_220)(RED4ext::ent::PhysicalMeshComponent *__hidden this, void*);
  bool (*sub_278)(RED4ext::ent::PhysicalMeshComponent *__hidden this, bool, bool);
  bool (*sub_2A0)(RED4ext::ent::PhysicalMeshComponent *__hidden this);
  bool (*sub_2A8)(RED4ext::ent::PhysicalMeshComponent *__hidden this);
  bool (*sub_2B0)(RED4ext::ent::PhysicalMeshComponent *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::red::ResourceReferenceScriptToken  {
  int32_t resource;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Vector3>  {
  RED4ext::Vector3* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RenderingInterface2  {
  RED4ext::world::RenderingInterface2_vtbl *__vftable;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RenderingInterface2_vtbl {
  void (*__RenderingInterface2)(RED4ext::world::RenderingInterface2 *__hidden this);
  void (*sub_08)(RED4ext::world::RenderingInterface2 *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::HitRepresentationOverride : RED4ext::ISerializable {
  RED4ext::game::HitShapeContainer represenationOverride;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::HitRepresentationOverride_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CResource : RED4ext::SelfHandle<RED4ext::CResource>, RED4ext::ISerializable {
  RED4ext::ResourcePath path;
  RED4ext::ECookingPlatform cookingPlatform;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::GeometryKey  {
  int32_t ta;
  uint8_t pe;
  uint8_t unk0D[3];
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::IUpdatableSystem : RED4ext::IScriptable {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::IUpdatableSystem_vtbl : RED4ext::IScriptable_vtbl{
  void (*RegisterUpdates)(RED4ext::IUpdatableSystem *__hidden this, RED4ext::UpdateManagerHolder*);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::HashMap<unsigned long long, unsigned long long>  {
  uint32_t* indexTable;
  uint32_t size;
  uint32_t capacity;
  RED4ext::HashMap::NodeList nodeList;
  uint64_t allocator;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::BaseCameraComponent : RED4ext::ent::IPlacedComponent, RED4ext::ent::TargetedCameraInterface {
  RED4ext::WorldTransform placeholderTransform;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::BaseCameraComponent_vtbl : RED4ext::ent::IPlacedComponent_vtbl{
  void (*sub_258)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*sub_260)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*sub_268)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*GetZoom)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*sub_278)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*GetNearPlaneOverride)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*GetFarPlaneOverride)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*GetMotionBlurScale)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*GetUnk170)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*GetWeaponPlane)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*GetUnk190)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*sub_2B0)(RED4ext::ent::BaseCameraComponent *__hidden this, RED4ext::Transform*, RED4ext::Transform*);
  void (*SetFov)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*CameraCopyIsh)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*SetZoom)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*SetZoomWeaponValue)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*SetNearPlaneOverride)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*SetFarPlaneOverride)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*SetMotionBlurScale)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*SetUnk170)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*SetWeaponPlane)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*SetUnk190)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*sub_308)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*sub_310)(RED4ext::ent::BaseCameraComponent *__hidden this);
  void (*sub_318)(RED4ext::ent::BaseCameraComponent *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ent::Entity>  {
  RED4ext::ent::Entity* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::SharedMutex  {
  int8_t state;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::IBinding : RED4ext::ISerializable {
  bool enabled;
  uint8_t unk31[7];
  RED4ext::ent::TagMask enableMask;
  RED4ext::CName bindName;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::IBinding_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::VisualControllerComponent : RED4ext::ent::IComponent {
  int32_t meshProxy;
  RED4ext::DynArray<RED4ext::ent::VisualControllerDependency> appearanceDependency;
  int32_t cookedAppearanceData;
  uint8_t unkC0[8];
  RED4ext::DynArray<RED4ext::ResourcePath> resourcePaths;
  RED4ext::Handle<void> unkD8;
  uint64_t unkE8;
  RED4ext::ent::ForcedLodDistance forcedLodDistance;
  uint8_t unkF1[3];
  uint8_t unkF4;
  uint8_t unkF5;
  uint8_t unkF6[50];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::VisualControllerComponent_vtbl : RED4ext::ent::IComponent_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemEntityVisualController : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[296];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemEntityVisualController_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::WidgetLayout  {
  RED4ext::ink::Margin padding;
  RED4ext::ink::Margin margin;
  RED4ext::Vector2 anchorPoint;
  float sizeCoefficient;
  RED4ext::ink::EHorizontalAlign HAlign;
  RED4ext::ink::EVerticalAlign VAlign;
  RED4ext::ink::EAnchor anchor;
  RED4ext::ink::ESizeRule sizeRule;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::anim::Definition : RED4ext::IScriptable {
  RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::anim::Interpolator>> interpolators;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::anim::Event>> events;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::anim::Definition_vtbl : RED4ext::IScriptable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::CameraComponent : RED4ext::ent::BaseCameraComponent, RED4ext::game::WorldPositionInterface {
  RED4ext::CName animParamFovOverrideWeight;
  RED4ext::CName animParamFovOverrideValue;
  RED4ext::CName animParamZoomOverrideWeight;
  RED4ext::CName animParamZoomOverrideValue;
  RED4ext::CName animParamZoomWeaponOverrideWeight;
  RED4ext::CName animParamZoomWeaponOverrideValue;
  RED4ext::CName animParamdofIntensity;
  RED4ext::CName animParamdofNearBlur;
  RED4ext::CName animParamdofNearFocus;
  RED4ext::CName animParamdofFarBlur;
  RED4ext::CName animParamdofFarFocus;
  RED4ext::CName animParamWeaponNearPlaneCM;
  RED4ext::CName animParamWeaponFarPlaneCM;
  RED4ext::CName animParamWeaponEdgesSharpness;
  RED4ext::CName animParamWeaponVignetteIntensity;
  RED4ext::CName animParamWeaponVignetteRadius;
  RED4ext::CName animParamWeaponVignetteCircular;
  RED4ext::CName animParamWeaponBlurIntensity;
  float fovOverrideWeight;
  float fovOverrideValue;
  float zoomOverrideWeight;
  float zoomOverrideValue;
  float zoomWeaponOverrideWeight;
  float zoomWeaponOverrideValue;
  uint8_t unk280[32];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::CameraComponent_vtbl : RED4ext::ent::BaseCameraComponent_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::LocalizationString  {
  int64_t unk00;
  RED4ext::CString unk08;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::Thing  {
  RED4ext::Transform one;
  RED4ext::Quaternion two;
  RED4ext::Transform three;
  RED4ext::Quaternion four;
  RED4ext::Quaternion five;
  RED4ext::audio::Thing::__anonymous5* unk70;
  uint8_t unk78[8];
  RED4ext::world::RuntimeSystemEffects* worldRuntimeSystemEffects;
  uint64_t unk88;
  uint64_t unk90;
  uint64_t* callbackID;
  uint64_t unkA0;
  uint64_t unkA8;
  RED4ext::audio::Thing::__anonymous6* unkB0[2];
  RED4ext::audio::Thing::__anonymous7* audioSystemUnk;
  uint64_t unkC8[13];
  uint64_t unk130;
  uint64_t unk138[5];
  RED4ext::audio::GameParameterStorage* globalParameters;
  uint64_t* unk168[8];
  uint64_t unk169[12];
  RED4ext::SharedMutex unk208;
  uint64_t unk210[2];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CName  {
  uint64_t hash;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::nav::RuntimeSystemPathfinding : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[144];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::nav::RuntimeSystemPathfinding_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::game::interactions::IShapeDefinition>  {
  RED4ext::game::interactions::IShapeDefinition* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::TPPCameraSmoothQuaternion  {
  RED4ext::Quaternion currentValue;
  RED4ext::Quaternion targetValue;
  float timeToChange;
  float unk[3];
  RED4ext::Quaternion deltaValue;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::appearance::PartComponentOverrides  {
  RED4ext::CName componentName;
  RED4ext::CName meshAppearance;
  RED4ext::Transform initialTransform;
  RED4ext::Vector3 visualScale;
  bool useCustomTransform;
  bool acceptDismemberment;
  uint8_t unk3E[2];
  uint64_t chunkMask;
  uint8_t unk48[8];
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::CGameApplication : RED4ext::CBaseGameApplication {
  RED4ext::CGameOptions options;
  RED4ext::DynArray<RED4ext::EGameStateType> stateTypes;
  RED4ext::DynArray<RED4ext::IGameState *> states;
  int64_t unk208;
  RED4ext::IGameState* currState;
  RED4ext::IGameState* nextState;
  RED4ext::EGameStateStatus status;
  const int8_t* name;
  int8_t unk230;
  int32_t result;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CGameApplication_vtbl : RED4ext::CBaseGameApplication_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::anim::Event : RED4ext::IScriptable {
  float startTime;
  uint8_t unk44[4];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::anim::Event_vtbl : RED4ext::IScriptable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::ink::WidgetLibraryItem>  {
  RED4ext::ink::WidgetLibraryItem* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::PuppetBase : RED4ext::game::TimeDilatable {
  uint8_t unk260[8];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::PuppetBase_vtbl : RED4ext::game::TimeDilatable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::PropertyManager : RED4ext::ISerializable {
  RED4ext::DynArray<RED4ext::ink::PropertyBinding> bindings;
  uint8_t unk40[40];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::PropertyManager_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::interactions::Component : RED4ext::ent::IPlacedComponent {
  uint8_t unk120[40];
  int32_t definitionResource;
  uint8_t unk160[64];
  RED4ext::Vector3 interactionRootOffset;
  uint8_t unk1AC[4];
  RED4ext::DynArray<RED4ext::game::interactions::InteractionDefinitionOverrider> layerOverrides;
  RED4ext::DynArray<RED4ext::game::interactions::InteractionDefinitionOverrider> layerOverridesTemp;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::interactions::Component_vtbl : RED4ext::ent::IPlacedComponent_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemCamera : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[24];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemCamera_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::GameOptionManager::Unk28  {
  RED4ext::HashMap<unsigned long long, unsigned long long> unk00;
  uint64_t unk30;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<void *>  {
  void** instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Unk530  {
  int64_t unk0;
  int64_t unk8;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::IMaterial : RED4ext::CResource {
  uint8_t unk40[8];
  int32_t baseMaterial;
  uint8_t unk60[24];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemFoliage>  {
  RED4ext::world::RuntimeSystemFoliage* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::CMeshMaterialEntry>  {
  RED4ext::CMeshMaterialEntry* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemSmartObjects>  {
  RED4ext::world::RuntimeSystemSmartObjects* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::audio::CustomEmitterMetadata : RED4ext::audio::AudioMetadata {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::CustomEmitterMetadata_vtbl : RED4ext::audio::AudioMetadata_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Vector4  {
  float X;
  float Y;
  float Z;
  float W;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::game::RuntimeSystemLights>  {
  RED4ext::game::RuntimeSystemLights* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::WidgetHudComponentInterface : RED4ext::WidgetBaseComponent {
  int32_t externalMaterial;
  RED4ext::Handle<RED4ext::world::ui::MeshTargetBinding> meshTargetBinding;
  RED4ext::DynArray<RED4ext::WidgetHudComponentInterface::Widget> widgets;
  int32_t hudEntriesResource;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::WidgetHudComponentInterface_vtbl : RED4ext::WidgetBaseComponent_vtbl{
  void (*__WidgetHudComponentInterface)(RED4ext::WidgetHudComponentInterface *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemBinkUpdate : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[40];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemBinkUpdate_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<unsigned long long>  {
  uint64_t* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::mesh::MeshParameter : RED4ext::ISerializable {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::mesh::MeshParameter_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<T>  {
  RED4ext::CName* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::WorldPosition  {
  RED4ext::FixedPoint x;
  RED4ext::FixedPoint y;
  RED4ext::FixedPoint z;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::Children : RED4ext::ISerializable {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::Children_vtbl : RED4ext::ISerializable_vtbl{
  uint32_t (*GetNumChildren)(RED4ext::ink::Children *__hidden this);
  RED4ext::ink::Widget* (*GetChildPtrByIndex)(RED4ext::ink::Children *__hidden this, uint32_t);
  RED4ext::ink::Widget* (*GetChildPtrByName)(RED4ext::ink::Children *__hidden this, RED4ext::CName);
  RED4ext::Handle<RED4ext::ink::Widget>& (*GetChildByIndex)(RED4ext::ink::Children *__hidden this, uint32_t);
  void (*AddChild)(RED4ext::ink::Children *__hidden this, const RED4ext::Handle<RED4ext::ink::Widget>&);
  void (*InsertChild)(RED4ext::ink::Children *__hidden this, const RED4ext::Handle<RED4ext::ink::Widget>&, uint32_t);
  bool (*RemoveChild)(RED4ext::ink::Children *__hidden this, const RED4ext::Handle<RED4ext::ink::Widget>&);
  bool (*RemoveChildByIndex)(RED4ext::ink::Children *__hidden this, uint32_t);
  void (*RemoveAllChildren)(RED4ext::ink::Children *__hidden this);
  void (*ReorderChild)(RED4ext::ink::Children *__hidden this, const RED4ext::Handle<RED4ext::ink::Widget>&, uint32_t);
  void (*sub_128)(RED4ext::ink::Children *__hidden this, uint32_t, uint32_t);
  void (*sub_130)(RED4ext::ink::Children *__hidden this, void*);
  uint32_t (*GetChildIndex)(RED4ext::ink::Children *__hidden this, const RED4ext::Handle<RED4ext::ink::Widget>&);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::ProxyCache  {
  uint64_t unk00[8];
  uint32_t unk40;
  uint32_t unk44;
  uint64_t unk48[7];
  uint32_t unk80;
  uint32_t unk84;
  RED4ext::StaticArray<RED4ext::physics::ProxyCacheEntry, 65535> unk88;
  uint32_t _unk30005C;
  uint8_t dataCache[1048575];
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemStreamingQuery : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[152];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemStreamingQuery_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Variant  {
  const RED4ext::CBaseRTTIType* type;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemTraffic>  {
  RED4ext::world::RuntimeSystemTraffic* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::HashMap::Node  {
  uint32_t next;
  uint32_t hashedKey;
  uint64_t key;
  void* value;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ink::LayerProxy>  {
  RED4ext::ink::LayerProxy* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::anim::Sequence : RED4ext::IScriptable {
  RED4ext::CName name;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::anim::Definition>> definitions;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::anim::SequenceTargetInfo>> targets;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::anim::Sequence_vtbl : RED4ext::IScriptable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::TPPCameraSmoothFloat  {
  float currentValue;
  float targetValue;
  float timeToChange;
  float deltaValue;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemSnapSovler : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[80];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemSnapSovler_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::EffectBlackboard>  {
  RED4ext::world::EffectBlackboard* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemWorldStreaming : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[888];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemWorldStreaming_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::UserData>>  {
  RED4ext::Handle<RED4ext::ink::UserData>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::DynArray<RED4ext::CName>>  {
  RED4ext::DynArray<RED4ext::CName>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::physics::ISystemObject : RED4ext::ISerializable {
  RED4ext::CName name;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::ISystemObject_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::physics::SystemResource>  {
  RED4ext::physics::SystemResource* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::MaterialResource  {
  RED4ext::red::ResourceReferenceScriptToken skidMarks;
  RED4ext::red::ResourceReferenceScriptToken tireTracks;
  bool loaded;
  uint8_t extra_byte_for_fun;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::WidgetLibraryResource : RED4ext::CResource {
  RED4ext::ink::ETextureResolution rootResolution;
  uint8_t unk41[3];
  uint32_t rootDefinitionIndex;
  RED4ext::DynArray<RED4ext::ink::WidgetLibraryItem> libraryItems;
  int32_t externalLibraries;
  int32_t animationLibraryResRef;
  uint8_t unk70[16];
  RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::anim::Sequence>> sequences;
  int32_t externalDependenciesForInternalItems;
  RED4ext::ink::WidgetResourceVersion version;
  uint8_t unkA1[7];
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::IRenderResourceBlob : RED4ext::ISerializable {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::IRenderResourceBlob_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::IActionsFactory : RED4ext::game::IGameSystem {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::IActionsFactory_vtbl : RED4ext::game::IGameSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::physics::GeometryKey>  {
  RED4ext::physics::GeometryKey* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemRemoteViews>  {
  RED4ext::world::RuntimeSystemRemoteViews* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemCompiledTerrain : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[80];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemCompiledTerrain_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemNavigation : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[1472];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemNavigation_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::vehicle::TPPCameraComponent>  {
  RED4ext::vehicle::TPPCameraComponent* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __unnamed::__unnamed::HINSTANCE__  {
  int32_t unused;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::WeakHandle<RED4ext::ink::LayerProxy> : RED4ext::WeakPtrWithAccess<T> {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::AnimTrackParameter  {
  RED4ext::CName animTrackName;
  RED4ext::CName parameterName;
  float defaultValue;
  uint8_t unk14[28];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::physics::SectorCacheEntry>  {
  RED4ext::physics::SectorCacheEntry* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::vehicle::Physics  {
  RED4ext::vehicle::Physics_vtbl *__vftable;
  uint64_t unk08;
  RED4ext::Vector3 velocity;
  uint32_t unk1C;
  uint8_t unk20;
  uint8_t unk21[7];
  uint64_t unk28;
  RED4ext::WorldTransform worldTransform;
  uint8_t unk50;
  uint8_t unk51[7];
  uint64_t unk58;
  RED4ext::vehicle::BaseObject* parent;
  RED4ext::vehicle::WaterParams* waterParams;
  uint8_t unk70;
  uint8_t unk71[7];
  uint64_t unk78;
  RED4ext::WorldTransform worldTransform2;
  float sleepTimer;
  float unkA4;
  float setTo0point5;
  int32_t unkAC;
  float unkB0;
  bool isMoving;
  uint8_t unkB5;
  bool unkB6;
  uint8_t unkB7;
  bool hasInput;
  bool unkB9;
  uint8_t unkBA;
  uint8_t unkBB;
  uint16_t unkBC;
  uint16_t unkBE;
  float has_been_flipped_over_for_some_time_delay;
  float unkC4;
  RED4ext::vehicle::UnkC8* physicsBaseStruct2;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::Physics_vtbl {
  void (*__Physics)(RED4ext::vehicle::Physics *__hidden this);
  uint64_t (*SetVehicle)(RED4ext::vehicle::Physics *__hidden this, RED4ext::vehicle::BaseObject*);
  uint64_t (*sub_10)(RED4ext::vehicle::Physics *__hidden this);
  uint64_t (*sub_18)(RED4ext::vehicle::Physics *__hidden this);
  uint64_t (*sub_20)(RED4ext::vehicle::Physics *__hidden this);
  uint64_t (*UpdateTransform)(RED4ext::vehicle::Physics *__hidden this);
  void (*sub_30)(RED4ext::vehicle::Physics *__hidden this, uint32_t*, float*);
  void (*sub_38)(RED4ext::vehicle::Physics *__hidden this, float);
  void (*sub_40)(RED4ext::vehicle::Physics *__hidden this, float);
  uint64_t (*FixedUpdate_PreSolve)(RED4ext::vehicle::Physics *__hidden this, uint64_t, float);
  void (*sub_50)(RED4ext::vehicle::Physics *__hidden this, float);
  uint64_t (*sub_58)(RED4ext::vehicle::Physics *__hidden this, float);
  void (*sub_60)(RED4ext::vehicle::Physics *__hidden this);
  uint64_t (*sub_68)(RED4ext::vehicle::Physics *__hidden this, float);
  uint64_t (*sub_70)(RED4ext::vehicle::Physics *__hidden this, int32_t, int8_t);
  uint64_t (*UpdatePhysicsWT2)(RED4ext::vehicle::Physics *__hidden this);
  void (*sub_80)(RED4ext::vehicle::Physics *__hidden this);
  void (*sub_88)(RED4ext::vehicle::Physics *__hidden this);
  void (*SetUnk70To1)(RED4ext::vehicle::Physics *__hidden this);
  void (*sub_98)(RED4ext::vehicle::Physics *__hidden this, bool);
  uint64_t (*sub_A0)(RED4ext::vehicle::Physics *__hidden this, uint64_t);
  uint64_t (*IntializeVectorQuaternion)(RED4ext::vehicle::Physics *__hidden this, uint64_t);
  uint64_t (*sub_B0)(RED4ext::vehicle::Physics *__hidden this, int32_t, float);
  bool (*UpdatePhysicsStuff)(RED4ext::vehicle::Physics *__hidden this);
  bool (*IsInAirFromVehicle)(RED4ext::vehicle::Physics *__hidden this);
  bool (*SomethingOrientationIsInAir)(RED4ext::vehicle::Physics *__hidden this);
  bool (*sub_D0)(RED4ext::vehicle::Physics *__hidden this);
  void (*sub_D8)(RED4ext::vehicle::Physics *__hidden this, int8_t);
  double (*Return1D)(RED4ext::vehicle::Physics *__hidden this);
  float (*Return1F)(RED4ext::vehicle::Physics *__hidden this);
  void (*sub_F0)(RED4ext::vehicle::Physics *__hidden this);
  void (*sub_F8)(RED4ext::vehicle::Physics *__hidden this);
  void (*sub_100)(RED4ext::vehicle::Physics *__hidden this, uint32_t*, float*);
  void (*sub_108)(RED4ext::vehicle::Physics *__hidden this);
  void (*sub_110)(RED4ext::vehicle::Physics *__hidden this);
  void (*sub_118)(RED4ext::vehicle::Physics *__hidden this, void*, RED4ext::Transform*);
  uint64_t (*UpdateWheelAnimations)(RED4ext::vehicle::Physics *__hidden this);
  uint64_t (*UpdateBlackboard)(RED4ext::vehicle::Physics *__hidden this);
  void (*sub_130)(RED4ext::vehicle::Physics *__hidden this);
  uint64_t (*sub_138)(RED4ext::vehicle::Physics *__hidden this);
  void (*LoadSomeVehiclePhysicsStuff)(RED4ext::vehicle::Physics *__hidden this, RED4ext::Handle<RED4ext::game::data::VehicleDriveModelData_Record>*);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Vector4>  {
  RED4ext::Vector4* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::net::EntitySystem>  {
  RED4ext::net::EntitySystem* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::VehicleGeneralData  {
  RED4ext::CName revSoundbankName;
  RED4ext::CName revElectricSoundbankName;
  RED4ext::CName reverbSoundbankName;
  RED4ext::CName enterVehicleEvent;
  RED4ext::CName exitVehicleEvent;
  RED4ext::CName ignitionStartEvent;
  RED4ext::CName ignitionEndEvent;
  RED4ext::CName hornOnEvent;
  RED4ext::CName hornOffEvent;
  RED4ext::CName policeHornOnEvent;
  RED4ext::CName policeHornOffEvent;
  RED4ext::CName trafficPanicHornOnEvent;
  RED4ext::CName trafficPanicHornOffEvent;
  RED4ext::CName sirenOnEvent;
  RED4ext::CName sirenOffEvent;
  RED4ext::CName rainStartEvent;
  RED4ext::CName rainStopEvent;
  RED4ext::CName waterStartEvent;
  RED4ext::CName waterStopEvent;
  RED4ext::CName tyreBurstEvent;
  RED4ext::CName collisionSoundEvent;
  RED4ext::CName interiorReverbBus;
  RED4ext::CName skid;
  RED4ext::CName inclination;
  RED4ext::CName impactVelocity;
  RED4ext::CName dopplerShift;
  RED4ext::CName acoustingIsolationFactor;
  RED4ext::CName impactGridCellRawChange;
  RED4ext::audio::VehicleDoorsSettingsMetadata vehicleDoorsSettings;
  RED4ext::audio::VehicleInteriorParameterData vehicleInteriorParameterData;
  RED4ext::audio::VehicleTemperatureSettings vehicleTemperatureSettings;
  uint8_t unk134[4];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::PhysicsJointAngularLimitPair : RED4ext::physics::PhysicsJointLimitBase {
  float lower;
  float upper;
  RED4ext::physics::PhysicsJointMotion twist;
  uint8_t unk29[7];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::mesh::MeshAppearance>  {
  RED4ext::mesh::MeshAppearance* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::StaticArray<RED4ext::ent::ITransformAttachable, 65535>  {
  RED4ext::ent::ITransformAttachable entries[0];
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::geometry::RuntimeSystemGeomDescription>  {
  RED4ext::world::geometry::RuntimeSystemGeomDescription* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ink::anim::SequenceTargetInfo>  {
  RED4ext::ink::anim::SequenceTargetInfo* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::game::GameFeatureManager>  {
  RED4ext::game::GameFeatureManager* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CClass::Listener  {
  RED4ext::Callback<void (*)(RED4ext::IScriptable &, RED4ext::Handle<RED4ext::IScriptable> &), 16> callback;
  RED4ext::CName callbackName;
  int16_t eventTypeId;
  bool isScripted;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::physics::ColliderSphere>  {
  RED4ext::physics::ColliderSphere* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::Unk570::Unk30  {
  RED4ext::Handle<void *> unk00;
  RED4ext::Handle<void *> unk10;
  RED4ext::Handle<void *> unk20;
  RED4ext::Handle<void *> unk30;
  int32_t unk40;
  RED4ext::Handle<RED4ext::world::EffectBlackboard> effectBlackboard;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::GameFeatureManager : RED4ext::IScriptable {
  uint8_t unk40[32];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::GameFeatureManager_vtbl : RED4ext::IScriptable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::ui::MeshTargetBinding : RED4ext::ent::ISourceBinding {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::ui::MeshTargetBinding_vtbl : RED4ext::ent::ISourceBinding_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::ControllerProcessor : RED4ext::ISerializable {
  uint64_t unk30;
  RED4ext::DynArray<void *> unk38;
  uint64_t unk48;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::IWidgetController>> controllers;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::ControllerProcessor_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ISerializable>  {
  RED4ext::ISerializable* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemEntityAppearanceChanger>  {
  RED4ext::world::RuntimeSystemEntityAppearanceChanger* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::IWidgetController>>  {
  RED4ext::Handle<RED4ext::ink::IWidgetController>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::appearance::AppearancePartOverrides>  {
  RED4ext::appearance::AppearancePartOverrides* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::GameOptionManager::Unk00::Entry  {
  RED4ext::CString unk00;
  RED4ext::Map<RED4ext::CString, RED4ext::CString> unk20;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::mesh::MeshMaterialBuffer  {
  RED4ext::DataBuffer rawData;
  RED4ext::DynArray<RED4ext::mesh::LocalMaterialHeader> rawDataHeaders;
  uint8_t unk38[104];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::IScriptable>  {
  RED4ext::IScriptable* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ResourcePath  {
  uint64_t hash;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ent::Entity>>  {
  RED4ext::Handle<RED4ext::ent::Entity>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::Component : RED4ext::ent::IComponent, RED4ext::game::PSInterface {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::Component_vtbl : RED4ext::ent::IComponent_vtbl{
  void (*sub_238)(RED4ext::game::Component *__hidden this, RED4ext::Handle<RED4ext::game::PersistentState>*);
  bool (*sub_240)(RED4ext::game::Component *__hidden this);
  void (*sub_248)(RED4ext::game::Component *__hidden this, RED4ext::GameInstance*);
  void (*sub_250)(RED4ext::game::Component *__hidden this);
  void (*sub_258)(RED4ext::game::Component *__hidden this);
  void (*sub_260)(RED4ext::game::Component *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::RawBuffer  {
  void* data;
  uint32_t size;
  uint32_t alignment;
  RED4ext::Unk530 unk10;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::FPPCameraComponent : RED4ext::game::CameraComponent {
  float unk2A0;
  float unk2A4;
  float unk2A8;
  float unk2AC;
  void* unk2B0;
  void* unk2B8;
  void* unk2C0;
  void* unk2C8;
  void* unk2D0;
  void* unk2D8;
  RED4ext::Handle<RED4ext::anim::AnimFeature_FPPCamera> animFeature;
  RED4ext::Handle<void> animationController;
  RED4ext::Handle<void> animatedComponent;
  RED4ext::DynArray<void *> unk310;
  RED4ext::DynArray<void *> paramsSetList;
  RED4ext::Quaternion entityOrientation;
  RED4ext::CName currentCameraParams;
  float pitchMinRounded;
  float pitchMaxRounded;
  float yawMaxLeftRounded;
  float yawMaxRightRounded;
  float yawMaxLeft;
  float yawMaxRight;
  float pitchMin;
  float pitchMax;
  float yawMaxLeft2;
  float yawMaxRight2;
  bool headingLocked;
  uint8_t unk371[3];
  float cameraNeedsResetTimer;
  float headingResetTimeout;
  uint8_t headingResetOnlyWhileMoving;
  uint8_t unk37D;
  uint8_t unk37E;
  uint8_t unk37F;
  float unk380;
  uint8_t maintainWorldSpacingHeading;
  uint8_t paramsLoaded;
  uint8_t normalizeYaw;
  uint8_t unk387;
  float unk388;
  float fov4;
  float fovFromSettings;
  uint8_t overrideFovSetting;
  uint8_t unk395;
  uint8_t unk396;
  uint8_t unk397;
  float fov3;
  float fovSmoothingDuration;
  float interesting;
  float unk3A4;
  float unk3A8;
  float unk3AC;
  float unk3B0;
  float unk3B4;
  float unk3B8;
  float yawRubberBandLimit;
  float yawRubberBandInputDamping;
  float yawRubberOnStretchSlowdown;
  float yawRubberReturnMultiplier;
  float pitchRubberBandLimit;
  float pitchRubberBandInputDamping;
  float pitchRubberOnStretchSlowdown;
  float pitchRubberReturnMultiplier;
  uint8_t unk3DC;
  uint8_t unk3DD;
  uint8_t unk3DE;
  uint8_t unk3DF;
  float unk3E0;
  float unk3E4;
  float fov1;
  float fov2;
  float unk3F0;
  float unk3F4;
  float unk3F8;
  float unk3FC;
  float unk400;
  float unk404;
  float unk408;
  RED4ext::Handle<void> tpp;
  float unk41C[2];
  RED4ext::Handle<void> unk428;
  float unk438;
  float unk43C;
  float yawInputHolder;
  float unk444;
  float unk448;
  float unk44C;
  float unk450;
  float unk454;
  float unk458;
  float unk45C;
  float unk460;
  float sensitivityMultX;
  float sensitivityMultY;
  uint8_t unk46C[12];
  RED4ext::CName timeDilationCurveName;
  float cameraInputDisableTimer;
  float unk484;
  uint8_t unk488;
  uint8_t unk489;
  uint8_t unk48A;
  uint8_t unk48B;
  float yawOffset;
  float pitchOffset;
  float unk494[3];
  uint8_t updated;
  uint8_t unk4A1[7];
  float unk4A8;
  float yawInput;
  float pitchInput;
  float unk4B4;
  uint64_t unk4B8Setting;
  uint64_t unk4C0Setting;
  uint8_t unk4C8;
  uint8_t unk4C9;
  uint8_t unk4CA;
  uint8_t unk4CB;
  uint32_t unk4CC;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::FPPCameraComponent_vtbl : RED4ext::game::CameraComponent_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::v0::Sdk  {
  RED4ext::v0::SemVer* runtime;
  RED4ext::v0::Logger* logger;
  RED4ext::v0::Hooking* hooking;
  RED4ext::v0::GameStates* gameStates;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemEffects>  {
  RED4ext::world::RuntimeSystemEffects* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::IRenderResourceBlob>  {
  RED4ext::IRenderResourceBlob* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ink::Widget>>  {
  RED4ext::Handle<RED4ext::ink::Widget>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::EntityParametersBuffer  {
  RED4ext::DynArray<RED4ext::DeferredDataBuffer> parameterBuffers;
  uint8_t unk10[24];
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::data::VehicleDriveModelData_Record : RED4ext::game::data::TweakDBRecord {
  uint8_t waterParams[3];
  uint8_t wheelSetup[3];
  uint8_t burnOut[3];
  uint8_t wheelsFrictionMap[3];
  uint8_t driveHelpers[3];
  uint8_t tankSpringsLocalPositions[3];
  uint8_t biltTiltPID[3];
  uint8_t bikeCurvesPath[3];
  uint8_t center_of_mass_offset[3];
  uint8_t momentOfInertiaScale[3];
  uint8_t momentOfInertia[3];
  uint8_t smoothWheelContactDecreaseTime[3];
  uint8_t slopeTractionReductionBegin[3];
  uint8_t sideWeightTransferFactor[3];
  uint8_t turningRollFacorWeakContactThresholdMax[3];
  uint8_t brakingEstimationMagicFactor[3];
  uint8_t turningRollFactor[3];
  uint8_t turnUpdateInputFastChangeSpeed[3];
  uint8_t lowVelStoppingDeceleration[3];
  uint8_t slipRatioMinSpeedThreshold[3];
  uint8_t brakingFrictionFactor[3];
  uint8_t turnUpdateInputSlowChangeSpeed[3];
  uint8_t turningRollFactorWeakContactThresholdMin[3];
  uint8_t handbrakeBrakingTorque[3];
  uint8_t turnUpdateInputDiffProgressionPow[3];
  uint8_t maxWheelTurnDeg[3];
  uint8_t bodyFriction[3];
  uint8_t slipAngleMinSpeedThreshold[3];
  uint8_t bankBodyLRTanMultiplier[3];
  uint8_t slipAngleCurveScale[3];
  uint8_t tankAcceleration[3];
  uint8_t turnUpdateInputDiffForSlowChange[3];
  uint8_t perfectSteeringFactor[3];
  uint8_t turnUpdateMaxSpeedTurnMul[3];
  uint8_t bikeTiltReturnSpeed[3];
  uint8_t wheelTurnMaxAddPerSecond[3];
  uint8_t bikeTiltSpeed[3];
  uint8_t turnUpdateBaseSpeedThreshold[3];
  uint8_t turnUpdateMaxSpeedTurnChangeMul[3];
  uint8_t antiSwaybarDampingScalor[3];
  uint8_t total_mass[3];
  uint8_t turnUpdateMaxSpeedThreshold[3];
  uint8_t bankBodyFBTanMultiplier[3];
  uint8_t slopeTractionReductionFactor[3];
  uint8_t wheelTurnMaxSubPerSecond[3];
  uint8_t bikeTiltCustomSpeed[3];
  uint8_t tankSpringVerticalOffset[3];
  uint8_t turningRollFactorWeakContactMul[3];
  uint8_t slipRatioCurveScale[3];
  uint8_t turnUpdateInputDiffForFastChange[3];
  uint8_t tankSpringRadius[3];
  uint8_t airResistanceFactor[3];
  uint8_t burnOutRotationModifier[3];
  uint8_t slopeTractionReductionMax[3];
  uint8_t tankSpringDamping[3];
  uint8_t differentialOvershootFactor[3];
  uint8_t forwardWeightTransferFactor[3];
  uint8_t tankSpringDistance[3];
  uint8_t chassis_mass[3];
  uint8_t tankSpringStiffness[3];
  uint8_t smoothWheelContactIncreseTime[3];
  uint8_t bikeMaxTilt[3];
  uint8_t tankDeceleration[3];
  uint8_t tankTurningSpeed[3];
  uint8_t tankMaxSpeed[3];
  uint8_t tankGravityMul[3];
  uint8_t tankCTOP[3];
  uint8_t tankCTOI[3];
  uint8_t tankCTOD[3];
  uint8_t useAlternaiveTurnUpdate[3];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::data::VehicleDriveModelData_Record_vtbl : RED4ext::game::data::TweakDBRecord_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ResourceAsyncReference<>  {
  RED4ext::ResourcePath path;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::vehicle::Weapon>  {
  RED4ext::vehicle::Weapon* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemDestruction>  {
  RED4ext::world::RuntimeSystemDestruction* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::UnkD10::Wheel  {
  RED4ext::Transform unk00;
  RED4ext::Vector3 unk20;
  float unk2C[21];
  RED4ext::Vector3 unk80;
  RED4ext::Vector3 unk8C;
  RED4ext::CName physMaterial;
  RED4ext::Transform unkA0;
  uint32_t unkC0[2];
  int32_t unkC8;
  uint32_t unkCC[2];
  float unkD4;
  uint32_t unkD8;
  uint32_t unkDC;
  RED4ext::vehicle::UnkD10::Wheel::UnkE0 unkE0[2];
  uint8_t unk1A0[2880];
  uint32_t numE0;
  uint8_t unkCE4[12];
  bool unkCF0;
  bool unkCF1;
  uint8_t unkCF2;
  uint8_t unkCF3;
  float unkCF4;
  float unkCF8;
  float relatedToAir;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemEntityTransactor>  {
  RED4ext::world::RuntimeSystemEntityTransactor* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CBaseFunction::Flags  {
  uint32_t isNative: 1;
  uint32_t isStatic: 1;
  uint32_t isFinal: 1;
  uint32_t isEvent: 1;
  uint32_t isExec: 1;
  uint32_t hasUndefinedBody: 1;
  uint32_t isTimer: 1;
  uint32_t isPrivate: 1;
  uint32_t isProtected: 1;
  uint32_t isPublic: 1;
  uint32_t b10: 1;
  uint32_t b11: 1;
  uint32_t b12: 1;
  uint32_t isConst: 1;
  uint32_t isQuest: 1;
  uint32_t isThreadsafe: 1;
  uint32_t b16: 1;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemVisibility : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[184];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemVisibility_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::HitShapeUserData : RED4ext::IScriptable {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::HitShapeUserData_vtbl : RED4ext::IScriptable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::game::OccupantSlotComponent>  {
  RED4ext::game::OccupantSlotComponent* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::v0::FileVer  {
  uint16_t major;
  uint16_t minor;
  uint16_t build;
  uint16_t revision;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeDescription  {
  RED4ext::CName unk00;
  RED4ext::ResourcePath streamingWorld;
  RED4ext::CString str;
  RED4ext::ResourceAsyncReference<> resource;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::GameInstance : RED4ext::IGameInstance {
  int32_t systemInstances;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::IScriptable>> gameSystems;
  int32_t interfaceMapping;
  RED4ext::world::RuntimeScene* runtimeScene;
  RED4ext::world::RuntimeInfo runtimeInfo;
  int64_t unk100;
  RED4ext::IGameInstance* self;
  RED4ext::UpdatableSystems* updatableSystems;
  RED4ext::Handle<RED4ext::game::GameFeatureManager> gameFeatureManager;
  bool gameIsLoading;
  uint8_t isPaused;
  uint8_t unk12A[6];
  int64_t unk130;
  int64_t unk138;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::GameInstance_vtbl : RED4ext::IGameInstance_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::GeometryCache : RED4ext::CResource {
  RED4ext::DynArray<RED4ext::DeferredDataBuffer> bufferTableSectors;
  RED4ext::DynArray<RED4ext::physics::SectorEntry> sectorEntries;
  RED4ext::DynArray<RED4ext::physics::GeometryKey> sectorGeometries;
  RED4ext::DynArray<RED4ext::physics::SectorCacheEntry> sectorCacheEntries;
  RED4ext::DeferredDataBuffer alwaysLoadedSectorDDB;
  uint8_t unkD8[8];
  RED4ext::physics::SectorEntry alwaysLoadedSector;
  int32_t unk120;
  int32_t unk150;
  RED4ext::SharedMutex unk180;
  uint64_t unk188;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::JobGroup  {
  uint64_t unk00;
  uint64_t unk08;
  uint64_t unk10;
  uint64_t unk18;
  uint64_t unk20;
  uint64_t unk28;
  RED4ext::JobParamSet params;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::vehicle::AutonomousData : RED4ext::ISerializable {
  RED4ext::WeakHandle<RED4ext::vehicle::BaseObject> owner;
  bool useKinematic;
  bool needDriver;
  uint8_t unk42[6];
  RED4ext::WeakHandle<RED4ext::game::Object> targetObjToReach;
  RED4ext::WeakHandle<RED4ext::game::Object> targetObjToFollow;
  RED4ext::NodeRef targetRef;
  RED4ext::NodeRef splineRef;
  RED4ext::NodeRef splineRefBackwards;
  RED4ext::game::EntityReference vehicleRef;
  RED4ext::Vector3 targetPosition;
  uint8_t unkC4[4];
  RED4ext::vehicle::AutoDataUnkC8* unkC8;
  uint64_t unkD0;
  RED4ext::TweakDBID drivingID;
  float distanceMin;
  float distanceMax;
  bool wantToStop;
  uint8_t unkE9[1];
  bool stopHasReachedTarget;
  bool driveBackwards;
  bool reverseSpline;
  bool startFromClosest;
  uint8_t unkEE[2];
  float forcedStartSpeed;
  bool stopAtPathEnd;
  bool useTraffic;
  uint8_t unkF6;
  uint8_t unkF7;
  float speedInTraffic;
  bool canClearActions;
  bool forceGreenLights;
  bool keepDistanceParamBool;
  uint8_t unkFF;
  RED4ext::WeakHandle<RED4ext::game::Object> keepDistanceParamCompanion;
  float keepDistanceParamDistance;
  bool rubberBandingBool;
  uint8_t unk115[3];
  RED4ext::WeakHandle<RED4ext::game::Object> rubberBandingTargetRef;
  float rubberBandingMinDistance;
  float rubberBandingMaxDistance;
  bool rubberBandingStopAndWait;
  bool rubberBandingTeleportToCatchUp;
  bool rubberBandingStayInFront;
  uint8_t unk133[1];
  float secureTimeOut;
  RED4ext::Handle<RED4ext::vehicle::PortalsList> portalsList;
  bool trafficTryNeighborsForStart;
  bool trafficTryNeighborsForEnd;
  bool allowStubMovement;
  uint8_t unk14B;
  uint8_t unk14C;
  uint8_t unk14D;
  uint8_t unk14E;
  uint8_t unk14F;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::AutonomousData_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::ProxyCacheManager::Unk948  {
  RED4ext::physics::ProxyCacheID proxyCacheID;
  uint32_t unk04;
  uint64_t unk08[2];
  void* aggregate;
  uint64_t unk20[4];
  uint8_t unk40[6];
  RED4ext::SharedMutex unk46;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::physics::BaseProxy>> systemKeys;
  uint8_t state;
  uint64_t unk60[26];
  uint32_t unk130;
  RED4ext::Vector3 offset;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::TireParameterUpdate  {
  RED4ext::vehicle::Unk580* unk580;
  RED4ext::ent::EntityID entityID;
  RED4ext::vehicle::TireParameterUpdate::Variables* variables;
  float* veh_tire_surface_value;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::Thing::__anonymous6  {
  void* unk00[10];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::NodeRef>  {
  RED4ext::NodeRef* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::appearance::PartComponentOverrides>  {
  RED4ext::appearance::PartComponentOverrides* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::physics::SystemJoint : RED4ext::physics::ISystemObject {
  RED4ext::physics::PhysicsJointLinearLimit linearLimit;
  RED4ext::physics::PhysicsJointAngularLimitPair twistLimit;
  RED4ext::physics::PhysicsJointLimitConePair swingLimit;
  RED4ext::physics::PhysicsJointDrive driveX;
  RED4ext::physics::PhysicsJointDrive driveY;
  RED4ext::physics::PhysicsJointDrive driveZ;
  RED4ext::physics::PhysicsJointDrive driveSwing;
  RED4ext::physics::PhysicsJointDrive driveTwist;
  RED4ext::physics::PhysicsJointDrive driveSLERP;
  RED4ext::physics::PhysicsJointDriveVelocity driveVelocity;
  RED4ext::Matrix drivePosition;
  RED4ext::Handle<RED4ext::physics::PhysicalJointPin> pinA;
  RED4ext::Handle<RED4ext::physics::PhysicalJointPin> pinB;
  RED4ext::Matrix localToWorld;
  float breakingForce;
  float breakingTorque;
  float linearTolerance;
  float angularTolerance;
  bool projectionEnabled;
  bool isBreakable;
  uint8_t unk1F2[14];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::SystemJoint_vtbl : RED4ext::physics::ISystemObject_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::PhysicsJointDrive  {
  float forceLimit;
  float stiffness;
  float damping;
  bool isAcceleration;
  uint8_t unk0D[3];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::SharedPtrWithAccess<T> : RED4ext::SharedPtrBase<T> {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::game::data::Vehicle_Record>  {
  RED4ext::game::data::Vehicle_Record* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ink::VirtualWindow>  {
  RED4ext::ink::VirtualWindow* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::StaticArray<RED4ext::Handle<RED4ext::physics::BaseProxy>, 65535>  {
  RED4ext::Handle<RED4ext::physics::BaseProxy> entries[0];
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemMarkers>  {
  RED4ext::world::RuntimeSystemMarkers* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::vehicle::Unk570::Unk30>  {
  RED4ext::vehicle::Unk570::Unk30* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::EntityEmitters::Emitter  {
  RED4ext::CName*** emitterName1;
  RED4ext::CName*** emitterName2;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::LayerProxy : RED4ext::ISerializable {
  bool isFullscreen;
  RED4ext::WeakHandle<RED4ext::ink::Layer> layer;
  RED4ext::WeakHandle<RED4ext::ISerializable> unk48;
  RED4ext::WeakHandle<RED4ext::ink::WidgetLibraryResource> resource;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::LayerProxy_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::UpdateManager::UpdateStorage  {
  RED4ext::UpdateTickGroup group;
  RED4ext::Unk1 unk01;
  RED4ext::Unk2 unk02;
  uint8_t unk03;
  uint8_t unk04;
  uint8_t unk05;
  uint8_t unk06;
  uint8_t unk07;
  RED4ext::Update update1;
  RED4ext::Update update2;
  RED4ext::CClass* systemCls;
  int8_t* debugName;
  uint32_t thread;
  uint32_t unk6C;
  RED4ext::UpdateEntry* entry;
  uint8_t unk78;
  uint8_t unk79[7];
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::RuntimeSystemRendering : RED4ext::world::IRuntimeSystem, RED4ext::world::RenderingInterface1, RED4ext::world::RenderingInterface2 {
  uint64_t unk48[25];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::RuntimeSystemRendering_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<void *>>  {
  RED4ext::Handle<void *>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CallbackManager  {
  RED4ext::DynArray<RED4ext::Handle<RED4ext::IScriptable>> unk00;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::IScriptable>> unk10;
  RED4ext::DynArray<unsigned int> unk20;
  uint32_t flags;
  RED4ext::DynArray<RED4ext::CallbackInstance> callbackInstances;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::IScriptable>> listeners;
  uint16_t lastUnk1C;
  RED4ext::SharedMutex mutex1;
  RED4ext::SharedMutex mutex2;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::mesh::MeshAppearance>>  {
  RED4ext::Handle<RED4ext::mesh::MeshAppearance>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemRepellerComponents>  {
  RED4ext::world::RuntimeSystemRepellerComponents* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ink::ControllerProcessor>  {
  RED4ext::ink::ControllerProcessor* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::PersistentState : RED4ext::IScriptable {
  uint32_t currentThreadId;
  uint16_t unk44;
  uint8_t someCount;
  RED4ext::SharedMutex unk47;
  RED4ext::game::PersistencySystem* persistencySystem;
  RED4ext::game::PersistentID id;
  uint64_t unk60;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::PersistentState_vtbl : RED4ext::IScriptable_vtbl{
  void (*sub_110)(RED4ext::game::PersistentState *__hidden this);
  void (*sub_118)(RED4ext::game::PersistentState *__hidden this);
  void* (*sub_120)(RED4ext::game::PersistentState *__hidden this, void*);
  void (*sub_128)(RED4ext::game::PersistentState *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::IMaterial>  {
  RED4ext::IMaterial* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::CMesh>  {
  RED4ext::CMesh* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::CClassFunction *>  {
  RED4ext::CClassFunction** entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemDebugRendering>  {
  RED4ext::world::RuntimeSystemDebugRendering* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::physics::BaseProxy>  {
  RED4ext::physics::BaseProxy* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::physics::FilterData>  {
  RED4ext::physics::FilterData* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemRendering>  {
  RED4ext::world::RuntimeSystemRendering* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::ent::AnimTrackParameter>  {
  RED4ext::ent::AnimTrackParameter* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ent::AnimationControlBinding>  {
  RED4ext::ent::AnimationControlBinding* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::VisualControllerDependency  {
  int32_t mesh;
  RED4ext::CName appearanceName;
  RED4ext::CName componentName;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::AnimationSystem : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[731944];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::AnimationSystem_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<unsigned long long[4]>  {
  uint64_t* entries[4];
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::AnimationControlBinding : RED4ext::ent::ISourceBinding {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::AnimationControlBinding_vtbl : RED4ext::ent::ISourceBinding_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemAudio>  {
  RED4ext::world::RuntimeSystemAudio* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::MeshComponent : RED4ext::ent::IVisualComponent {
  RED4ext::Handle<void *> unk140;
  int32_t mesh;
  RED4ext::Handle<RED4ext::CMesh> meshHandle;
  uint64_t unk168;
  uint64_t unk170;
  RED4ext::Vector3 visualScale;
  RED4ext::ERenderingPlane renderingPlane;
  RED4ext::ERenderObjectType objectTypeID;
  uint8_t unk189[7];
  RED4ext::CName meshAppearance;
  uint64_t chunkMask;
  uint32_t numInstances;
  float motionBlurScale;
  RED4ext::ent::MeshComponentLODMode LODMode;
  uint8_t unk1A9[2];
  uint8_t order;
  bool castShadows;
  bool castLocalShadows;
  uint8_t unk1AE[2];
  RED4ext::ent::ForcedLodDistance forcedLodDistance;
  uint8_t unk1B1[32];
  bool overrideMeshNavigationImpact;
  RED4ext::NavGenNavigationSetting navigationImpact;
  uint8_t unk1D4[12];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::MeshComponent_vtbl : RED4ext::ent::IVisualComponent_vtbl{
  bool (*sub_258)(RED4ext::ent::MeshComponent *__hidden this, RED4ext::Handle<void *>);
  uint8_t (*sub_290)(RED4ext::ent::MeshComponent *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::Memory::EngineAllocator : RED4ext::Memory::Allocator<RED4ext::Memory::PoolEngine> {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Memory::EngineAllocator_vtbl : RED4ext::Memory::Allocator<RED4ext::Memory::PoolEngine>_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::ui::MeshTargetBinding>  {
  RED4ext::world::ui::MeshTargetBinding* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::world::EffectBlackboard : RED4ext::IScriptable {
  int32_t unk40;
  RED4ext::SharedMutex unk68;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::EffectBlackboard_vtbl : RED4ext::IScriptable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::EntityDefinition  {
  RED4ext::ResourcePath resource;
  RED4ext::CName appearance;
  uint64_t unk10;
  RED4ext::DynArray<RED4ext::ent::EntityInstanceData> unk18;
  void* unk28;
  uint64_t unk30;
  void* unk38;
  void* unk40;
  uint32_t unk48;
  uint32_t unk4C;
  RED4ext::DynArray<RED4ext::Handle<RED4ext::ent::IComponent>> components;
  RED4ext::DynArray<void *> effects;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CMaterialInstance : RED4ext::IMaterial {
  uint8_t unk78[16];
  bool enableMask;
  uint8_t resourceVersion;
  uint8_t unk8A[6];
  RED4ext::CName audioTag;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::Entity : RED4ext::IScriptable {
  uint32_t unk40;
  uint32_t unk44;
  RED4ext::ent::EntityID entityID;
  RED4ext::CName currentAppearance;
  uint64_t unk58;
  RED4ext::ResourcePath resource;
  uint64_t unk68;
  RED4ext::ent::ComponentsStorage componentsStorage;
  void* placeholder;
  RED4ext::world::RuntimeScene* runtime;
  RED4ext::ScriptGameInstance* scriptGameInstance;
  RED4ext::Handle<void> unkC8;
  RED4ext::CallbackManager callbackManager;
  RED4ext::red::TagList entityTags;
  void* unk148;
  float updatingTransform;
  uint8_t customCameraTarget;
  int8_t controllingPeerID;
  RED4ext::ent::Entity::EntityState entityState;
  uint8_t unk157;
  uint16_t unk158;
  uint8_t unk15A;
  uint8_t renderSceneLayerMask;
  RED4ext::ent::Entity::ComponentFlags componentFlags;
  uint8_t unk15D;
  uint8_t unk15E;
  uint8_t unk15F;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::Entity_vtbl : RED4ext::IScriptable_vtbl{
  void (*sub_110)(RED4ext::ent::Entity *__hidden this);
  float (*sub_118)(RED4ext::ent::Entity *__hidden this);
  RED4ext::Vector2* (*sub_120)(RED4ext::ent::Entity *__hidden this, RED4ext::Vector2*, RED4ext::Vector2*);
  bool (*sub_128)(RED4ext::ent::Entity *__hidden this);
  bool (*sub_130)(RED4ext::ent::Entity *__hidden this);
  void (*sub_138)(RED4ext::ent::Entity *__hidden this);
  void (*sub_140)(RED4ext::ent::Entity *__hidden this, RED4ext::Handle<void>*, int16_t*);
  void (*sub_148)(RED4ext::ent::Entity *__hidden this, uint64_t);
  void (*sub_150)(RED4ext::ent::Entity *__hidden this);
  void (*Attach)(RED4ext::ent::Entity *__hidden this, void*);
  uint64_t (*Detach)(RED4ext::ent::Entity *__hidden this);
  void (*sub_168)(RED4ext::ent::Entity *__hidden this, uint16_t);
  void (*sub_170)(RED4ext::ent::Entity *__hidden this);
  uint64_t (*sub_178)(RED4ext::ent::Entity *__hidden this);
  void (*sub_180)(RED4ext::ent::Entity *__hidden this, RED4ext::Handle<RED4ext::CallbackManager>*);
  void (*OnRequestComponents)(RED4ext::ent::Entity *__hidden this, void*);
  void (*sub_190)(RED4ext::ent::Entity *__hidden this);
  void (*sub_198)(RED4ext::ent::Entity *__hidden this);
  void (*sub_1A0)(RED4ext::ent::Entity *__hidden this);
  uint64_t (*CopyComponentsToStorage)(RED4ext::ent::Entity *__hidden this, RED4ext::ent::EntityDefinition*, void*);
  RED4ext::CClass* (*sub_1B0)(RED4ext::ent::Entity *__hidden this);
  bool (*sub_1B8)(RED4ext::ent::Entity *__hidden this);
  RED4ext::CString* (*sub_1C0)(RED4ext::ent::Entity *__hidden this, RED4ext::CString*);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ent::RuntimeSystemEditorMeshes>  {
  RED4ext::ent::RuntimeSystemEditorMeshes* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::IGameSystem : RED4ext::IUpdatableSystem {
  RED4ext::GameInstance* gameInstance;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::IGameSystem_vtbl : RED4ext::IUpdatableSystem_vtbl{
  bool (*WorldAttached)(RED4ext::game::IGameSystem *__hidden this, RED4ext::world::RuntimeScene*);
  void (*WorldPendingDetach)(RED4ext::game::IGameSystem *__hidden this, RED4ext::world::RuntimeScene*);
  void (*WorldDetached)(RED4ext::game::IGameSystem *__hidden this, RED4ext::world::RuntimeScene*);
  void (*sub_130)(RED4ext::game::IGameSystem *__hidden this);
  uint32_t (*sub_138)(RED4ext::game::IGameSystem *__hidden this, uint64_t, uint64_t);
  void (*sub_140)(RED4ext::game::IGameSystem *__hidden this, uint64_t);
  void (*sub_148)(RED4ext::game::IGameSystem *__hidden this);
  void (*OnGameLoad)(RED4ext::game::IGameSystem *__hidden this, void*, uint64_t, uint64_t);
  bool (*sub_158)(RED4ext::game::IGameSystem *__hidden this);
  void (*OnGamePrepared)(RED4ext::game::IGameSystem *__hidden this);
  void (*sub_168)(RED4ext::game::IGameSystem *__hidden this);
  void (*sub_170)(RED4ext::game::IGameSystem *__hidden this);
  void (*sub_178)(RED4ext::game::IGameSystem *__hidden this, uint64_t, bool);
  void (*OnStreamingWorldLoaded)(RED4ext::game::IGameSystem *__hidden this, uint64_t, bool, uint64_t);
  void (*sub_188)(RED4ext::game::IGameSystem *__hidden this);
  void (*sub_190)(RED4ext::game::IGameSystem *__hidden this, RED4ext::game::IGameSystem::HighLow*);
  void (*Initialize)(RED4ext::game::IGameSystem *__hidden this, void**);
  void (*sub_1A0)(RED4ext::game::IGameSystem *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemBinkUpdate>  {
  RED4ext::world::RuntimeSystemBinkUpdate* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::physics::PhysicalJointPin : RED4ext::ISerializable {
  RED4ext::Handle<RED4ext::physics::ISystemObject> object;
  RED4ext::Vector3 localPosition;
  uint8_t unk4C[4];
  RED4ext::Quaternion localRotation;
  int32_t featureIndex;
  uint8_t unk64[12];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::PhysicalJointPin_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::vehicle::CarPhysics : RED4ext::vehicle::WheeledPhysics {
  RED4ext::vehicle::CarBaseObject* carObject;
  RED4ext::vehicle::PID bankBodyFBPID;
  RED4ext::vehicle::PID bankBodyLRPID;
  float bankBodyFBTanMultiplier;
  float bankBodyLRTanMultiplier;
  float differentialOvershootFactor;
  float perfectSteeringFactor;
  float affectsTurnX;
  float affectsTurnX_asWell;
  float veh_curr_turn_rate;
  float veh_curr_turn_input;
  float veh_bank_body_f_b;
  float veh_bank_body_l_r;
  float latPeriodSquared;
  float latPeriodTimesDampingSquared;
  float unkD98[3];
  float longPeriodSquared;
  float longPeriodTimesDampingSquared;
  float unkDAC[5];
  RED4ext::WorldTransform wt1;
  RED4ext::WorldTransform wt2;
  RED4ext::WorldTransform wt3;
  RED4ext::WorldTransform wt4;
  RED4ext::Quaternion unkE40;
  RED4ext::Quaternion unkE50;
  float unkE60_V568_E8;
  float unkE64;
  float unkE68;
  float unkE6C;
  uint8_t unkE70;
  uint8_t unkE71;
  uint8_t unkE72;
  uint8_t unkE73;
  uint8_t positionNeedsUpdate;
  uint8_t unkE75[3];
  uint64_t unkE78;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::CarPhysics_vtbl : RED4ext::vehicle::WheeledPhysics_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::WeakHandle<RED4ext::ink::Widget> : RED4ext::WeakPtrWithAccess<T> {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::Unk368  {
  uint64_t unk00;
  uint64_t unk08;
  RED4ext::move::Component* moveComponent;
  void* unk18;
  RED4ext::vehicle::BaseObject* vehicle;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::world::RuntimeSystemMoverComponents>  {
  RED4ext::world::RuntimeSystemMoverComponents* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::ent::IAttachment>>  {
  RED4ext::Handle<RED4ext::ent::IAttachment>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::ent::EntityInstanceData>  {
  RED4ext::ent::EntityInstanceData* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::PhysicsJointLinearLimit : RED4ext::physics::PhysicsJointLimitBase {
  float value;
  RED4ext::physics::PhysicsJointMotion x;
  RED4ext::physics::PhysicsJointMotion y;
  RED4ext::physics::PhysicsJointMotion z;
  uint8_t unk27[1];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::ink::WidgetLogicController>  {
  RED4ext::ink::WidgetLogicController* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::v0::GameStates  {
  bool(* Add)(__unnamed::__unnamed::HINSTANCE__*, RED4ext::EGameStateType, RED4ext::v0::GameState*);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Transform  {
  RED4ext::Vector4 position;
  RED4ext::Quaternion orientation;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::weapon::Object : RED4ext::game::ItemObject {
  uint8_t unk2C0[48];
  int32_t effect;
  uint8_t unk308[488];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::weapon::Object_vtbl : RED4ext::game::ItemObject_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::ProxyHelper  {
  RED4ext::physics::ProxyCache* proxyCache;
  RED4ext::physics::ProxyCacheEntry* proxyCacheEntry;
  RED4ext::physics::ProxyID proxyID;
  uint32_t unk14;
  RED4ext::SharedMutex* mutex;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::mesh::MeshParameter>>  {
  RED4ext::Handle<RED4ext::mesh::MeshParameter>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::TargetedCameraInterface  {
  RED4ext::ent::TargetedCameraInterface_vtbl *__vftable;
  float fov;
  RED4ext::WorldTransform someTransform;
  uint8_t unk14C[16];
  float zoom;
  uint8_t unk160[4];
  float nearPlaneOverride;
  float farPlaneOverride;
  float motionBlurScale;
  uint8_t unk170[4];
  RED4ext::SWeaponPlaneParams weaponPlane;
  uint8_t unk190[32];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::TargetedCameraInterface_vtbl {
  void (*sub_00)(RED4ext::ent::TargetedCameraInterface *__hidden this);
  void (*sub_08)(RED4ext::ent::TargetedCameraInterface *__hidden this);
  void (*sub_10)(RED4ext::ent::TargetedCameraInterface *__hidden this);
  void (*sub_18)(RED4ext::ent::TargetedCameraInterface *__hidden this);
  void (*CopyParameters)(RED4ext::ent::TargetedCameraInterface *__hidden this, void*);
  RED4ext::Vector3* (*GetInitialPosition)(RED4ext::ent::TargetedCameraInterface *__hidden this, RED4ext::Vector3*);
  RED4ext::Quaternion* (*GetInitialOrientation)(RED4ext::ent::TargetedCameraInterface *__hidden this, RED4ext::Quaternion*);
  void (*sub_38)(RED4ext::ent::TargetedCameraInterface *__hidden this);
  void (*Update)(RED4ext::ent::TargetedCameraInterface *__hidden this);
  const int8_t* (*GetTypeName)(RED4ext::ent::TargetedCameraInterface *__hidden this);
  float (*GetIntrefaceZoom)(RED4ext::ent::TargetedCameraInterface *__hidden this);
  void (*sub_58)(RED4ext::ent::TargetedCameraInterface *__hidden this);
  void (*sub_60)(RED4ext::ent::TargetedCameraInterface *__hidden this);
  void (*sub_68)(RED4ext::ent::TargetedCameraInterface *__hidden this);
  void (*sub_70)(RED4ext::ent::TargetedCameraInterface *__hidden this);
  void (*sub_78)(RED4ext::ent::TargetedCameraInterface *__hidden this);
  void (*sub_80)(RED4ext::ent::TargetedCameraInterface *__hidden this);
  void (*sub_88)(RED4ext::ent::TargetedCameraInterface *__hidden this);
  void (*sub_90)(RED4ext::ent::TargetedCameraInterface *__hidden this);
  void (*sub_98)(RED4ext::ent::TargetedCameraInterface *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::physics::ICollider>>  {
  RED4ext::Handle<RED4ext::physics::ICollider>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::world::IRuntimeSystem::Flags  {
  bool inPreview;
  bool inSingleplayer;
  bool onClientWithVisuals;
  bool onClientWithoutVisuals;
  bool onHeadlessServerWithoutVisuals;
  bool onServer;
  bool RenderDebugInProfiling;
  bool unk8;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::net::Time  {
  uint64_t milliSecs;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::Handle<RED4ext::physics::SystemBody>>  {
  RED4ext::Handle<RED4ext::physics::SystemBody>* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::game::IPersistencySystem : RED4ext::game::IGameSystem {
}
// END_DECL

// START_DECL TYPE
struct RED4ext::game::IPersistencySystem_vtbl : RED4ext::game::IGameSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::v0::Hooking  {
  bool(* Attach)(__unnamed::__unnamed::HINSTANCE__*, void*, void*, void**);
  bool(* Detach)(__unnamed::__unnamed::HINSTANCE__*, void*);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CRUID  {
  int64_t unk00;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::NavGenNavigationSetting  {
  RED4ext::NavGenNavmeshImpact navmeshImpact;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Handle<RED4ext::game::weapon::Object>  {
  RED4ext::game::weapon::Object* instance;
  void* refCount;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::vehicle::BikePhysics : RED4ext::vehicle::WheeledPhysics {
  RED4ext::vehicle::BikeBaseObject* bikeObject;
  RED4ext::Handle<void> callbackRelated;
  RED4ext::vehicle::PID tiltPID;
  float negTurnRate;
  float turnInput;
  bool tiltControlEnabled;
  uint8_t unkD61;
  uint8_t unkD62;
  uint8_t unkD63;
  float customTargetTilt;
  float tiltRelated;
  float transversalForce;
  float bikeTiltSpeed;
  float bikeTiltReturnSpeed;
  float bikeTiltCustomSpeed;
  float bikeMaxTilt;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::BikePhysics_vtbl : RED4ext::vehicle::WheeledPhysics_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::Memory::IAllocator  {
  RED4ext::Memory::IAllocator_vtbl *__vftable;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::Memory::IAllocator_vtbl {
  RED4ext::Memory::AllocationResult (*Alloc)(RED4ext::Memory::IAllocator *__hidden this, uint32_t);
  RED4ext::Memory::AllocationResult (*AllocAligned)(RED4ext::Memory::IAllocator *__hidden this, uint32_t, uint32_t);
  RED4ext::Memory::AllocationResult (*Realloc)(RED4ext::Memory::IAllocator *__hidden this, RED4ext::Memory::AllocationResult&, uint32_t);
  RED4ext::Memory::AllocationResult (*ReallocAligned)(RED4ext::Memory::IAllocator *__hidden this, RED4ext::Memory::AllocationResult&, uint32_t, uint32_t);
  void (*Free)(RED4ext::Memory::IAllocator *__hidden this, RED4ext::Memory::AllocationResult&);
  void (*sub_28)(RED4ext::Memory::IAllocator *__hidden this, void*);
  const const uint32_t (*GetHandle)(RED4ext::Memory::IAllocator *__hidden this);
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::RuntimeSystemEditorMeshes : RED4ext::world::IRuntimeSystem {
  uint8_t unk48[64];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::RuntimeSystemEditorMeshes_vtbl : RED4ext::world::IRuntimeSystem_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ent::ITransformAttachable  {
  RED4ext::ent::ITransformAttachable_vtbl *__vftable;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ent::ITransformAttachable_vtbl {
  void (*__ITransformAttachable)(RED4ext::ent::ITransformAttachable *__hidden this);
  void (*ITransformAttachable_08)(RED4ext::ent::ITransformAttachable *__hidden this, RED4ext::WorldTransform*, bool, RED4ext::Transform*);
  void (*ITransformAttachable_10)(RED4ext::ent::ITransformAttachable *__hidden this, uint64_t, uint32_t, uint32_t);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::HashMap<RED4ext::CName, RED4ext::CProperty *>  {
  uint32_t* indexTable;
  uint32_t size;
  uint32_t capacity;
  RED4ext::HashMap::NodeList nodeList;
  uint64_t allocator;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::VehicleDoorsSettings  {
  RED4ext::CName openEvent;
  RED4ext::CName closeEvent;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::StaticArray<RED4ext::physics::ProxyCacheEntry *, 65535>  {
  RED4ext::physics::ProxyCacheEntry* entries[0];
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::Unk588::Unk40  {
  uint32_t unk00[3];
  uint32_t unk0C;
  float unk10;
  uint32_t unk14;
  uint32_t unk18;
  uint32_t unk1C;
  float unk20;
  float unk24;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::UpdateManagerHolder  {
  RED4ext::UpdateManager* UpdateManager;
  void* unk08;
  uint8_t unk09;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::Unk580  {
  uint64_t unk00;
  uint64_t entityID;
  float unk10;
  float unk14;
  float unk18;
  float unk1C;
  uint64_t unk20[29];
  float unk108;
  float unk10C;
  float unk110;
  float unk114;
  float unk118;
  float unk11C;
  float unk120;
  float unk124;
  uint32_t unk128;
  uint32_t unk12C;
  uint32_t unk130;
  uint32_t unk134;
  RED4ext::vehicle::BaseObject* vehicle;
  RED4ext::CName player_audio_resource_hash;
  RED4ext::CName traffic_audio_resource_hash;
  RED4ext::vehicle::Unk580* self;
  float unk158;
  uint32_t unk15C;
  uint8_t unk160;
  uint8_t unk161;
  uint8_t unk162;
  uint8_t unk163;
  uint8_t unk164;
  uint8_t unk165;
  uint8_t unk166;
  uint8_t unk167;
  RED4ext::CName radioStation;
  uint64_t unk170;
  RED4ext::vehicle::EntityEmitters* unk178;
  uint8_t unk180;
  uint8_t unk181;
  uint8_t unk182;
  uint8_t unk183;
  uint8_t unk184;
  uint8_t unk185;
  uint8_t unk186;
  uint8_t unk187;
  uint64_t unk188[2];
  RED4ext::vehicle::EntityEmitters* unk198;
  uint64_t unk1A0[2];
  RED4ext::audio::VehicleMetadata* player_audio_resource_metadata;
  RED4ext::audio::VehicleMetadata* traffic_audio_resource_metadata;
  uint64_t unk1C0[24];
  uint64_t unk280[1];
  uint32_t unk288[42];
  uint32_t unk330;
  uint32_t unk334;
  RED4ext::CName tirePhysicalMaterial[4];
  uint64_t unk358[6];
  uint32_t unk388;
  uint32_t unk38C;
  RED4ext::Vector3 unk390;
  float unk39C;
  RED4ext::vehicle::EntityEmitter scrapingEmitter;
  float scrapingTimer;
  float unk3B4;
  RED4ext::CName scrapingLoopStart;
  RED4ext::CName scrapingLoopEnd;
  uint8_t unk3C8;
  uint8_t isTPP2;
  uint8_t unk3CA;
  uint8_t unk3CB[4];
  RED4ext::vehicle::Type type;
  uint8_t unk3D0;
  uint8_t unk3D1;
  uint8_t unk3D2;
  uint8_t unk3D3;
  uint8_t unk3D4;
  uint8_t unk3D5;
  uint8_t usePlayer;
  uint8_t unk3D7;
  uint64_t unk3D8[5];
  uint8_t unk400;
  uint8_t isTPP;
  uint8_t unk402;
  uint8_t unk403;
  float unk404;
  uint8_t unk408;
  uint8_t unk409;
  uint8_t unk40A;
  uint8_t unk40B;
  uint8_t wheelEventsStarted;
  uint8_t unk40D;
  uint8_t unk40E;
  uint8_t unk40F;
  uint64_t unk410;
  uint64_t unk418;
  float unk420;
  float unk424;
  float unk428;
  float unk42C;
  uint64_t unk430;
  uint64_t unk438;
  float unk440;
  float unk444;
  float unk448;
  float unk44C;
  float unk450;
  float unk454;
  float suspensionSqueekTimeout;
  float unk45C;
  float unk460;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::vehicle::WheeledPhysics : RED4ext::vehicle::Physics {
  uint32_t numDriveWheels;
  float frontBackWheelDistance;
  float unkD8;
  float unkDC;
  float frontBackBias;
  float turnRate;
  uint32_t unkE8;
  uint32_t unkEC;
  float wheelTurningThing;
  uint8_t unkF4;
  uint8_t unkF5;
  uint8_t unkF6;
  uint8_t unkF7;
  RED4ext::vehicle::WheeledBaseObject* wheeledObject;
  RED4ext::physics::VehiclePhysicsInsert1 insert1[4];
  uint32_t insert1Count;
  uint32_t unk5C4[3];
  RED4ext::physics::VehiclePhysicsInsert2 insert2[4];
  uint8_t insert2Count;
  uint8_t unkB91;
  uint8_t unkB92;
  uint8_t unkB93;
  uint32_t unkB94[3];
  float unkBA0;
  float unkBA4;
  float unkBA8;
  float antiSwaybarDampingScalor;
  float turningRollFactor;
  float turningRollFactorWeakContactMul;
  float turningRollFactorWeakContactThresholdMin;
  float turningRollFactorWeakContactThresholdMax;
  float maxWheelTurnDeg;
  float wheelTurnMaxAddPerSecond;
  float wheelTurnMaxSubPerSecond;
  uint8_t useAlternativeTurnUpdate;
  uint8_t unkBCD;
  uint8_t unkBCE;
  uint8_t unkBCF;
  float turnUpdateBaseSpeedThreshold;
  float turnUpdateMaxSpeedThreshold;
  float turnUpdateMaxSpeedTurnChangeMul;
  float turnUpdateMaxSpeedTurnMul;
  float turnUpdateInputDiffForSlowChange;
  float turnUpdateInputDiffForFastChange;
  float turnUpdateInputFastChangeSpeed;
  float turnUpdateInputSlowChangeSpeed;
  float turnUpdateInputDiffProgressionPow;
  float airResistanceFactor;
  float brakingFrictionFactor;
  float lowVelStoppingDeceleration;
  float handbrakeBrakingTorque;
  float forwardWeightTransferFactor;
  float sideWeightTransferFactor;
  float smoothWheelContactIncreseTime;
  float smoothWheelContactDecreseTime;
  uint32_t wheelsFrictionMap;
  uint32_t unkC18;
  float slipAngleCurveScale;
  float slipAngleMinSpeedThreshold;
  float slipRatioCurveScale;
  float slipRatioMinSpeedThreshold;
  float slopeTractionReductionBegin;
  float slopeTractionReductionMax;
  float slopeTractionReductionFactor;
  float unkC38;
  uint8_t unkC3C;
  uint8_t unkC3D;
  uint8_t unkC3E;
  uint8_t unkC3F;
  float unkC40;
  float unkC44;
  float unkC48;
  float unkC4C;
  RED4ext::Matrix unkC50;
  RED4ext::Matrix unkC90;
  uint32_t unkCD0[4];
  uint32_t wheelsNeedUpdate;
  uint32_t unkCE4;
  RED4ext::DynArray<unsigned long long> driveHelpers;
  RED4ext::Handle<void> curveSet;
  uint64_t stuckTimeout;
  RED4ext::vehicle::UnkD10* unkD10;
  uint64_t unkD18;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::WheeledPhysics_vtbl : RED4ext::vehicle::Physics_vtbl{
  bool (*sub_148)(RED4ext::vehicle::WheeledPhysics *__hidden this, uint64_t);
  bool (*sub_150)(RED4ext::vehicle::WheeledPhysics *__hidden this, uint64_t);
  float (*GetWheelLatSlip)(RED4ext::vehicle::WheeledPhysics *__hidden this, float, uint32_t);
  float (*GetWheelLongSlip)(RED4ext::vehicle::WheeledPhysics *__hidden this, float, uint32_t);
  bool (*isRightWheel)(RED4ext::vehicle::WheeledPhysics *__hidden this, uint64_t);
  bool (*isBackWheel)(RED4ext::vehicle::WheeledPhysics *__hidden this, uint64_t);
  void (*UpdateTilt)(RED4ext::vehicle::WheeledPhysics *__hidden this, float);
  void (*VehiclePhysicsUpdate)(RED4ext::vehicle::WheeledPhysics *__hidden this, float);
  void (*UpdateTurn)(RED4ext::vehicle::WheeledPhysics *__hidden this, float);
  void (*UpdateSuspensionAnimation)(RED4ext::vehicle::WheeledPhysics *__hidden this);
  void (*UpdateVehicleLinearVelocityStuff)(RED4ext::vehicle::WheeledPhysics *__hidden this, float);
  void (*UpdateVehRotW)(RED4ext::vehicle::WheeledPhysics *__hidden this, float);
  void (*sub_1A8)(RED4ext::vehicle::WheeledPhysics *__hidden this, uint32_t);
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::SectorEntry  {
  RED4ext::Box sectorBounds;
  uint64_t sectorHash;
  uint32_t entryOffset;
  uint32_t entrySize;
  uint8_t unk30;
  uint8_t unk31;
  uint8_t unk32;
  RED4ext::SharedMutex unk33;
  uint8_t unk34[12];
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::IEffect : RED4ext::ISerializable {
  uint8_t unk30[24];
  bool isEnabled;
  uint8_t unk49[7];
  RED4ext::CName effectName;
  uint8_t unk58[16];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::IEffect_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::vehicle::PhysicsData  {
  RED4ext::Vector3 force;
  RED4ext::Vector3 torque;
  RED4ext::Vector3 velocity;
  RED4ext::Vector3 angularVelocity;
  RED4ext::Quaternion orientation;
  float inverseMass;
  uint32_t unk48[3];
  RED4ext::Matrix localInertiaTensor;
  RED4ext::Matrix worldInertiaTensor;
  RED4ext::Matrix invertedLocalInertiaTensor;
  RED4ext::Matrix invertedWorldInertiaTensor;
  RED4ext::WorldTransform currentTransform;
  RED4ext::Vector4 worldPosition;
  RED4ext::vehicle::BaseObject* vehicle;
  uint64_t unk188;
  RED4ext::Box bounds;
  uint8_t unk1B0;
  uint8_t unk1B1;
  uint8_t unk1B2;
  uint8_t unk1B3;
  float alternativeChassisMass;
  uint8_t usesAlternativeChassisMass;
  uint8_t unk1B9;
  uint8_t unk1BA;
  uint8_t unk1BB;
  float total_mass;
  float chassis_mass;
  uint8_t usesInertiaTensor;
  uint8_t unk1C5;
  uint8_t unk1C6;
  uint8_t unk1C7;
  RED4ext::Vector3 momentOfInertiaScale;
  RED4ext::Vector3 centerOfMass;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::CGameOptions  {
  int16_t interopstartingport;
  int8_t renderPreset;
  int8_t unk3;
  int32_t lowSettingsOptions;
  int32_t texQualityLevel;
  int32_t meshQualityLevel;
  int32_t watchdogTimeout;
  int8_t scriptVersion;
  int16_t scriptProfiling;
  RED4ext::CString scriptsBlobPath;
  RED4ext::CString tweakdbBlobPath;
  int8_t unattended58;
  int8_t unattended59;
  int8_t unattended5A;
  int8_t forceRawTweakDB;
  int8_t pvdDumpToFile;
  int8_t profiler;
  int8_t unk5E;
  int8_t unk5F;
  int8_t unattended60;
  int64_t unk68;
  RED4ext::CString automator;
  RED4ext::CString windowCaption;
  int8_t isBackendGameEngine;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::DeferredDataBuffer>  {
  RED4ext::DeferredDataBuffer* entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::DynArray<RED4ext::IGameState *>  {
  RED4ext::IGameState** entries;
  uint32_t capacity;
  uint32_t size;
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::ink::Layer : RED4ext::ISerializable {
  RED4ext::Vector2 size;
  void* unk38;
  RED4ext::Handle<RED4ext::ink::VirtualWindow> window;
  RED4ext::Handle<RED4ext::ink::WidgetLibraryItemInstance> libraryItem;
  RED4ext::Handle<RED4ext::ink::ControllerProcessor> controllerProcessor;
  RED4ext::Handle<RED4ext::ink::anim::Processor> animationProcessor;
  RED4ext::Handle<RED4ext::ink::SpawningProcessor> spawningProcessor;
  RED4ext::Handle<RED4ext::ink::LayerProxy> layerProxy;
  void* unkA0;
  void* unkA8;
  bool active;
  uint8_t unkB1[15];
  RED4ext::CName inputContext;
  uint8_t unkC8[136];
}
// END_DECL

// START_DECL TYPE
struct RED4ext::ink::Layer_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::physics::FilterData : RED4ext::ISerializable {
  RED4ext::physics::QueryFilter queryFilter;
  RED4ext::physics::SimulationFilter simulationFilter;
  RED4ext::CName preset;
  RED4ext::Handle<RED4ext::physics::CustomFilterData> customFilterData;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::FilterData_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct __cppobj RED4ext::audio::AudioMetadataBase : RED4ext::ISerializable {
  RED4ext::CName name;
}
// END_DECL

// START_DECL TYPE
struct RED4ext::audio::AudioMetadataBase_vtbl : RED4ext::ISerializable_vtbl{
}
// END_DECL

// START_DECL TYPE
struct RED4ext::physics::ProxyID  {
  int16_t index;
  uint8_t unk02;
  uint8_t unk03;
}
// END_DECL

// START_DECL TYPE
union RED4ext::CallbackInstance::Type {
  RED4ext::CName name;
}
// END_DECL

// START_DECL TYPE
union RED4ext::CallbackId::__anonymous4 {
  RED4ext::CName name;
  uint32_t instanceOffset;
}
// END_DECL

// START_DECL TYPE
union RED4ext::CString::__anonymous0 {
  int8_t inline_str[20];
  RED4ext::CString::__unnamed::__anonymous1 str;
}
// END_DECL

// START_DECL TYPE
union RED4ext::CallbackId::__anonymous3 {
  uint64_t(* OnEvent)(RED4ext::IScriptable*, void*);
  uint16_t ids[4];
  RED4ext::CName fullname;
}
// END_DECL

// START_DECL FUNC 2070192
typedef uint32_t RED4ext::CClass::AddEventCallbackType(RED4ext::CClass*, RED4ext::CName, RED4ext::CClass*, RED4ext::CallbackDefinition*);
// END_DECL
// START_DECL FUNC 2070416
typedef uint32_t RED4ext::CClass::SetupScriptCallbacks(RED4ext::CClass*);
// END_DECL
// START_DECL FUNC 2085056
typedef void RED4ext::CClass::ApplyFlags(RED4ext::CClass*, RED4ext::CClass::Flags, bool);
// END_DECL
// START_DECL FUNC 1770608
typedef void RED4ext::ISerializable::SetOwner(RED4ext::ISerializable*, RED4ext::ISerializable*);
// END_DECL
// START_DECL FUNC 20584864
typedef uint64_t RED4ext::CGameFramework::Systems_120_128_130(RED4ext::CGameFramework*);
// END_DECL
// START_DECL FUNC 46118544
typedef bool RED4ext::GameOptionManager::GetGameOption(RED4ext::GameOptionManager*, const uint8_t*, const uint8_t*, RED4ext::CString&);
// END_DECL
// START_DECL FUNC 46120304
typedef bool RED4ext::GameOptionManager::SetGameOption(RED4ext::GameOptionManager*, const uint8_t*, const uint8_t*, RED4ext::CString*);
// END_DECL
// START_DECL FUNC 47582304
typedef int64_t RED4ext::IGameInstance::RegisterGameLoadCallbacks(RED4ext::IGameInstance*, int64_t, uint8_t*, int64_t);
// END_DECL
// START_DECL FUNC 47583408
typedef void RED4ext::IGameInstance::Systems160(RED4ext::IGameInstance*);
// END_DECL
// START_DECL FUNC 47583472
typedef bool RED4ext::IGameInstance::Systems158(RED4ext::IGameInstance*);
// END_DECL
// START_DECL FUNC 47583616
typedef void RED4ext::IGameInstance::RegisterStreamingWorldLoadedCallback(RED4ext::IGameInstance*, int64_t, int64_t);
// END_DECL
// START_DECL FUNC 47584288
typedef void RED4ext::IGameInstance::WorldPendingDetach(RED4ext::IGameInstance*, void*);
// END_DECL
// START_DECL FUNC 47581728
typedef void RED4ext::IGameInstance::WorldDetached(RED4ext::IGameInstance*, void*);
// END_DECL
// START_DECL FUNC 47585152
typedef void RED4ext::IGameInstance::Systems168o170(RED4ext::IGameInstance*, bool);
// END_DECL
// START_DECL FUNC 47581872
typedef void RED4ext::IGameInstance::Systems178(RED4ext::IGameInstance*, RED4ext::DynArray<void *>*, bool);
// END_DECL
// START_DECL FUNC 7411648
typedef void RED4ext::BaseStream::ReadWriteHandleID(RED4ext::BaseStream*, RED4ext::Handle<void>*);
// END_DECL
// START_DECL FUNC 46263888
typedef int64_t RED4ext::CallbackManager::Unknown1(RED4ext::CallbackManager*, uint16_t);
// END_DECL
// START_DECL FUNC 46265232
typedef void RED4ext::CallbackManager::AddToUnk00(RED4ext::CallbackManager*, RED4ext::Handle<RED4ext::IScriptable>*);
// END_DECL
// START_DECL FUNC 46265520
typedef uint16_t RED4ext::CallbackManager::AddCallback(RED4ext::CallbackManager*, RED4ext::CallbackInstance*);
// END_DECL
// START_DECL FUNC 46267504
typedef void RED4ext::CallbackManager::Unknown6(RED4ext::CallbackManager*, RED4ext::CClass*);
// END_DECL
// START_DECL FUNC 4470400
typedef int64_t RED4ext::physics::GeometryCache::LoadAlwaysloadedSectorGeometriesSetup(RED4ext::physics::GeometryCache*, int64_t);
// END_DECL
// START_DECL FUNC 4471264
typedef int64_t RED4ext::physics::GeometryCache::LoadSectorGeometriesSetup(RED4ext::physics::GeometryCache*, uint32_t);
// END_DECL
// START_DECL FUNC 4458176
typedef void RED4ext::physics::GeometryCache::LoadSectorGeometries(RED4ext::physics::GeometryCache*, RED4ext::physics::GeometryCache::LoadSectorGeometriesStruct*);
// END_DECL
// START_DECL FUNC 4459712
typedef void RED4ext::physics::GeometryCache::LoadAlwaysloadedSectorGeometries(RED4ext::physics::GeometryCache*, void*);
// END_DECL
// START_DECL FUNC 4469568
typedef bool RED4ext::physics::GeometryCache::HasGeometryKey(RED4ext::physics::GeometryCache*, RED4ext::physics::GeometryKey*);
// END_DECL
// START_DECL FUNC 4470288
typedef bool RED4ext::physics::GeometryCache::Unknown(RED4ext::physics::GeometryCache*, uint32_t);
// END_DECL
// START_DECL FUNC 4469088
typedef void RED4ext::physics::GeometryCache::FreeSector(RED4ext::physics::GeometryCache*, uint32_t);
// END_DECL
// START_DECL FUNC 4468656
typedef void RED4ext::physics::GeometryCache::FreeGeometryKey(RED4ext::physics::GeometryCache*, RED4ext::physics::GeometryKey*);
// END_DECL
// START_DECL FUNC 4467904
typedef void RED4ext::physics::GeometryCache::FreeAlwaysLoaded(RED4ext::physics::GeometryCache*);
// END_DECL
// START_DECL FUNC 4464208
typedef int64_t RED4ext::physics::GeometryCache::sub_7FF75B921520(RED4ext::physics::GeometryCache*, int64_t, int64_t*, RED4ext::DynArray<void *>**, uint8_t);
// END_DECL
// START_DECL FUNC 4468032
typedef bool RED4ext::physics::GeometryCache::sub_7FF75B922410(RED4ext::physics::GeometryCache*, RED4ext::physics::GeometryKey*);
// END_DECL
// START_DECL FUNC 12085456
typedef uint32_t RED4ext::world::RuntimeScene::SetupWithLogging(RED4ext::world::RuntimeScene*, uint8_t*, int64_t, uint32_t*);
// END_DECL
// START_DECL FUNC 12172736
typedef int64_t RED4ext::UpdatableSystems::SetRuntimeScene(RED4ext::UpdatableSystems*, RED4ext::world::RuntimeScene*);
// END_DECL
// START_DECL FUNC 47580592
typedef int64_t RED4ext::GameInstance::SetRuntimeScene(RED4ext::GameInstance*, RED4ext::world::RuntimeScene*);
// END_DECL
// START_DECL FUNC 17122032
typedef void RED4ext::ent::IComponent::SetEntity(RED4ext::ent::IComponent*, RED4ext::ent::Entity*);
// END_DECL
// START_DECL FUNC 17128976
typedef RED4ext::RefCnt* RED4ext::ent::ComponentsStorage::AddComponent(RED4ext::ent::ComponentsStorage*, RED4ext::Handle<RED4ext::ent::IComponent>);
// END_DECL
// START_DECL FUNC 17129200
typedef void RED4ext::ent::ComponentsStorage::AddComponents(RED4ext::ent::ComponentsStorage*, RED4ext::DynArray<RED4ext::Handle<RED4ext::ent::IComponent>>*);
// END_DECL
// START_DECL FUNC 17176032
typedef bool RED4ext::ent::ComponentsStorage::IsEmpty(RED4ext::ent::ComponentsStorage*);
// END_DECL
// START_DECL FUNC 9118064
typedef int64_t RED4ext::ent::ComponentsStorage::GetSize(RED4ext::ent::ComponentsStorage*);
// END_DECL
// START_DECL FUNC 17129520
typedef void RED4ext::ent::ComponentsStorage::FreeMemory(RED4ext::ent::ComponentsStorage*);
// END_DECL
// START_DECL FUNC 17129728
typedef RED4ext::Handle<RED4ext::ent::IComponent>* RED4ext::ent::ComponentsStorage::GetComponentByCRUID(RED4ext::ent::ComponentsStorage*, RED4ext::Handle<RED4ext::ent::IComponent>*, RED4ext::CRUID);
// END_DECL
// START_DECL FUNC 17067824
typedef uint64_t RED4ext::ent::Entity::SetupEntityAndComponents(RED4ext::ent::Entity*, RED4ext::ent::EntityDefinition*);
// END_DECL
// START_DECL FUNC 17068112
typedef void RED4ext::ent::Entity::ReassembleAppearance(RED4ext::ent::Entity*, int64_t, uint64_t, uint64_t, RED4ext::DynArray<RED4ext::Handle<RED4ext::ent::IComponent>>*, RED4ext::Handle<RED4ext::ent::IComponent>*);
// END_DECL
// START_DECL FUNC 17096160
typedef int64_t RED4ext::ent::Entity::SomethingListeners(RED4ext::ent::Entity*, RED4ext::Handle<RED4ext::IScriptable>*);
// END_DECL
// START_DECL FUNC 6671744
typedef float RED4ext::Quaternion::GetYaw(RED4ext::Quaternion*);
// END_DECL
// START_DECL FUNC 5606432
typedef RED4ext::EulerAngles* RED4ext::Quaternion::ToEulerAngles(RED4ext::Quaternion*, RED4ext::EulerAngles*);
// END_DECL
// START_DECL FUNC 1876272
typedef RED4ext::Matrix* RED4ext::Quaternion::ToMatrix(RED4ext::Quaternion*, RED4ext::Matrix*);
// END_DECL
// START_DECL FUNC 20988304
typedef bool RED4ext::game::Object::CallScriptFunction(RED4ext::game::Object*, void*, uint64_t, uint8_t);
// END_DECL
// START_DECL FUNC 11497536
typedef void** RED4ext::game::IGameSystem::SetGameInstance(RED4ext::game::IGameSystem*, void**, RED4ext::GameInstance*);
// END_DECL
// START_DECL FUNC 11497680
typedef int64_t RED4ext::game::IGameSystem::Unset(RED4ext::game::IGameSystem*);
// END_DECL
// START_DECL FUNC 10552656
typedef RED4ext::Handle<RED4ext::mesh::MeshParameter>* RED4ext::CMesh::GetParameterOfType(RED4ext::CMesh*, RED4ext::Handle<RED4ext::mesh::MeshParameter>*, RED4ext::CClass*);
// END_DECL
// START_DECL FUNC 17467600
typedef void RED4ext::ent::MeshComponent::Load(RED4ext::ent::MeshComponent*, bool);
// END_DECL
// START_DECL FUNC 16632640
typedef bool RED4ext::ent::AnimatedComponent::GetReferencePoseMSForName(RED4ext::ent::AnimatedComponent*, RED4ext::CName, RED4ext::Transform*);
// END_DECL
// START_DECL FUNC 4444864
typedef void RED4ext::physics::FilterData::LoadPreset(RED4ext::physics::FilterData*, RED4ext::CName);
// END_DECL
// START_DECL FUNC 4494592
typedef bool RED4ext::physics::ProxyID::Unk(RED4ext::physics::ProxyID*, void*);
// END_DECL
// START_DECL FUNC 4495136
typedef uint32_t* RED4ext::physics::ProxyID::ProcessProxyDesc(RED4ext::physics::ProxyID*, RED4ext::physics::BaseProxyDesc*);
// END_DECL
// START_DECL FUNC 4635248
typedef RED4ext::physics::BaseProxy* RED4ext::physics::ProxyID::GetProxy(RED4ext::physics::ProxyID*);
// END_DECL
// START_DECL FUNC 4952192
typedef bool RED4ext::physics::pxRigidBody_Get(void*, int64_t, RED4ext::physics::StateValue, void*, uint32_t);
// END_DECL
// START_DECL FUNC 4955808
typedef bool RED4ext::physics::pxRigidBody_Update(void*, RED4ext::physics::StateValue, void*, int64_t, uint32_t, bool);
// END_DECL
// START_DECL FUNC 4501808
typedef RED4ext::Transform* RED4ext::physics::GetShapeLocalPos(RED4ext::Transform*, RED4ext::physics::ProxyID*, uint32_t, uint32_t);
// END_DECL
// START_DECL FUNC 4632848
typedef bool RED4ext::physics::ProxyManager::TestUnk2E2068(RED4ext::physics::ProxyManager*, RED4ext::physics::ProxyID*);
// END_DECL
// START_DECL FUNC 4632208
typedef RED4ext::physics::ProxyCache* RED4ext::physics::ProxyManager::GetProxyCache(RED4ext::physics::ProxyManager*, RED4ext::physics::ProxyID*);
// END_DECL
// START_DECL FUNC 4632848
typedef bool RED4ext::physics::ProxyManager::HasProxy(RED4ext::physics::ProxyManager*, RED4ext::physics::ProxyID*);
// END_DECL
// START_DECL FUNC 4631872
typedef RED4ext::Handle<RED4ext::physics::BaseProxy>* RED4ext::physics::ProxyManager::GetProxyHandle(RED4ext::physics::ProxyManager*, RED4ext::Handle<RED4ext::physics::BaseProxy>*, RED4ext::physics::ProxyID*);
// END_DECL
// START_DECL FUNC 4633728
typedef void RED4ext::physics::ProxyManager::SetProxyCacheID(RED4ext::physics::ProxyManager*, RED4ext::physics::ProxyID*, RED4ext::physics::ProxyCacheID*);
// END_DECL
// START_DECL FUNC 4635376
typedef void RED4ext::physics::ProxyCache::AddToCache(RED4ext::physics::ProxyCache*, RED4ext::physics::ProxyCacheEntry*, int32_t, int32_t, RED4ext::physics::StateValue, void*, uint64_t, bool);
// END_DECL
// START_DECL FUNC 4634832
typedef bool RED4ext::physics::ProxyCache::GetFromCacheOrGet(RED4ext::physics::ProxyCache*, RED4ext::physics::ProxyID*, uint32_t, uint32_t, RED4ext::physics::StateValue, void*, uint32_t);
// END_DECL
// START_DECL FUNC 4950976
typedef void* RED4ext::physics::ProxyCache::GetDataFromCache(RED4ext::physics::ProxyCache*, uint32_t);
// END_DECL
// START_DECL FUNC 4819072
typedef int64_t RED4ext::physics::ProxyCacheManager::Unk948::Kick(RED4ext::physics::ProxyCacheManager::Unk948*, float);
// END_DECL
// START_DECL FUNC 17598992
typedef void RED4ext::ent::PhysicalMeshComponent::ProcessSystemResource(RED4ext::ent::PhysicalMeshComponent*, RED4ext::Handle<RED4ext::CMesh>*);
// END_DECL
// START_DECL FUNC 18207392
typedef bool RED4ext::ent::SlotComponent::GetSlotGlobalTransform(RED4ext::ent::SlotComponent*, RED4ext::CName, RED4ext::WorldTransform*);
// END_DECL
// START_DECL FUNC 18207056
typedef int64_t RED4ext::ent::SlotComponent::GetSlotIndex(RED4ext::ent::SlotComponent*, RED4ext::CName);
// END_DECL
// START_DECL FUNC 18208928
typedef bool RED4ext::ent::SlotComponent::GetSlotLocalTransform(RED4ext::ent::SlotComponent*, int32_t, RED4ext::WorldTransform*, RED4ext::WorldTransform*);
// END_DECL
// START_DECL FUNC 18209792
typedef bool RED4ext::ent::SlotComponent::GetLocalSlotTransformFromIndex(RED4ext::ent::SlotComponent*, int32_t, RED4ext::Transform*);
// END_DECL
// START_DECL FUNC 18411008
typedef void RED4ext::ent::VisualControllerComponent::Set0xF4(RED4ext::ent::VisualControllerComponent*, uint8_t);
// END_DECL
// START_DECL FUNC 18410688
typedef void RED4ext::ent::VisualControllerComponent::Unknown(RED4ext::ent::VisualControllerComponent*, int64_t, uint8_t, uint8_t);
// END_DECL
// START_DECL FUNC 18417776
typedef void RED4ext::ent::VisualControllerComponent::LoadUnkD8(RED4ext::ent::VisualControllerComponent*, uint8_t);
// END_DECL
// START_DECL FUNC 3956688
typedef void RED4ext::action::ActionBase::Lock(RED4ext::action::ActionBase*);
// END_DECL
// START_DECL FUNC 28506560
typedef void RED4ext::action::ActionBase::StartWithReplicatedState(RED4ext::action::ActionBase*);
// END_DECL
// START_DECL FUNC 43656320
typedef void RED4ext::game::CActionsFactory::AddActionTypeManual(RED4ext::game::CActionsFactory*, RED4ext::action::Type, RED4ext::action::ActionBase*(*)(int64_t, uint32_t*, uint32_t));
// END_DECL
// START_DECL FUNC 7548176
typedef void RED4ext::game::GameAudioSystem::UpdateParameter(RED4ext::game::GameAudioSystem*, int32_t*, RED4ext::CName, float);
// END_DECL
// START_DECL FUNC 7529712
typedef void RED4ext::game::GameAudioSystem::SetGlobalParameter(RED4ext::game::GameAudioSystem*, RED4ext::CName, float);
// END_DECL
// START_DECL FUNC 30306256
typedef void RED4ext::game::VehicleSystem::UpdateVehicleArrays(RED4ext::game::VehicleSystem*);
// END_DECL
// START_DECL FUNC 30291872
typedef void RED4ext::game::VehicleSystem::BeginUpdate(RED4ext::game::VehicleSystem*, RED4ext::game::VehicleSystem**);
// END_DECL
// START_DECL FUNC 4381216
typedef RED4ext::Handle<RED4ext::physics::ColliderSphere>* RED4ext::physics::ColliderSphere::createHandleWithRadius(RED4ext::physics::ColliderSphere*, RED4ext::Handle<RED4ext::physics::ICollider>*, float);
// END_DECL
// START_DECL FUNC 10702480
typedef RED4ext::Handle<RED4ext::physics::SystemResource>* RED4ext::physics::SystemResource::GetFromCMesh(RED4ext::physics::SystemResource*, RED4ext::Handle<RED4ext::physics::SystemResource>*, RED4ext::CMesh*);
// END_DECL
// START_DECL FUNC 4508992
typedef RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::SetSimulationShape(RED4ext::physics::ProxyHelper*, bool, uint32_t, uint32_t);
// END_DECL
// START_DECL FUNC 4514928
typedef RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::SetCCD(RED4ext::physics::ProxyHelper*, bool, int32_t);
// END_DECL
// START_DECL FUNC 4513200
typedef RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::SetSimulationFilterData(RED4ext::physics::ProxyHelper*, void*, int32_t, int32_t);
// END_DECL
// START_DECL FUNC 4512176
typedef RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::SetQueryFilterData(RED4ext::physics::ProxyHelper*, void*, uint32_t, uint32_t);
// END_DECL
// START_DECL FUNC 4508720
typedef RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::SetIsQueryable(RED4ext::physics::ProxyHelper*, bool, uint32_t, uint32_t);
// END_DECL
// START_DECL FUNC 4509520
typedef RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::SetLinearDamping(RED4ext::physics::ProxyHelper*, float*, uint32_t);
// END_DECL
// START_DECL FUNC 4505856
typedef RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::SetAngularDamping(RED4ext::physics::ProxyHelper*, float*, uint32_t);
// END_DECL
// START_DECL FUNC 4508208
typedef RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::SetGravity(RED4ext::physics::ProxyHelper*, bool, uint32_t);
// END_DECL
// START_DECL FUNC 4486720
typedef RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::Create(RED4ext::physics::ProxyHelper*, RED4ext::physics::ProxyID*);
// END_DECL
// START_DECL FUNC 4486576
typedef RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::GetThingWithLock(RED4ext::physics::ProxyHelper*, RED4ext::physics::ProxyID*, RED4ext::SharedMutex*);
// END_DECL
// START_DECL FUNC 4510544
typedef RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::SetMassAndUpdateInertia(RED4ext::physics::ProxyHelper*, float, uint32_t, bool);
// END_DECL
// START_DECL FUNC 4490272
typedef bool RED4ext::physics::ProxyHelper::UpdateProxyCache(RED4ext::physics::ProxyHelper*);
// END_DECL
// START_DECL FUNC 4486848
typedef int64_t RED4ext::physics::ProxyHelper::Unlock(RED4ext::physics::ProxyHelper*);
// END_DECL
// START_DECL FUNC 30010336
typedef void RED4ext::vehicle::ChassisComponent::SomethingIfEnabled(RED4ext::vehicle::ChassisComponent*);
// END_DECL
// START_DECL FUNC 30011232
typedef bool RED4ext::vehicle::ChassisComponent::BigUpdate(RED4ext::vehicle::ChassisComponent*);
// END_DECL
// START_DECL FUNC 30017424
typedef void RED4ext::vehicle::ChassisComponent::Update(RED4ext::vehicle::ChassisComponent*);
// END_DECL
// START_DECL FUNC 30004512
typedef RED4ext::Handle<RED4ext::physics::ICollider>** RED4ext::vehicle::ChassisComponent::GetCollisionShapes(RED4ext::vehicle::ChassisComponent*, RED4ext::Handle<RED4ext::physics::ICollider>**, bool);
// END_DECL
// START_DECL FUNC 30001184
typedef RED4ext::WorldTransform* RED4ext::vehicle::ChassisComponent::TransformWorldTransform(RED4ext::vehicle::ChassisComponent*, RED4ext::WorldTransform*, RED4ext::WorldTransform*);
// END_DECL
// START_DECL FUNC 30003600
typedef RED4ext::physics::ProxyHelper* RED4ext::vehicle::ChassisComponent::GetProxyHelperAndLock(RED4ext::vehicle::ChassisComponent*, RED4ext::physics::ProxyHelper*);
// END_DECL
// START_DECL FUNC 30002256
typedef int64_t RED4ext::vehicle::ChassisComponent::SetFilterData(RED4ext::vehicle::ChassisComponent*, RED4ext::physics::FilterData*, RED4ext::physics::FilterData*);
// END_DECL
// START_DECL FUNC 30009488
typedef void RED4ext::vehicle::ChassisComponent::UpdatePhysicsState(RED4ext::vehicle::ChassisComponent*, uint32_t, bool);
// END_DECL
// START_DECL FUNC 30362896
typedef void RED4ext::vehicle::TPPCameraComponent::TargetedCameraInterface_Update(RED4ext::vehicle::TPPCameraComponent*, float*);
// END_DECL
// START_DECL FUNC 30355152
typedef void RED4ext::vehicle::TPPCameraComponent::TargetedCameraInterface_sub_58(RED4ext::vehicle::TPPCameraComponent*);
// END_DECL
// START_DECL FUNC 30361296
typedef int64_t RED4ext::vehicle::TPPCameraComponent::UpdateData(RED4ext::vehicle::TPPCameraComponent*, void*);
// END_DECL
// START_DECL FUNC 30364272
typedef void RED4ext::vehicle::TPPCameraComponent::UpdateTPP(RED4ext::vehicle::TPPCameraComponent*);
// END_DECL
// START_DECL FUNC 30349168
typedef RED4ext::Vector4* RED4ext::vehicle::TPPCameraComponent::GetLocationFromOffset(RED4ext::vehicle::TPPCameraComponent*, RED4ext::Vector4*, RED4ext::Vector3*);
// END_DECL
// START_DECL FUNC 30364720
typedef void RED4ext::vehicle::TPPCameraComponent::UpdatePosition(RED4ext::vehicle::TPPCameraComponent*, RED4ext::vehicle::TPPCameraUpdate*);
// END_DECL
// START_DECL FUNC 30369904
typedef void RED4ext::vehicle::TPPCameraComponent::UpdatePitch(RED4ext::vehicle::TPPCameraComponent*, RED4ext::Vector4*, RED4ext::Vector3*, RED4ext::vehicle::TPPCameraUpdate*);
// END_DECL
// START_DECL FUNC 30368368
typedef void RED4ext::vehicle::TPPCameraComponent::GetYaw(RED4ext::vehicle::TPPCameraComponent*, float*, RED4ext::Vector4*, float);
// END_DECL
// START_DECL FUNC 29980384
typedef bool RED4ext::vehicle::CameraManager::IsTPP(RED4ext::vehicle::CameraManager*);
// END_DECL
// START_DECL FUNC 29971296
typedef void RED4ext::vehicle::CameraManager::ChangeCamera(RED4ext::vehicle::CameraManager*, uint32_t, float);
// END_DECL
// START_DECL FUNC 28629984
typedef void RED4ext::action::ActionInterface::ProcessActions(RED4ext::action::ActionInterface*, void*, bool);
// END_DECL
// START_DECL FUNC 28629264
typedef int64_t RED4ext::action::ActionInterface::EndActions(RED4ext::action::ActionInterface*);
// END_DECL
// START_DECL FUNC 28629728
typedef bool RED4ext::action::ActionInterface::IsAnimationiActive(RED4ext::action::ActionInterface*, RED4ext::action::Type, uint8_t);
// END_DECL
// START_DECL FUNC 30224304
typedef void RED4ext::vehicle::PersistentDataPS::UpdateWheelRuntime(RED4ext::vehicle::PersistentDataPS*, uint32_t, RED4ext::vehicle::WheelRuntimePSData*);
// END_DECL
// START_DECL FUNC 30218768
typedef void RED4ext::vehicle::PersistentDataPS::ResetQuestEnforceTransform(RED4ext::vehicle::PersistentDataPS*);
// END_DECL
// START_DECL FUNC 30630176
typedef void RED4ext::vehicle::PID::UpdatePID(RED4ext::vehicle::PID*, float, float, float);
// END_DECL
// START_DECL FUNC 30630192
typedef void RED4ext::vehicle::PID::Reset(RED4ext::vehicle::PID*, float);
// END_DECL
// START_DECL FUNC 30630208
typedef float RED4ext::vehicle::PID::GetCorrection(RED4ext::vehicle::PID*);
// END_DECL
// START_DECL FUNC 30630224
typedef void RED4ext::vehicle::PID::Initialize(RED4ext::vehicle::PID*, float, float, float);
// END_DECL
// START_DECL FUNC 30630256
typedef RED4ext::vehicle::PID::IntegralState RED4ext::vehicle::PID::Process(RED4ext::vehicle::PID*, float, float);
// END_DECL
// START_DECL FUNC 30479200
typedef void RED4ext::vehicle::AirControl::Process(RED4ext::vehicle::AirControl*, float);
// END_DECL
// START_DECL FUNC 30472320
typedef void RED4ext::vehicle::AirControl::ApplyTorque(RED4ext::vehicle::AirControl*, uint32_t, float);
// END_DECL
// START_DECL FUNC 30475968
typedef RED4ext::Vector3* RED4ext::vehicle::AirControl::GetAngularVelocity(RED4ext::vehicle::AirControl*, RED4ext::Vector3*, int32_t, void*);
// END_DECL
// START_DECL FUNC 29783168
typedef void RED4ext::vehicle::Unk580::Update3CA(RED4ext::vehicle::Unk580*, bool);
// END_DECL
// START_DECL FUNC 29770912
typedef void* RED4ext::vehicle::Unk580::GetAudioResourceMetadata(RED4ext::vehicle::Unk580*, void*);
// END_DECL
// START_DECL FUNC 29791344
typedef void RED4ext::vehicle::Unk580::Update(RED4ext::vehicle::Unk580*, int64_t, float, uint64_t*);
// END_DECL
// START_DECL FUNC 29790432
typedef int64_t RED4ext::vehicle::Unk580::UpdateWheelEmitters(RED4ext::vehicle::Unk580*, int64_t);
// END_DECL
// START_DECL FUNC 29769440
typedef bool RED4ext::vehicle::Unk580::ShouldUseSomeAVListener(RED4ext::vehicle::Unk580*);
// END_DECL
// START_DECL FUNC 29776592
typedef void RED4ext::vehicle::Unk580::ToggleHorn(RED4ext::vehicle::Unk580*, bool, uint8_t*);
// END_DECL
// START_DECL FUNC 29785248
typedef int64_t RED4ext::vehicle::Unk580::SetRadioTier(RED4ext::vehicle::Unk580*, int32_t, bool);
// END_DECL
// START_DECL FUNC 29784928
typedef void RED4ext::vehicle::Unk580::NextRadioReceiverStation(RED4ext::vehicle::Unk580*, uint32_t, bool);
// END_DECL
// START_DECL FUNC 29774416
typedef bool RED4ext::vehicle::Unk580::IsRadioReceiverActive(RED4ext::vehicle::Unk580*);
// END_DECL
// START_DECL FUNC 29798768
typedef void RED4ext::vehicle::Unk580::UpdateEvents(RED4ext::vehicle::Unk580*, RED4ext::vehicle::WheelUpdate*, int64_t);
// END_DECL
// START_DECL FUNC 29766720
typedef void RED4ext::vehicle::Unk580::UpdateTireParameters(RED4ext::vehicle::Unk580*, RED4ext::vehicle::TireParameterUpdate*, RED4ext::vehicle::TireUpdate*);
// END_DECL
// START_DECL FUNC 28182448
typedef void RED4ext::vehicle::Unk568::Unk568(RED4ext::vehicle::Unk568*);
// END_DECL
// START_DECL FUNC 28186368
typedef void RED4ext::vehicle::Unk568::CopyOverCollisionForce(RED4ext::vehicle::Unk568*);
// END_DECL
// START_DECL FUNC 28186400
typedef void RED4ext::vehicle::Unk568::SetUnkD0(RED4ext::vehicle::Unk568*, void*);
// END_DECL
// START_DECL FUNC 28186432
typedef int64_t RED4ext::vehicle::Unk568::SetAcceleration(RED4ext::vehicle::Unk568*, RED4ext::Vector4*);
// END_DECL
// START_DECL FUNC 28187024
typedef void RED4ext::vehicle::Unk568::SetLinearVelocityEtc(RED4ext::vehicle::Unk568*, RED4ext::Vector4*);
// END_DECL
// START_DECL FUNC 30574160
typedef void RED4ext::vehicle::Unk570::Setup(RED4ext::vehicle::Unk570*, int64_t, int64_t, int64_t);
// END_DECL
// START_DECL FUNC 30584320
typedef void RED4ext::vehicle::Unk570::ProcessEffects(RED4ext::vehicle::Unk570*, uint32_t, RED4ext::vehicle::Unk570::Unk40*, float);
// END_DECL
// START_DECL FUNC 30571648
typedef void RED4ext::vehicle::Unk570::UpdateEffectsBlackboard(RED4ext::vehicle::Unk570*, uint32_t);
// END_DECL
// START_DECL FUNC 30584320
typedef void RED4ext::vehicle::Unk570::WheelEffectUpdate(RED4ext::vehicle::Unk570*, uint32_t, RED4ext::vehicle::Unk570::Unk40*, float);
// END_DECL
// START_DECL FUNC 30559328
typedef RED4ext::vehicle::Unk570::CollisionFxLookup* RED4ext::vehicle::Unk570::GetCollisionFxForMaterial(RED4ext::vehicle::Unk570*, RED4ext::CName);
// END_DECL
// START_DECL FUNC 30559712
typedef RED4ext::vehicle::MaterialFx* RED4ext::vehicle::Unk570::GetFxForMaterial(RED4ext::vehicle::Unk570*, RED4ext::CName, bool);
// END_DECL
// START_DECL FUNC 30559568
typedef RED4ext::vehicle::Unk570::SmearFxLookup* RED4ext::vehicle::Unk570::GetSmearFxForMaterial(RED4ext::vehicle::Unk570*, RED4ext::CName, bool);
// END_DECL
// START_DECL FUNC 30565648
typedef void RED4ext::vehicle::Unk570::ProcessImpactScratch(RED4ext::vehicle::Unk570*, RED4ext::Vector3*, RED4ext::Vector3*, RED4ext::Vector3*, RED4ext::Vector3*, float, float, RED4ext::CName);
// END_DECL
// START_DECL FUNC 30589744
typedef bool RED4ext::vehicle::Unk570::TireTrackEffectStart(RED4ext::vehicle::Unk570*, RED4ext::vehicle::Unk570::Unk30*, RED4ext::vehicle::MaterialFx*, RED4ext::Transform*, RED4ext::Transform*, bool, bool, bool);
// END_DECL
// START_DECL FUNC 30587344
typedef bool RED4ext::vehicle::Unk570::SkidMarkEffectStart(RED4ext::vehicle::Unk570*, RED4ext::vehicle::Unk570::Unk30*, RED4ext::vehicle::MaterialFx*, RED4ext::Transform*, RED4ext::Transform*, bool, bool, bool);
// END_DECL
// START_DECL FUNC 29806320
typedef int64_t RED4ext::vehicle::Unk588::Unknown(RED4ext::vehicle::Unk588*, RED4ext::vehicle::BaseObject*, int64_t);
// END_DECL
// START_DECL FUNC 29809888
typedef void RED4ext::vehicle::Unk588::UpdateTransform(RED4ext::vehicle::Unk588*, RED4ext::Transform*);
// END_DECL
// START_DECL FUNC 29940656
typedef void RED4ext::vehicle::BaseObject::SetPhysicsState(RED4ext::vehicle::BaseObject*, RED4ext::vehicle::PhysicsState, bool);
// END_DECL
// START_DECL FUNC 29858000
typedef void RED4ext::vehicle::BaseObject::UnsetPhysicsStates(RED4ext::vehicle::BaseObject*);
// END_DECL
// START_DECL FUNC 29861760
typedef float RED4ext::vehicle::BaseObject::GetTotalMass(RED4ext::vehicle::BaseObject*);
// END_DECL
// START_DECL FUNC 29861776
typedef float RED4ext::vehicle::BaseObject::GetInverseMass(RED4ext::vehicle::BaseObject*);
// END_DECL
// START_DECL FUNC 29861792
typedef float RED4ext::vehicle::BaseObject::GetGravitationalForce(RED4ext::vehicle::BaseObject*);
// END_DECL
// START_DECL FUNC 29861824
typedef float RED4ext::vehicle::BaseObject::GetUnk60C(RED4ext::vehicle::BaseObject*);
// END_DECL
// START_DECL FUNC 29861840
typedef RED4ext::CString* RED4ext::vehicle::BaseObject::GetDisplayName(RED4ext::vehicle::BaseObject*, RED4ext::CString*);
// END_DECL
// START_DECL FUNC 29862416
typedef RED4ext::Handle<void>* RED4ext::vehicle::BaseObject::GetCurveSetData(RED4ext::vehicle::BaseObject*, RED4ext::Handle<void>*);
// END_DECL
// START_DECL FUNC 29862800
typedef RED4ext::world::RuntimeSystemPhysics* RED4ext::vehicle::BaseObject::GetVehicleSystem(RED4ext::vehicle::BaseObject*);
// END_DECL
// START_DECL FUNC 29862848
typedef RED4ext::Quaternion* RED4ext::vehicle::BaseObject::GetWeaponOrientation(RED4ext::vehicle::BaseObject*, RED4ext::Quaternion*, uint32_t);
// END_DECL
// START_DECL FUNC 29865328
typedef void RED4ext::vehicle::BaseObject::HornForDuration(RED4ext::vehicle::BaseObject*);
// END_DECL
// START_DECL FUNC 29865936
typedef void RED4ext::vehicle::BaseObject::HornForDurationDelayed(RED4ext::vehicle::BaseObject*, float);
// END_DECL
// START_DECL FUNC 29844896
typedef void RED4ext::vehicle::BaseObject::Reset8B4(RED4ext::vehicle::BaseObject*);
// END_DECL
// START_DECL FUNC 29845120
typedef void* RED4ext::vehicle::BaseObject::GetUnk8E0(RED4ext::vehicle::BaseObject*);
// END_DECL
// START_DECL FUNC 7566960
typedef RED4ext::vehicle::PhysicsData* RED4ext::vehicle::BaseObject::GetPhysicsData(RED4ext::vehicle::BaseObject*);
// END_DECL
// START_DECL FUNC 7566976
typedef double RED4ext::vehicle::BaseObject::GetDeceleration(RED4ext::vehicle::BaseObject*);
// END_DECL
// START_DECL FUNC 29936704
typedef bool RED4ext::vehicle::BaseObject::CheckPhysicsStateActionInterface(RED4ext::vehicle::BaseObject*);
// END_DECL
// START_DECL FUNC 29897408
typedef void RED4ext::vehicle::BaseObject::UpdatePhysicsSleepState(RED4ext::vehicle::BaseObject*, float);
// END_DECL
// START_DECL FUNC 29897024
typedef void RED4ext::vehicle::BaseObject::PreUpdatePreMovePhysicsStateNotZero(RED4ext::vehicle::BaseObject*, int64_t, float*, int64_t);
// END_DECL
// START_DECL FUNC 29896256
typedef int64_t RED4ext::vehicle::BaseObject::PreUpdatePreMovePhysicsStateZero(RED4ext::vehicle::BaseObject*, int64_t, int64_t, int64_t);
// END_DECL
// START_DECL FUNC 29893600
typedef RED4ext::WorldTransform* RED4ext::vehicle::BaseObject::PostMovePhysicsStateNotZero(RED4ext::vehicle::BaseObject*, float, float*);
// END_DECL
// START_DECL FUNC 29893104
typedef RED4ext::WorldTransform* RED4ext::vehicle::BaseObject::PostMovePhysicsStateZero(RED4ext::vehicle::BaseObject*, float, float*);
// END_DECL
// START_DECL FUNC 29928704
typedef RED4ext::action::ActionBase** RED4ext::vehicle::BaseObject::CreateAction(RED4ext::vehicle::BaseObject*, RED4ext::action::ActionBase**, RED4ext::action::Type);
// END_DECL
// START_DECL FUNC 11076272
typedef RED4ext::UpdateManager::UpdateStorage* RED4ext::UpdateManager::UpdateStorage::Copy(RED4ext::UpdateManager::UpdateStorage*, RED4ext::UpdateManager::UpdateStorage*);
// END_DECL
// START_DECL FUNC 11074320
typedef RED4ext::UpdateManager::UpdateStorage* RED4ext::UpdateManager::UpdateStorage::Copy_0(RED4ext::UpdateManager::UpdateStorage*, RED4ext::UpdateManager::UpdateStorage*);
// END_DECL
// START_DECL FUNC 11075632
typedef void RED4ext::UpdateManager::ReleaseUnknown(RED4ext::UpdateManager*);
// END_DECL
// START_DECL FUNC 11079360
typedef uint64_t RED4ext::UpdateManager::RegisterUpdate(RED4ext::UpdateManager*, RED4ext::UpdateManager::UpdateStorage*);
// END_DECL
// START_DECL FUNC 11080832
typedef int64_t RED4ext::UpdateManager::IterateUnknown(RED4ext::UpdateManager*, RED4ext::CClass***, RED4ext::CClass***);
// END_DECL
// START_DECL FUNC 11077568
typedef void* RED4ext::UpdateManager::PrepareFiring(RED4ext::UpdateManager*, int64_t, int32_t*, uint32_t, uint32_t);
// END_DECL
// START_DECL FUNC 11078016
typedef int64_t RED4ext::UpdateManagerHolder::Something(RED4ext::UpdateManagerHolder*);
// END_DECL
// START_DECL FUNC 11076528
typedef void* RED4ext::UpdateManagerHolder::UpdateSystems(RED4ext::UpdateManagerHolder*, void*, float, int64_t);
// END_DECL
// START_DECL FUNC 11673136
typedef void RED4ext::UpdateManagerHolder::RegisterBucketUpdate(RED4ext::UpdateManagerHolder*, RED4ext::Unk2, RED4ext::Unk1, RED4ext::IUpdatableSystem*, const int8_t*, const int32_t&);
// END_DECL
// START_DECL FUNC 46876976
typedef bool RED4ext::audio::BankManager::LoadBanksMaybe(RED4ext::audio::BankManager*, int64_t);
// END_DECL
// START_DECL FUNC 46877520
typedef int64_t RED4ext::audio::BankManager::LoadBank(RED4ext::audio::BankManager*, int64_t, uint64_t);
// END_DECL
// START_DECL FUNC 46883456
typedef int64_t RED4ext::audio::BankManager::UnloadBank(RED4ext::audio::BankManager*, int64_t);
// END_DECL
// START_DECL FUNC 46845376
typedef float RED4ext::audio::GameParameterStorage::GetValue(RED4ext::audio::GameParameterStorage*, RED4ext::CName, float);
// END_DECL
// START_DECL FUNC 46845744
typedef float* RED4ext::audio::GameParameterStorage::SetValue(RED4ext::audio::GameParameterStorage*, RED4ext::CName, float, float);
// END_DECL
// START_DECL FUNC 46848272
typedef RED4ext::audio::Emitter* RED4ext::audio::Emitters::GetEmitterForEntityID(RED4ext::audio::Emitters*, RED4ext::ent::EntityID, RED4ext::CName);
// END_DECL
// START_DECL FUNC 46847312
typedef RED4ext::audio::Emitter* RED4ext::audio::Emitters::GetOrCreateEmitter(RED4ext::audio::Emitters*, RED4ext::ent::EntityID, RED4ext::CName);
// END_DECL
// START_DECL FUNC 3613984
typedef void RED4ext::audio::MetadataManager::~MetadataManager(RED4ext::audio::MetadataManager*);
// END_DECL
// START_DECL FUNC 30781904
typedef float RED4ext::physics::VehiclePhysicsInsert1::SinMath(RED4ext::physics::VehiclePhysicsInsert1*, float);
// END_DECL
// START_DECL FUNC 30468144
typedef bool RED4ext::vehicle::PhysicsData::UsesAlternativeChassisMass(RED4ext::vehicle::PhysicsData*);
// END_DECL
// START_DECL FUNC 30466560
typedef void RED4ext::vehicle::PhysicsData::SetUsesNormalChassisMass(RED4ext::vehicle::PhysicsData*);
// END_DECL
// START_DECL FUNC 30465728
typedef void RED4ext::vehicle::PhysicsData::UpdateChassis(RED4ext::vehicle::PhysicsData*);
// END_DECL
// START_DECL FUNC 30465440
typedef void RED4ext::vehicle::PhysicsData::ApplyForceAtPosition(RED4ext::vehicle::PhysicsData*, RED4ext::Vector3*, RED4ext::Vector3*);
// END_DECL
// START_DECL FUNC 30463904
typedef void RED4ext::vehicle::PhysicsData::ApplyTorqueAtPosition(RED4ext::vehicle::PhysicsData*, RED4ext::Vector3*, RED4ext::Vector3*);
// END_DECL
// START_DECL FUNC 30465920
typedef void RED4ext::vehicle::PhysicsData::AddTorque(RED4ext::vehicle::PhysicsData*, RED4ext::Vector3*);
// END_DECL
// START_DECL FUNC 30742448
typedef void RED4ext::physics::VehiclePhysicsInsert2::SetsUnk160Unk15C(RED4ext::physics::VehiclePhysicsInsert2*, float);
// END_DECL
// START_DECL FUNC 30509232
typedef bool RED4ext::vehicle::Physics::ReadWorldTransform(RED4ext::vehicle::Physics*, RED4ext::WorldTransform*);
// END_DECL
// START_DECL FUNC 30508656
typedef void RED4ext::vehicle::Physics::UpdateDataWorldTransform(RED4ext::vehicle::Physics*, RED4ext::WorldTransform*, bool);
// END_DECL
// START_DECL FUNC 30510112
typedef bool RED4ext::vehicle::Physics::GetSomethingWaterParams(RED4ext::vehicle::Physics*);
// END_DECL
// START_DECL FUNC 30512880
typedef double RED4ext::vehicle::Physics::LoadHasBeenFlippedOver(RED4ext::vehicle::Physics*, RED4ext::Handle<RED4ext::game::data::VehicleDriveModelData_Record>*);
// END_DECL
// START_DECL FUNC 30513184
typedef void RED4ext::vehicle::Physics::SetUnkA0ToOne(RED4ext::vehicle::Physics*);
// END_DECL
// START_DECL FUNC 30516640
typedef void RED4ext::vehicle::Physics::ComputeSleep(RED4ext::vehicle::Physics*, float);
// END_DECL
// START_DECL FUNC 3594096
typedef RED4ext::vehicle::BaseObject* RED4ext::vehicle::Physics::GetVehicle(RED4ext::vehicle::Physics*);
// END_DECL
// START_DECL FUNC 30672656
typedef bool RED4ext::vehicle::Physics::IsInAirFromVehicle_func(RED4ext::vehicle::Physics*);
// END_DECL
// START_DECL FUNC 30667680
typedef void RED4ext::vehicle::UnkD10::Reset(RED4ext::vehicle::UnkD10*, int32_t);
// END_DECL
// START_DECL FUNC 30670880
typedef float RED4ext::vehicle::WheeledPhysics::GetEnergy(RED4ext::vehicle::WheeledPhysics*);
// END_DECL
// START_DECL FUNC 30671248
typedef int64_t RED4ext::vehicle::WheeledPhysics::GetNumberOfWheelsTouchingGround(RED4ext::vehicle::WheeledPhysics*);
// END_DECL
// START_DECL FUNC 30695248
typedef void RED4ext::vehicle::WheeledPhysics::SomethingWheels(RED4ext::vehicle::WheeledPhysics*, float);
// END_DECL
// START_DECL FUNC 30653168
typedef void RED4ext::vehicle::WheeledPhysics::FourWheelTorque(RED4ext::vehicle::WheeledPhysics*, uint8_t, uint8_t, float, RED4ext::Transform*);
// END_DECL
// START_DECL FUNC 30694288
typedef void RED4ext::vehicle::WheeledPhysics::Update(RED4ext::vehicle::WheeledPhysics*);
// END_DECL
// START_DECL FUNC 30665840
typedef void RED4ext::vehicle::WheeledPhysics::UpdatePassengerAnim(RED4ext::vehicle::WheeledPhysics*, RED4ext::anim::AnimFeature_VehiclePassenger*);
// END_DECL
// START_DECL FUNC 30515056
typedef int64_t RED4ext::vehicle::WheeledPhysics::SetIsMovingOthers(RED4ext::vehicle::WheeledPhysics*, bool);
// END_DECL
// START_DECL FUNC 30691632
typedef void RED4ext::vehicle::WheeledPhysics::TurningRollFactorStuff(RED4ext::vehicle::WheeledPhysics*, float);
// END_DECL
// START_DECL FUNC 30690608
typedef void RED4ext::vehicle::WheeledPhysics::SetupInsert(RED4ext::vehicle::WheeledPhysics*);
// END_DECL
// START_DECL FUNC 30658208
typedef float* RED4ext::vehicle::WheeledPhysics::FourWheelTorqueStuff(RED4ext::vehicle::WheeledPhysics*, float);
// END_DECL
// START_DECL FUNC 30667360
typedef void RED4ext::vehicle::WheeledPhysics::FixedUpdate(RED4ext::vehicle::WheeledPhysics*, int64_t, int64_t, int64_t, int64_t);
// END_DECL
// START_DECL FUNC 30670240
typedef float RED4ext::vehicle::WheeledPhysics::Unk15CStuff(RED4ext::vehicle::WheeledPhysics*);
// END_DECL
// START_DECL FUNC 30768736
typedef double RED4ext::vehicle::WheeledPhysics::ApplyWaterResistance(RED4ext::vehicle::WheeledPhysics*, void*, float);
// END_DECL
// START_DECL FUNC 30505360
typedef void RED4ext::vehicle::WheeledPhysics::ProcessAirControl(RED4ext::vehicle::WheeledPhysics*, float);
// END_DECL
// START_DECL FUNC 30675824
typedef void RED4ext::vehicle::WheeledPhysics::SomethingWheelRayTrace(RED4ext::vehicle::WheeledPhysics*, uint32_t);
// END_DECL
// START_DECL FUNC 30643376
typedef int64_t RED4ext::vehicle::CarPhysics::AnimationUpdate(RED4ext::vehicle::CarPhysics*, float);
// END_DECL
// START_DECL FUNC 30620976
typedef int64_t RED4ext::vehicle::BikePhysics::AnimationUpdate(RED4ext::vehicle::BikePhysics*);
// END_DECL
// START_DECL FUNC 7534064
typedef RED4ext::audio::EmitterPosition* RED4ext::audio::Thing::UpdateEmitterPosition(RED4ext::audio::Thing*, RED4ext::ent::EntityID, RED4ext::CName, RED4ext::Vector4*);
// END_DECL
